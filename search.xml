<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【nerf】汇总笔记</title>
    <url>/2022/work/nerf/%E3%80%90nerf%E3%80%91%E6%B1%87%E6%80%BB%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">NeRF（Neural Radiance Fields）是指用神经辐射场隐式重建三维场景的方法，一下包括论文、代码、创新和突破点</div>
          </div>
<span id="more"></span>
<p> <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91%E6%B1%87%E6%80%BB%E7%AC%94%E8%AE%B0/3c7ca874aed3436b88ba51edf0749e61.png" alt="MLP 网络的创建 "></p>
<h2 id="应用方法"><a href="#应用方法" class="headerlink" title="应用方法"></a>应用方法</h2><h3 id="位置编码"><a href="#位置编码" class="headerlink" title="位置编码     "></a>位置编码     <span class="label info">nerf</span></h3><h4 id="nerf-pytorch的Positional-Encoding"><a href="#nerf-pytorch的Positional-Encoding" class="headerlink" title="nerf-pytorch的Positional Encoding"></a>nerf-pytorch的<strong>Positional Encoding</strong></h4><script type="math/tex; mode=display">
\gamma(p)=\left(\sin \left(2^{0} \pi p\right), \cos \left(2^{0} \pi p\right), \cdots, \sin \left(2^{L-1} \pi p\right), \cos \left(2^{L-1} \pi p\right)\right)</script><h4 id="instant-ngp的-多分辨率哈希编码"><a href="#instant-ngp的-多分辨率哈希编码" class="headerlink" title="instant-ngp的 多分辨率哈希编码"></a>instant-ngp的 <strong>多分辨率哈希编码</strong></h4><p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91%E6%B1%87%E6%80%BB%E7%AC%94%E8%AE%B0/1664429458270.png" alt="1664429458270"></p>
<h3 id="volume-rendering-方式"><a href="#volume-rendering-方式" class="headerlink" title="volume rendering 方式        "></a>volume rendering 方式    <span class="label info">nerf</span>    <span class="label primary">mipnerf</span></h3><h4 id="离散的体素渲染方程："><a href="#离散的体素渲染方程：" class="headerlink" title="离散的体素渲染方程："></a>离散的体素渲染方程：</h4><script type="math/tex; mode=display">
\hat{C}(\mathbf{r})=\sum_{i=1}^{N} T_{i}\left(1-\exp \left(-\sigma_{i} \delta_{i}\right)\right) \mathbf{c}_{i}</script><h3 id="分层取样（Hierarchical-volume-sampling）"><a href="#分层取样（Hierarchical-volume-sampling）" class="headerlink" title="分层取样（Hierarchical volume sampling） "></a>分层取样（Hierarchical volume sampling） <span class="label info">nerf</span></h3><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>like</tag>
        <tag>nerf</tag>
        <tag>work</tag>
      </tags>
  </entry>
  <entry>
    <title>【nerf】Block-NeRF笔记</title>
    <url>/2022/work/nerf/%E3%80%90nerf%E3%80%91Block-NeRF%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="note warning">
            <div align="center">把大场景分成多个小场景，分别训练，最后合成分块优点：方便**更新、扩展**，可以**节省内存**以训练超大规模nerf</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<ul>
<li><p>谷歌Waymo研究人员用<strong>280 万张</strong>图像中渲染了<strong>旧金山整个街区</strong>，分块共<strong>35个</strong>，是<strong>迄今为止规模最大</strong>的nerf</p>
<p>（谷歌Waymo 是一家研发自动驾驶汽车的公司 ）<img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Block-NeRF%E7%AC%94%E8%AE%B0/1667226872521-1667297751588.png" alt="1667226872521"></p>
</li>
<li><p><strong>块的范围选择</strong>：每个十字路口作为圆心，均匀排列的球，半径满足覆盖街道的75%，保证任意两个Block-NeRF之间有50％的重叠。</p>
</li>
<li><p>创新点：</p>
<ol>
<li>训练单独的block：<strong>Appearance</strong> Embeddings、Learned <strong>Pose</strong> Refinement、<strong>Exposure</strong> Input（还有Transient Objects、Visibility Prediction，没在实验表格中）</li>
</ol>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Block-NeRF%E7%AC%94%E8%AE%B0/1667118074452-1667297751590.png" alt="1667118074452"></p>
<ol>
<li>block相关：Block-NeRF Selection、Block-NeRF Compositing、Appearance Matching</li>
</ol>
</li>
</ul>
<h4 id="相关：-mip-nerf、nerf-w、barf"><a href="#相关：-mip-nerf、nerf-w、barf" class="headerlink" title="相关： mip-nerf、nerf-w、barf"></a>相关： <strong>mip-nerf</strong>、<strong>nerf-w</strong>、<strong>barf</strong></h4><h2 id="background"><a href="#background" class="headerlink" title="background"></a>background</h2><p>早期工作通常侧重于<strong>small-scale</strong>或者<strong>object-centric（以对象为中心）</strong>的场景重建</p>
<h2 id="一、训练单独的block"><a href="#一、训练单独的block" class="headerlink" title="一、训练单独的block"></a>一、训练单独的block</h2><p>是<strong>mip-NeRF</strong>中提出的模型的扩展</p>
<blockquote>
<p>如果NeRF在每个<strong>pixel</strong>用<strong>single ray</strong>来采样，会出现模糊和锯齿</p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Block-NeRF%E7%AC%94%E8%AE%B0/新建文件夹/暂时/nerf/Block-nerf汇报/讲解Block-nerf/1667295256779.png" alt="1667295256779" style="zoom: 50%;"></p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Block-NeRF%E7%AC%94%E8%AE%B0/新建文件夹/暂时/nerf/Block-nerf汇报/讲解Block-nerf/1667296893078.png" alt="1667296893078" style="zoom: 50%;"></p>
<p>通过有效地渲染抗锯齿圆锥截头体而不是射线，mip-NeRF 减少了令人反感的锯齿伪影并显着提高了 NeRF 表示精细细节的能力，同时也比 NeRF <strong>快 7%</strong> 和<strong>一半的大小</strong>。 与 NeRF 相比，mip-NeRF 在使用 NeRF 呈现的数据集上将平均错误率降低了 <strong>17%</strong>，在我们呈现的该数据集的具有挑战性的多尺度变体上降低了 <strong>60%</strong>。  Mip-NeRF 还能够在我们的多尺度数据集上匹配蛮力超采样 NeRF 的准确性，同时<strong>快 22 倍</strong>。 （翻译自mip-nerf摘要）</p>
</blockquote>
<h3 id="1-Appearance-Embeddings"><a href="#1-Appearance-Embeddings" class="headerlink" title="1. Appearance Embeddings"></a>1. <strong>Appearance</strong> Embeddings</h3><p>借用<strong>nerf-W</strong>的外观编码，用<strong>Generative Latent Optimization</strong>优化外观嵌入向量</p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Block-NeRF%E7%AC%94%E8%AE%B0/1667264387582-1667297751590.png" alt="1667264387582"></p>
<h4 id="NeRF-W"><a href="#NeRF-W" class="headerlink" title="NeRF-W"></a>NeRF-W</h4><h3 id="2-Learned-Pose-Refinement"><a href="#2-Learned-Pose-Refinement" class="headerlink" title="2. Learned Pose Refinement"></a>2. Learned <strong>Pose</strong> Refinement</h3><p>与nerf本身一起学习优化<strong>平移</strong>和<strong>旋转</strong>偏移量</p>
<h4 id="barf、A-NeRF、NeRF-、iNeRF"><a href="#barf、A-NeRF、NeRF-、iNeRF" class="headerlink" title="barf、A-NeRF、NeRF-、iNeRF"></a><strong>barf</strong>、A-NeRF、NeRF-、iNeRF</h4><h3 id="3-Exposure-Input"><a href="#3-Exposure-Input" class="headerlink" title="3. Exposure Input"></a>3. <strong>Exposure</strong> Input</h3><p>把相机的曝光参数作为输入，$\gamma_{PE}=shutter \quad speed  \times analog \quad gain / t$</p>
<p>$\gamma_{PE}$用的是四级正弦位置编码，$t$是一个系数，实验中取1000</p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Block-NeRF%E7%AC%94%E8%AE%B0/1667265226170-1667297751590.png" alt="1667265226170"></p>
<h3 id="4-Transient-Objects运动物体"><a href="#4-Transient-Objects运动物体" class="headerlink" title="4. Transient Objects运动物体"></a>4. Transient Objects运动物体</h3><p>用语义分割模型，<strong>忽略动态物体</strong>，例如汽车、行人</p>
<p>10</p>
<h3 id="5-Visibility-Prediction（实际上好像没用上）"><a href="#5-Visibility-Prediction（实际上好像没用上）" class="headerlink" title="5. Visibility Prediction（实际上好像没用上）"></a>5. Visibility Prediction（实际上好像没用上）</h3><p>用于判断一个区域是否可见，网络很小，可以独立运行</p>
<p>用一个小MLP $f_{v}$ ，输入<strong>位置</strong>和<strong>角度</strong>，输出该点<strong>可见性</strong>，进入射线采样计算</p>
<p>用于<strong>选择Block-NeRF</strong>，和<strong>确定在两个 NeRF 之间执行外观匹配的位置</strong></p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Block-NeRF%E7%AC%94%E8%AE%B0/1667293450480-1667297751590.png" alt="1667293450480"></p>
<h4 id="NeRV"><a href="#NeRV" class="headerlink" title="NeRV"></a>NeRV</h4><h2 id="二、合并多个Block-NeRF"><a href="#二、合并多个Block-NeRF" class="headerlink" title="二、合并多个Block-NeRF"></a>二、合并多个Block-NeRF</h2><h3 id="Block-NeRF筛选机制"><a href="#Block-NeRF筛选机制" class="headerlink" title="Block-NeRF筛选机制"></a>Block-NeRF筛选机制</h3><ul>
<li>只考虑目标视点半径范围内的Block-NeRFs</li>
<li>计算Block-NeRF的<strong>可见性</strong>（对应上面的Visibility Prediction），若<strong>平均可见性</strong>低于阈值，则舍弃</li>
</ul>
<h3 id="Block-NeRF合并"><a href="#Block-NeRF合并" class="headerlink" title="Block-NeRF合并"></a>Block-NeRF合并</h3><p>把最终每个Block-NeRF渲染的图像，用<strong>反距离加权</strong>（IDW）——保证各个Block-NeRF间平滑过渡</p>
<blockquote>
<p>他们还探索了相关的加权方法（没读懂，很拗口），但是会导致伪影和时间不连贯</p>
<p>We also explored a variant of IDW where the interpolation was performed over projected 3D points predicted by the expected Block-NeRF depth. This method suffers when the depth prediction is incorrect, leading to artifacts and temporal incoherence.</p>
<p>他们也尝试了用可见性（Visibility Prediction）加权，对远处重建更清晰，但是会导致时间的不连贯</p>
<p>Finally, we experiment with weighing the Block-NeRFs based on per-pixel and per-image predicted visibility. This produces sharper reconstructions of further-away areas but is prone to <strong>temporal inconsistency</strong>. Therefore, these methods are best used only when rendering still images. We provide further details in the supplement.</p>
</blockquote>
<h3 id="Appearance-Matching-外观匹配"><a href="#Appearance-Matching-外观匹配" class="headerlink" title="Appearance Matching 外观匹配"></a><strong>Appearance</strong> Matching 外观匹配</h3><p>如果每个NeRF单独训练，<strong>同样的外观编码可能会对应不同的天气情况</strong>，导致块交界处无法正确合并。</p>
<p>对于有多个Block-NeRF覆盖的区域，用一小段时间（约100次迭代）<strong>单独训练外观编码</strong>，而完全停止NeRF网络的更新    </p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Block-NeRF%E7%AC%94%E8%AE%B0/1667292838757-1667297751590.png" alt="1667292838757"></p>
<h2 id="Results-and-Experiments"><a href="#Results-and-Experiments" class="headerlink" title="Results and Experiments"></a>Results and Experiments</h2><ol>
<li><p><strong>采集数据</strong>方法：车顶装八个方向摄像头，行驶采集图像</p>
</li>
<li><p><strong>Model Ablations</strong></p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Block-NeRF%E7%AC%94%E8%AE%B0/新建文件夹/暂时/nerf/Block-nerf汇报/讲解Block-nerf/1667118074452.png" alt="1667118074452" style="zoom:67%;"></p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Block-NeRF%E7%AC%94%E8%AE%B0/新建文件夹/暂时/nerf/Block-nerf汇报/讲解Block-nerf/1667293581197.png" alt="1667293581197" style="zoom: 50%;"></p>
<p>| 方法       | 效果                                                         |<br>| ————— | —————————————————————————————— |<br>| Appearance | 去掉伪影                                                     |<br>| Pose Opt   | 变清晰                                                       |<br>| Exposure   | 略微改善，便于改变结果的曝光度to change the exposure during inference |</p>
</li>
<li><p>块<strong>越小越好</strong><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Block-NeRF%E7%AC%94%E8%AE%B0/1667118457009-1667297751590.png" alt="1667118457009"></p>
</li>
<li><p>插值方法</p>
</li>
</ol>
<h2 id="主要问题"><a href="#主要问题" class="headerlink" title="主要问题"></a>主要问题</h2><h3 id="瞬态物体解决方法"><a href="#瞬态物体解决方法" class="headerlink" title="瞬态物体解决方法"></a>瞬态物体解决方法</h3><ul>
<li><p><strong>学习瞬态对象</strong>learning transient objects ：<strong>NeRF-W</strong></p>
</li>
<li><p><strong>对瞬态对象建模</strong>directly modeling dynamic objects ：43、68</p>
</li>
</ul>
<h3 id="sampling-unbounded-volumetric-representations解决方法"><a href="#sampling-unbounded-volumetric-representations解决方法" class="headerlink" title="sampling unbounded volumetric representations解决方法"></a>sampling unbounded volumetric representations解决方法</h3><p><strong>NeRF++</strong>、<strong>Mip-NeRF 360</strong></p>
<h3 id="加速渲染"><a href="#加速渲染" class="headerlink" title="加速渲染"></a>加速渲染</h3><ul>
<li><strong>缓存</strong>NeRF caching techniques： <strong>Fastnerf</strong>、25、73</li>
<li><strong>稀疏体素网格</strong>sparse voxel grids：34</li>
<li>其他：41、59、72</li>
</ul>
]]></content>
      <tags>
        <tag>nerf</tag>
        <tag>work</tag>
        <tag>Block-NeRF</tag>
      </tags>
  </entry>
  <entry>
    <title>【开关电源】学习3 —— buck-boost</title>
    <url>/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A03%E2%80%94%E2%80%94buck-boost/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A03%E2%80%94%E2%80%94buck-boost/1663599045317.png" alt="1663599045317"></p>
<ul>
<li>演变过程建议看定名芳老师讲的！！</li>
</ul>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>开关电源</tag>
        <tag>learning</tag>
      </tags>
  </entry>
  <entry>
    <title>【开关电源】进阶1 —— 稳定性判断</title>
    <url>/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E8%BF%9B%E9%98%B61%E2%80%94%E2%80%94%E7%A8%B3%E5%AE%9A%E6%80%A7%E5%88%A4%E6%96%AD/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">定名芳老师讲的真好，爱了爱了！</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="辐角原理"><a href="#辐角原理" class="headerlink" title="辐角原理"></a>辐角原理</h2><p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E8%BF%9B%E9%98%B61%E2%80%94%E2%80%94%E7%A8%B3%E5%AE%9A%E6%80%A7%E5%88%A4%E6%96%AD/1663599708816.png" alt="1663599708816"></p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>开关电源</tag>
        <tag>learning</tag>
      </tags>
  </entry>
  <entry>
    <title>【开关电源】学习2——boost</title>
    <url>/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A02%E2%80%94%E2%80%94boost/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>  <img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A02%E2%80%94%E2%80%94boost/1663597318714.png" alt="1663597318714"></p>
<p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A02%E2%80%94%E2%80%94boost/1663598269759.png" alt="1663598269759"></p>
<p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A02%E2%80%94%E2%80%94boost/1663598343134.png" alt="1663598343134"></p>
<p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A02%E2%80%94%E2%80%94boost/1663597764124.png" alt="1663597764124"></p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>开关电源</tag>
        <tag>learning</tag>
      </tags>
  </entry>
  <entry>
    <title>【开关电源】学习1 —— buck</title>
    <url>/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A01%E2%80%94%E2%80%94buck/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">全部参考 [开关电源入门微视频_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV13K4y1t7ET?spm_id_from=333.337.search-card.all.click&vd_source=1d44e083acfbac7f1e1a9da4097482dc) 同时推荐 [定明芳老师的个人空间_哔哩哔哩_bilibili](https://space.bilibili.com/594893946/video) </div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="1-初识开关电源"><a href="#1-初识开关电源" class="headerlink" title="1. 初识开关电源"></a>1. 初识开关电源</h2><h4 id="1-1-开关电源的优点"><a href="#1-1-开关电源的优点" class="headerlink" title="1.1. 开关电源的优点"></a>1.1. 开关电源的优点</h4><p>功耗小，体积小</p>
<h4 id="1-2-开关电源简单版"><a href="#1-2-开关电源简单版" class="headerlink" title="1.2. 开关电源简单版"></a>1.2. 开关电源简单版</h4><p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A01%E2%80%94%E2%80%94buck/1663507058896.png" alt="1663507058896"></p>
<ol>
<li><p>避免关断时高电流</p>
</li>
<li><p>避免耗费功率</p>
</li>
<li><p>避免顺势高压（二极管续流）</p>
</li>
</ol>
<h2 id="2-计算"><a href="#2-计算" class="headerlink" title="2. 计算"></a>2. 计算</h2><p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A01%E2%80%94%E2%80%94buck/1663582916508.png" alt="1663582916508"></p>
<p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A01%E2%80%94%E2%80%94buck/1663583123696.png" alt="1663583123696"></p>
<p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A01%E2%80%94%E2%80%94buck/1663596608307.png" alt="1663596608307"></p>
<p>▲I是电流纹波</p>
<p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A01%E2%80%94%E2%80%94buck/1663596664682.png" alt="1663596664682"></p>
<p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A01%E2%80%94%E2%80%94buck/1663596760690.png" alt="1663596760690"></p>
<p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A01%E2%80%94%E2%80%94buck/1663632762752.png" alt="1663632762752"></p>
<h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>buck电路的其他形式</p>
<p><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E5%AD%A6%E4%B9%A01%E2%80%94%E2%80%94buck/1663760481426.png" alt="1663760481426"></p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>开关电源</tag>
        <tag>learning</tag>
      </tags>
  </entry>
  <entry>
    <title>【bard】Linux迷你电脑</title>
    <url>/2022/work/%E5%B5%8C%E5%85%A5%E5%BC%8F%E9%A1%B9%E7%9B%AE/bard/%E3%80%90bard%E3%80%91Linux%E8%BF%B7%E4%BD%A0%E7%94%B5%E8%84%91/</url>
    <content><![CDATA[<div class="note info">
            <div align="center">基于全志 F1C200s，从瞎抄乱画开始</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="理解开发流程"><a href="#理解开发流程" class="headerlink" title="理解开发流程"></a>理解开发流程</h2><h4 id="了解-F1C200s-开发步骤"><a href="#了解-F1C200s-开发步骤" class="headerlink" title="了解 F1C200s 开发步骤"></a>了解 F1C200s 开发步骤</h4><p>   <a href="https://www.cnblogs.com/twzy/p/14714651.html">小白自制Linux开发板 一. 瞎抄原理图与乱画PCB - 淡墨青云 - 博客园 (cnblogs.com)</a> </p>
<p>机器人的虚拟形象使用了Cortana的模型;NLP功能主要是使用讯飞开放平台实现;CV部分基于OpenCV和JNI开发;视频中语音有两种唤醒方式，关键词唤醒和利用手机额头的距离传感器唤醒;智能家居的网关是自己设计的，基于ESP系列的WiFi芯片…</p>
<p> <img src="/2022/work/%E5%B5%8C%E5%85%A5%E5%BC%8F%E9%A1%B9%E7%9B%AE/bard/%E3%80%90bard%E3%80%91Linux%E8%BF%B7%E4%BD%A0%E7%94%B5%E8%84%91/v2-5443f85fbc97f22e41c10a20a9760742_1440w.jpg" alt="img">   </p>
<p> Android Native </p>
<h2 id="常用接口"><a href="#常用接口" class="headerlink" title="常用接口"></a>常用接口</h2><div class="table-container">
<table>
<thead>
<tr>
<th>接口</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>SDIO</td>
<td>SD卡等</td>
</tr>
<tr>
<td>OTG</td>
<td>TYPE-C、安卓口等</td>
</tr>
<tr>
<td>CSI</td>
<td>摄像头（为啥不用USB）</td>
</tr>
<tr>
<td>SPI、I2C、I2S、RGB、LCD、USB</td>
</tr>
</tbody>
</table>
</div>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>一切从偶然捡到一块树莓派开始，直到不知为啥把它弄坏了。</p>
<p>于是准备从头做一个小电脑。</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>like</tag>
        <tag>work</tag>
        <tag>Linux</tag>
        <tag>bard</tag>
        <tag>PCB</tag>
        <tag>全志F1C200s</tag>
      </tags>
  </entry>
  <entry>
    <title>以下都是top0</title>
    <url>/2022/%E4%B8%80%E4%B8%8B%E9%83%BD%E6%98%AF0/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>【psutil】检测电脑网速等</title>
    <url>/2022/library/python/%E3%80%90psutil%E3%80%91%E6%A3%80%E6%B5%8B%E7%94%B5%E8%84%91%E7%BD%91%E9%80%9F%E7%AD%89/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<blockquote>
<p>打算做一个能嵌入到win底栏的显示网速的，<a href="https://blog.csdn.net/weixin_44446598/article/details/115031335">CSDN这篇</a>，看到这篇心痒痒</p>
</blockquote>
<p><a href="https://pypi.org/project/psutil/">官方文档</a></p>
<p>获取系统运行的进程和系统利用率</p>
<p>包括CPU、内存、磁盘、网络等的信息</p>
<p>最靠谱</p>
<h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><h4 id="获取网速"><a href="#获取网速" class="headerlink" title="获取网速"></a>获取网速</h4><p><code>psutil.net_io_counter([pernic])</code>，当pernic为True时，则分开列出所有网卡的统计信息。否则数据均所有网卡为总和。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getNet</span>():</span><br><span class="line">    sent_before = psutil.net_io_counters().bytes_sent  <span class="comment"># 已发送的流量</span></span><br><span class="line">    recv_before = psutil.net_io_counters().bytes_recv  <span class="comment"># 已接收的流量</span></span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    sent_now = psutil.net_io_counters().bytes_sent</span><br><span class="line">    recv_now = psutil.net_io_counters().bytes_recv</span><br><span class="line">    sent = (sent_now - sent_before)/<span class="number">1024</span>  <span class="comment"># 算出1秒后的差值</span></span><br><span class="line">    recv = (recv_now - recv_before)/<span class="number">1024</span></span><br><span class="line">    <span class="built_in">print</span>(time.strftime(<span class="string">&quot; [%Y-%m-%d %H:%M:%S] &quot;</span>, time.localtime()))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;上传：&#123;0&#125;KB/s&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;%.2f&quot;</span>%sent))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;下载：&#123;0&#125;KB/s&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;%.2f&quot;</span>%recv))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>*<span class="number">32</span>)</span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>python</tag>
        <tag>library</tag>
        <tag>psutil</tag>
      </tags>
  </entry>
  <entry>
    <title>【模块】OLED</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E6%A8%A1%E5%9D%97/%E3%80%90%E6%A8%A1%E5%9D%97%E3%80%91OLED/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>oled有 i2c 或 spi 通信的，若为 spi 使用 Transmit only Master 模式</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>引脚</th>
<th>USER LABLE</th>
</tr>
</thead>
<tbody>
<tr>
<td>DO</td>
<td>SPI_SCK</td>
</tr>
<tr>
<td>D1</td>
<td>SPI_MOSI</td>
</tr>
<tr>
<td>RES</td>
<td>OLED_RES</td>
</tr>
<tr>
<td>DC</td>
<td>OLED_DC</td>
</tr>
<tr>
<td>CS</td>
<td>OLED_CS</td>
</tr>
</tbody>
</table>
</div>
<p>设置对应USER LABLE即可直接使用库</p>
<ul>
<li>初始化</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">OLED_Init();</span><br><span class="line">OLED_ColorTurn (<span class="number">0</span>);<span class="comment">//0正常显示，1 反色显示</span></span><br><span class="line">OLED_DisplayTurn(<span class="number">0</span>);<span class="comment">//0正常显示 1 屏幕翻转显示</span></span><br><span class="line">OLED_Refresh();</span><br></pre></td></tr></table></figure>
<blockquote>
<p>每次绘制后，需要 refresh 一下</p>
</blockquote>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>模块</tag>
        <tag>OLED</tag>
        <tag>嵌入式</tag>
      </tags>
  </entry>
  <entry>
    <title>【嵌入式积累】阅读寄存器手册</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A7%AF%E7%B4%AF/%E3%80%90%E5%B5%8C%E5%85%A5%E5%BC%8F%E7%A7%AF%E7%B4%AF%E3%80%91%E9%98%85%E8%AF%BB%E5%AF%84%E5%AD%98%E5%99%A8%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<blockquote>
<p>为了移植mpu6050程序到mpu6500上，总算是亲身对照寄存器看了。不过头等大事——寄存器操作都需要做什么，还是没搞懂</p>
</blockquote>
<h4 id="陀螺仪寄存器库操作"><a href="#陀螺仪寄存器库操作" class="headerlink" title="陀螺仪寄存器库操作"></a>陀螺仪寄存器库操作</h4><ol>
<li><p>初始化</p>
<p>| WHO_AM_I       | PWR_MGMT_1   | SMPLRT_DIV               | ACCEL_CONFIG，GYRO_CONFIG    |<br>| ——————— | —————— | ———————————— | —————————————— |<br>| 获取device  ID | 重置一切设置 | 设置分频系数，即采样频率 | 设置加速度和角度的采样上下限 |</p>
</li>
<li><p>读取数据</p>
<p>| ACCEL_XOUT_H | GYRO_XOUT_H | TEMP_OUT_H |<br>| —————— | —————- | ————— |<br>| 加速度       | 角度        | 温度       |</p>
</li>
</ol>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>嵌入式</tag>
        <tag>积累</tag>
        <tag>寄存器</tag>
      </tags>
  </entry>
  <entry>
    <title>【模块】陀螺仪</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E6%A8%A1%E5%9D%97/%E3%80%90%E6%A8%A1%E5%9D%97%E3%80%91%E9%99%80%E8%9E%BA%E4%BB%AA/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>白嫖到三种模块，其实很相似：mpu6050、mpu6500、gy25</p>
<h2 id="mpu6050"><a href="#mpu6050" class="headerlink" title="mpu6050"></a>mpu6050</h2><p>i2c通信</p>
<p>测量三轴加速度，三轴角度，温度</p>
<p>详见【HAL库】i2c通信（mpu6050）</p>
<h2 id="mpu6500"><a href="#mpu6500" class="headerlink" title="mpu6500"></a>mpu6500</h2><p>支持 i2c 和 spi 通信，通信速度比 mpu6050 慢8倍</p>
<p>其他同 mpu6050</p>
<p>mpu6050 的例程可以通用</p>
<h2 id="gy25"><a href="#gy25" class="headerlink" title="gy25"></a>gy25</h2><p><img src="C:/Users/DELL/AppData/Roaming/Typora/typora-user-images/image-20221229234554414.png" alt="image-20221229234554414"></p>
<p>支持 i2c 或 串口 通信</p>
<h4 id="串口传输数据格式"><a href="#串口传输数据格式" class="headerlink" title="串口传输数据格式"></a>串口传输数据格式</h4><div class="table-container">
<table>
<thead>
<tr>
<th>[0]</th>
<th>[1:6]</th>
<th>[7]</th>
</tr>
</thead>
<tbody>
<tr>
<td>0xAA</td>
<td></td>
<td>0x55</td>
</tr>
<tr>
<td>帧头</td>
<td>每两位为一个数据，依次是航向、俯仰、翻滚</td>
<td>帧尾</td>
</tr>
</tbody>
</table>
</div>
<h4 id="发送命令"><a href="#发送命令" class="headerlink" title="发送命令"></a>发送命令</h4><div class="table-container">
<table>
<thead>
<tr>
<th>命令</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>0xA5+0x51</td>
<td>查询模式，直接返回角度值，需每次读取都发送</td>
</tr>
<tr>
<td>0xA5+0x52</td>
<td>自动模式，直接返回角度值，只需要初始化时发一次</td>
</tr>
<tr>
<td>0xA5+0x53</td>
<td>自动模式，ASCII 码输出，便于直接电脑串口助手查看</td>
</tr>
<tr>
<td>0xA5+0x54</td>
<td>校正模式，校正俯仰横滚角0 度，需要保持水平时候发送</td>
</tr>
<tr>
<td>0xA5+0x55</td>
<td>校正模式，校正航向0 度，航向任意角度清零</td>
</tr>
</tbody>
</table>
</div>
<p>不知怎的，没搞懂我的串口调试助手发送16进制</p>
<p>若用 i2c 通信模式，也可以直接用 mpu6050 的库</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>模块</tag>
        <tag>嵌入式</tag>
        <tag>陀螺仪</tag>
      </tags>
  </entry>
  <entry>
    <title>【HAL库】i2c通信（mpu6050）</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E8%BD%AF%E4%BB%B6/%E3%80%90HAL%E5%BA%93%E3%80%91%E7%AC%94%E8%AE%B0/%E3%80%90HAL%E5%BA%93%E3%80%91i2c%E9%80%9A%E4%BF%A1%EF%BC%88mpu6050%EF%BC%89/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="i2c"><a href="#i2c" class="headerlink" title="i2c"></a>i2c</h2><p>一种通信方式</p>
<h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>未知，用两根线，SDA，SCK</p>
<h2 id="mpu6050"><a href="#mpu6050" class="headerlink" title="mpu6050"></a>mpu6050</h2><p>陀螺仪+加速度计+温度计</p>
<p>i2c通信速度高达400KHz</p>
<p>自带FIFO（不清楚）</p>
<h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p>​    接线时只需要接两根数据线和 vcc，gnd 共四根线即可。</p>
<ol>
<li><p>定义一个结构体用于接收</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">MPU6050_t mpu6050data;</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化 </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(MPU6050_Init(&amp;hi2c1)==<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 等待几秒</span></span><br><span class="line"><span class="built_in">printf</span> (<span class="string">&quot;****** MPU6050 Test 3s ******\r\n&quot;</span>);</span><br><span class="line">HAL_Delay (<span class="number">1000</span>);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">&quot;****** MPU6050 Test 2s ******\r\n&quot;</span>);</span><br><span class="line">HAL_Delay (<span class="number">1000</span>);</span><br><span class="line"><span class="built_in">printf</span> (<span class="string">&quot;****** MPU6050 Test 1s ******\r\n&quot;</span>);</span><br><span class="line">HAL_Delay (<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>读取</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">MPU6050_Read_Accel(&amp;hi2c1,&amp;mpu6050data);</span><br><span class="line">MPU6050_Read_Gyro(&amp;hi2c1,&amp;mpu6050data);</span><br><span class="line">MPU6050_Read_Temp(&amp;hi2c1,&amp;mpu6050data);</span><br></pre></td></tr></table></figure>
<h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4></li>
</ol>
<p>芯片内置 dmp，直接可以帮你滤波，甚至识别运动。</p>
<p>模块封装都会引出很多引脚，平时只用4个</p>
<p>XDA，XCL是考虑到使用芯片内置 dmp 计算时，可以用9轴（加上磁场传感器），其中磁场传感器的外界接口就是这俩，用 i2c通信。（很少用）</p>
<p>AD0 设置 i2c 通信地址，接VCC时为 0x69，否则 0x68（一般悬空）</p>
<p>INT 中断输出引脚（不知道咋用）</p>
<h4 id="阅读寄存器手册"><a href="#阅读寄存器手册" class="headerlink" title="阅读寄存器手册"></a>阅读寄存器手册</h4><ol>
<li><p>i2c 通信HAL库直接指令</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> WHO_AM_I_REG 0x75</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PWR_MGMT_1_REG 0x6B</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MPU6050_ADDR 0xD0</span></span><br><span class="line"><span class="type">const</span> <span class="type">uint16_t</span> i2c_timeout = <span class="number">100</span>;</span><br><span class="line"><span class="type">uint8_t</span> check;</span><br><span class="line"><span class="type">uint8_t</span> data;</span><br><span class="line"><span class="comment">// i2c | 设备地址 | 寄存器地址 | 寄存器长度 | 数据起始地址 | 数据长度 | 超时时间</span></span><br><span class="line">HAL_I2C_Mem_Read(&amp;hi2c1, MPU6050_ADDR, WHO_AM_I_REG, <span class="number">1</span>, &amp;check, <span class="number">1</span>, i2c_timeout);</span><br><span class="line">HAL_I2C_Mem_Write(&amp;hi2c1, MPU6050_ADDR, PWR_MGMT_1_REG, <span class="number">1</span>, &amp;Data, <span class="number">1</span>, i2c_timeout);</span><br></pre></td></tr></table></figure>
</li>
<li><p>陀螺仪寄存器库操作</p>
<ol>
<li><p>初始化</p>
<p>| WHO_AM_I       | PWR_MGMT_1   | SMPLRT_DIV               | ACCEL_CONFIG，GYRO_CONFIG    |<br>| ——————— | —————— | ———————————— | —————————————— |<br>| 获取device  ID | 重置一切设置 | 设置分频系数，即采样频率 | 设置加速度和角度的采样上下限 |</p>
</li>
<li><p>读取数据</p>
<p>| ACCEL_XOUT_H | GYRO_XOUT_H | TEMP_OUT_H |<br>| —————— | —————- | ————— |<br>| 加速度       | 角度        | 温度       |</p>
</li>
</ol>
</li>
<li><p>数据处理</p>
<p>卡尔曼滤波：把测量数据（当前角度）和预测数据（上次角度+当前加速度*时间间隔）加权求和（系数和唯一）</p>
</li>
</ol>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>嵌入式</tag>
        <tag>HAL库</tag>
        <tag>i2c</tag>
        <tag>通信</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>免费下载网页视频</title>
    <url>/2022/library/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/%E5%85%8D%E8%B4%B9%E4%B8%8B%E8%BD%BD%E8%A7%86%E9%A2%91/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">尝试了很多方案，包括 m3u8，you-get，网页插件，最推荐 m3u8</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="you-get"><a href="#you-get" class="headerlink" title="you-get"></a>you-get</h2><p>​    是python的一个库，可以在cmd中运行，运行命令为 <code>you-get [url]</code></p>
<p>​    测试能成功下载 bilibili 和 youtube 的视频，但是下载 pornhub 失败</p>
<h2 id="m3u8"><a href="#m3u8" class="headerlink" title="m3u8"></a>m3u8</h2><p>​    m3u8 是一种视频格式，专门在网页上加载视频的。</p>
<h4 id="获取m3u8"><a href="#获取m3u8" class="headerlink" title="获取m3u8"></a>获取m3u8</h4><ol>
<li><p><a href="https://www.parsevideo.com">获取视频m3u8</a></p>
</li>
<li><p>刷新界面，<code>开发人员工具-&gt;网络</code> 中加载的找到此格式的请求（master开头的是主要的，其他的可能是动图或预览），复制其请求头连接，用 m3u8下载器 下载</p>
</li>
</ol>
<h4 id="由m3u8下载视频"><a href="#由m3u8下载视频" class="headerlink" title="由m3u8下载视频"></a>由m3u8下载视频</h4><p>用软件</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>下载视频</tag>
      </tags>
  </entry>
  <entry>
    <title>【HAL库】spi通信（nrf24l01）</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E8%BD%AF%E4%BB%B6/%E3%80%90HAL%E5%BA%93%E3%80%91%E7%AC%94%E8%AE%B0/%E3%80%90HAL%E5%BA%93%E3%80%91spi%E9%80%9A%E4%BF%A1%EF%BC%88nrf24l01%EF%BC%89/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="spi通信"><a href="#spi通信" class="headerlink" title="spi通信"></a>spi通信</h2><p>主要三根线：MISO，MOSI，SCK</p>
<p>此外还有片选线</p>
<ul>
<li>双工通信：两根线，MISO，MOSI，分别负责发送和接收</li>
<li>同步通信：一根时钟线，SCK</li>
</ul>
<h2 id="nrf24l01"><a href="#nrf24l01" class="headerlink" title="nrf24l01"></a>nrf24l01</h2><p>很通用的，航模遥控器、鼠标、耳机、音响等都有应用</p>
<p>最便宜的几块钱，传输距离50m；加功率增益的，加天线的，20几块，传输距离能到1000m</p>
<p><img src="https://s2.loli.net/2022/12/28/MXPGwAT13d2jefc.jpg" alt="nrf24l01 youtube pin 的图像结果"></p>
<h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><ul>
<li>2.4G（与蓝牙，wifi，5g等无线传输技术并列）</li>
<li>传输速度 10mbps（即Mb per second，1Mbps=0.125MB/s，因为数据传输多用bit单位，数据存储多用byte单位，1 Byte = 8 bit；即网速和你下载速度不是一个单位）</li>
<li>通信距离：50-1000m，这个取决于电路的设计，nrf24l01只是芯片</li>
</ul>
<h4 id="库使用方法"><a href="#库使用方法" class="headerlink" title="库使用方法"></a>库使用方法</h4><ol>
<li>设置接收或发送模式 <code>NRF24L01_RX_Mode();</code> 或 <code>NRF24L01_TX_Mode();</code></li>
<li>收发数据可以先定义一个 uint8_t 类型的数组，然后用 <code>NRF24L01_RxPacket(rxdata)</code> 或 <code>NRF24L01_TxPacket(txdata)</code> ，返回值为 0 表示成功；也可以用更底层的发送字节或发送位。</li>
</ol>
<ul>
<li>检查是否可用 <code>while(NRF24L01_Check());</code> 不可用卡死</li>
</ul>
<blockquote>
<p>注意要打开DMA，不然不行</p>
<p>不知道定义接收或发送模式是啥意思</p>
<p>不知道咋配对</p>
<p>不知道咋跟遥控器对码</p>
</blockquote>
<h4 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h4><p>这是我第一次用别人写的代码库，感触良多。</p>
<p>​    首先我看的哔哩哔哩看了一个教程讲的很详细，他用的库是在正点原子讲解 nrf24l01 基础上改写的，还保留有多余的函数和正点原子的注释。而且他讲了半天寄存器也没说怎么用这个库。我直接搜索这个模块，甚至在正点原子的用户名下，都搜索不到。所以还是干货难找呀！还得是系统教程教的好，自媒体分享的不行，我直接查CSDN的资料，多数还都是直接复制数据手册呀，而且残缺不全，英语翻译蹩脚。</p>
<p>​    然后正点原子的代码也得改，还是不咋会啊，自己照着数据手册写寄存器也不咋会。</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>嵌入式</tag>
        <tag>HAL库</tag>
        <tag>软件</tag>
        <tag>stm</tag>
        <tag>spi通信</tag>
        <tag>nrf24l01</tag>
      </tags>
  </entry>
  <entry>
    <title>modelsim的-novopt优化相关报错</title>
    <url>/2022/solved/modelsim%E7%9A%84-novopt%E4%BC%98%E5%8C%96%E7%9B%B8%E5%85%B3%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>找到 <code>modelsim.ini</code> 将 <code>VoptFlow</code> 参数修改为<code>1</code>，重新打开项目</p>
<p><a href="http://t.csdn.cn/LOkwM">http://t.csdn.cn/LOkwM</a></p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>solved</tag>
        <tag>FPGA</tag>
        <tag>modelsim</tag>
      </tags>
  </entry>
  <entry>
    <title>【FPGA】仿真和烧录</title>
    <url>/2022/library/%E8%AF%BE%E5%86%85%E7%9F%A5%E8%AF%86/%E3%80%90FPGA%E3%80%91%E4%BB%BF%E7%9C%9F%E5%92%8C%E7%83%A7%E5%BD%95/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>vivado 可以仿真和烧录，但是体积有 100G 大。</p>
<p>可以用 modelsim + 国产软件 TD 代替，分别负责仿真和烧录</p>
<h2 id="modelsim-仿真"><a href="#modelsim-仿真" class="headerlink" title="modelsim 仿真"></a>modelsim 仿真</h2><p><a href="https://www.bilibili.com/video/BV1nd4y1e7k6">参见视频教程</a></p>
<ol>
<li>编写 .v 和 .vt 文件，其中 .vt 文件包含仿真参数</li>
<li>添加对应文件，编译，运行仿真</li>
</ol>
<h4 id="vt-文件编写"><a href="#vt-文件编写" class="headerlink" title=".vt 文件编写"></a>.vt 文件编写</h4><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 结构说明</span></span><br><span class="line"></span><br><span class="line"><span class="meta">`<span class="keyword">timescale</span> 1 ps/ 1 ps		</span><span class="comment">//设定仿真步长</span></span><br><span class="line"><span class="keyword">module</span> first_vt();			<span class="comment">// module后面接文件名，比如此文件名为first_vt.vt</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">reg</span> clk;					<span class="comment">// .v文件里input对应reg</span></span><br><span class="line"><span class="keyword">reg</span> rst;                                   </span><br><span class="line"><span class="keyword">wire</span> clkout;				<span class="comment">// .v文件里output对应wir</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 首先是.v文件名；后面i1不要改，是变量总名字；下面格式都那样</span></span><br><span class="line">first i1 (</span><br><span class="line">	<span class="variable">.clk</span>(clk),</span><br><span class="line">	<span class="variable">.clkout</span>(clkout),</span><br><span class="line">	<span class="variable">.rst</span>(rst)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化变量值</span></span><br><span class="line"><span class="keyword">initial</span>                                                </span><br><span class="line"><span class="keyword">begin</span>                                                  </span><br><span class="line">    rst=<span class="number">1</span>;				<span class="comment">//模拟复位信号按下</span></span><br><span class="line">	#<span class="number">20</span> rst=<span class="number">0</span>;			<span class="comment">//#20 = 延迟50ns后按键松开</span></span><br><span class="line">	#<span class="number">20</span> rst=<span class="number">1</span>;</span><br><span class="line">	#<span class="number">8000</span> <span class="built_in">$stop</span>;        <span class="comment">// 终止仿真                     </span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置时钟类型的</span></span><br><span class="line"><span class="keyword">always</span>                                                                </span><br><span class="line"><span class="keyword">begin</span>                                                  </span><br><span class="line">    #<span class="number">50</span> clk=<span class="number">1</span>; 			<span class="comment">//生成时钟信号，#50 = 延迟50ns</span></span><br><span class="line">	#<span class="number">50</span> clk=<span class="number">0</span>;                                     </span><br><span class="line"><span class="keyword">end</span>                                                    </span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="仿真操作"><a href="#仿真操作" class="headerlink" title="仿真操作"></a>仿真操作</h4><ul>
<li><p>新建项目： <code>file-&gt;new-&gt;project</code></p>
</li>
<li><p>新建或导入 <code>.v</code> 和 <code>.vt</code> 文件</p>
</li>
<li><p>编译：<code>在project栏右键文件-&gt;compile-&gt;compile all</code></p>
<p>编译后，两文件身上有绿色对号，可以在 <code>library</code> 栏看到新出现了 <code>work</code>，点开有刚编译文件</p>
</li>
<li><p>仿真：<code>在libary栏右键.vt文件-&gt;simulate</code></p>
<p><img src="https://s2.loli.net/2022/12/26/IyKr8k7YAVlFTjt.png" alt="image-20221226224343718"></p>
</li>
</ul>
<blockquote>
<p>注意：.v 和 .vt 文件名不可一样</p>
</blockquote>
<h2 id="vivado烧录"><a href="#vivado烧录" class="headerlink" title="vivado烧录"></a>vivado烧录</h2><ol>
<li>写好 .v 文件</li>
<li>配置引脚<code>Layout-&gt;I/O Planning</code></li>
<li>生成原理图 <code>左侧Run Synthesis</code></li>
<li><p>生成电路图 <code>左侧Run Implementation</code></p>
</li>
<li><p>生成<code>.bit</code>文件 <code>Generate Bitstream</code></p>
</li>
<li><p>烧录</p>
<p>插上板子，连接 <code>左侧与Generate Bitstream下面的Open Hardware Manager-&gt;open target-&gt;auto connect</code></p>
<p>选中 <code>.bit</code> 文件 <code>Open Hardware Manager-&gt;Program Device</code>（文件位置一般为 <code>project/xxx.runs/impl/xxx.bit</code>）点击 <code>program</code></p>
</li>
</ol>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>FPGA</tag>
        <tag>library</tag>
        <tag>课内知识</tag>
      </tags>
  </entry>
  <entry>
    <title>【pyinstaller】打包python文件为exe</title>
    <url>/2022/library/python/%E3%80%90pyinstaller%E3%80%91%E6%89%93%E5%8C%85python%E4%B8%BAexe/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>比 nuitka 语法简单，方便导入第三方库，速度也不算慢，亲测2min以内</p>
<p><a href="https://pyinstaller.org/en/stable/usage.html#options">官网</a></p>
<h2 id="打包语法"><a href="#打包语法" class="headerlink" title="打包语法"></a>打包语法</h2><p>在 cmd 中运行</p>
<p><code>pyinstaller -F -w main.py</code></p>
<ul>
<li><code>-F</code>：输出单个exe文件，否则还有一堆 <code>.dll</code> 啥的，必须一起运行才行</li>
<li><code>-w</code>：取消伴随打开的cmd窗口</li>
</ul>
<p>运行后会生成一个 <code>.spec</code> 文件，以及 <code>build</code>和 <code>dist</code> 文件夹</p>
<h2 id="添加第三方库"><a href="#添加第三方库" class="headerlink" title="添加第三方库"></a>添加第三方库</h2><p>多数第三方库能运行就能添加</p>
<p>若存在库没被识别到，可以在 <code>.spec</code> 文件里的 <code>hiddenimport</code> 添加第三方库名字</p>
<p>重新打包，运行<code>pyinstaller xxx.spec</code></p>
<p>打包 <code>pybluez</code> 库时，发生奇怪报错，始终未能解决</p>
<p><img src="https://s2.loli.net/2022/12/25/3HGlwkEnbsDVMrQ.png" alt="image-20221225122613186"></p>
<h2 id="打包多个-py-文件"><a href="#打包多个-py-文件" class="headerlink" title="打包多个 .py 文件"></a>打包多个 <code>.py</code> 文件</h2><p>在 <code>.spec</code> 文件里的 <code>pathex</code> 添加所有文件路径</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>python</tag>
        <tag>library</tag>
        <tag>打包</tag>
        <tag>pyinstaller</tag>
      </tags>
  </entry>
  <entry>
    <title>【nuitka】打包python文件为exe</title>
    <url>/2022/library/python/%E3%80%90nuitka%E3%80%91%E6%89%93%E5%8C%85python%E4%B8%BAexe/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>与 pyinstaller 不同，不能打包出单个exe文件，必须要在 .dll 等文件环境中运行</p>
<p><a href="https://pypi.org/project/Nuitka/">官网</a></p>
<p>知乎一大堆长篇大论，相互引用，云里雾里</p>
<h2 id="打包语法"><a href="#打包语法" class="headerlink" title="打包语法"></a>打包语法</h2><p><code>nuitka --standalone --show-memory --show-progress --plugin-enable=pyqt5 --output-dir=out --windows-icon-from-ico=bitbug_favicon.ico mark.py</code></p>
<ul>
<li><code>standalone</code>：生成独立exe</li>
<li><code>--plugin-enable=pyqt5</code>：导入pyqt5</li>
</ul>
<p>好像有其他第三方库，也会自动导入</p>
<h2 id="添加文件"><a href="#添加文件" class="headerlink" title="添加文件"></a>添加文件</h2><p>暂时不会</p>
<h2 id="添加第三方库"><a href="#添加第三方库" class="headerlink" title="添加第三方库"></a>添加第三方库</h2><p>若有未自动导入的，可以观察运行报错，从环境中复制文件，手动添加</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>python</tag>
        <tag>library</tag>
        <tag>nuitka</tag>
        <tag>打包</tag>
      </tags>
  </entry>
  <entry>
    <title>【pyqt】学习</title>
    <url>/2022/library/frontend/%E3%80%90pyqt%E3%80%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">python 库 pyqt，方便地设计 GUI，然后用 nuitka 打包</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h1 id="代码编写"><a href="#代码编写" class="headerlink" title="代码编写"></a>代码编写</h1><h2 id="核心思路"><a href="#核心思路" class="headerlink" title="核心思路"></a>核心思路</h2><p>之前用过 pygame，再用 pyqt 感觉编程思路有很大不同</p>
<ol>
<li><p>页面所有内容在一个 class 里，每项功能都要向上继承，进行修改</p>
</li>
<li><p>运行页面</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">import</span> sys</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    demo = Demo()</span><br><span class="line">    demo.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="入门示例"><a href="#入门示例" class="headerlink" title="入门示例"></a>入门示例</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, parent=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(Demo, self).__init__(parent)</span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;first&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">1600</span>, <span class="number">1400</span>)      <span class="comment"># 设置窗口大小</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">import</span> sys</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    demo = Demo()</span><br><span class="line">    demo.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="添加组件"><a href="#添加组件" class="headerlink" title="添加组件"></a>添加组件</h2><h4 id="组件格式形状修改"><a href="#组件格式形状修改" class="headerlink" title="组件格式形状修改"></a>组件格式形状修改</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># (x,y)零点为左上角，方向为x右y下</span></span><br><span class="line">self.widget.resize(<span class="number">200</span>, <span class="number">50</span>)		<span class="comment"># 设置大小</span></span><br><span class="line">self.widget.move(<span class="number">400</span>, <span class="number">0</span>)		<span class="comment"># 设置位置</span></span><br></pre></td></tr></table></figure>
<h4 id="显示标签"><a href="#显示标签" class="headerlink" title="显示标签"></a>显示标签</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">hello_label = QtWidgets.QLabel(hello_widget)    <span class="comment"># 添加一个标签</span></span><br><span class="line">hello_label.setText(<span class="string">&quot;hello wrold&quot;</span>)              <span class="comment"># 设置标签文字</span></span><br></pre></td></tr></table></figure>
<h4 id="输入框"><a href="#输入框" class="headerlink" title="输入框"></a>输入框</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self.textEdit = QTextEdit(<span class="string">&quot;请看这里&quot;</span>, self)					<span class="comment"># 添加一个输入框</span></span><br><span class="line">self.textEdit.setText(<span class="string">&quot;请输入&quot;</span>)							    <span class="comment"># 设置输入框文字</span></span><br><span class="line">self.textEdit.setPlaceholderText(<span class="string">&#x27;你不输入就一直显示这个&#x27;</span>)		<span class="comment"># 设置输入框背景文字</span></span><br><span class="line">get_num = <span class="built_in">int</span>(self.textEdit.toPlainText())                  <span class="comment"># 获取输入框文字</span></span><br></pre></td></tr></table></figure>
<h4 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self.button = QPushButton(<span class="string">&#x27;请点点我&#x27;</span>, self)		<span class="comment"># 添加按钮</span></span><br><span class="line">self.button.clicked.connect(<span class="keyword">lambda</span>: my_func())	<span class="comment"># 按下按钮，将会执行my_func函数</span></span><br></pre></td></tr></table></figure>
<h2 id="加入触发功能"><a href="#加入触发功能" class="headerlink" title="加入触发功能"></a>加入触发功能</h2><p>触发功能的函数输入都要加 <code>event</code> </p>
<h4 id="鼠标点击"><a href="#鼠标点击" class="headerlink" title="鼠标点击"></a>鼠标点击</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">mousePressEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">    <span class="keyword">if</span> event.buttons() == PyQt5.QtCore.Qt.LeftButton:  <span class="comment"># 左键按下</span></span><br><span class="line">        s = event.windowPos()</span><br><span class="line">        <span class="built_in">print</span>(s.x(), s.y())</span><br></pre></td></tr></table></figure>
<h4 id="绘制事件"><a href="#绘制事件" class="headerlink" title="绘制事件"></a>绘制事件</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt, QRect</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> *	<span class="comment"># QPainter QPixmap QPen</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">paintEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">    painter = QPainter(self)        <span class="comment"># 开启绘图</span></span><br><span class="line"></span><br><span class="line">    img = QPixmap(<span class="string">&#x27;bitbug_favicon.ico&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    painter.drawPixmap(<span class="number">0</span>, <span class="number">0</span>, self.size, self.size, img)  <span class="comment"># 画图像</span></span><br><span class="line"></span><br><span class="line">    painter.setPen(QPen(Qt.red, <span class="number">4</span>))</span><br><span class="line">    painter.drawRect(QRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, <span class="number">200</span>))</span><br><span class="line"></span><br><span class="line">    self.update()       <span class="comment"># 不加这个不会更新</span></span><br></pre></td></tr></table></figure>
<h4 id="窗口关闭事件"><a href="#窗口关闭事件" class="headerlink" title="窗口关闭事件"></a>窗口关闭事件</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">closeEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">    reply = QMessageBox.question(self,</span><br><span class="line">                                 <span class="string">&#x27;quit&#x27;</span>,</span><br><span class="line">                                 <span class="string">&quot;是否要退出&quot;</span>,</span><br><span class="line">                                 QMessageBox.Yes | QMessageBox.No,</span><br><span class="line">                                 QMessageBox.Yes)</span><br><span class="line">    <span class="keyword">if</span> reply == QMessageBox.Yes:</span><br><span class="line">        self.close()</span><br><span class="line">        event.accept()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        event.ignore()</span><br></pre></td></tr></table></figure>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h4 id="提示框"><a href="#提示框" class="headerlink" title="提示框"></a>提示框</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">msg_box = QMessageBox(QMessageBox.Warning, <span class="string">&#x27;警告&#x27;</span>, <span class="string">&#x27;请稍后再试&#x27;</span>)</span><br><span class="line">msg_box.exec_()</span><br></pre></td></tr></table></figure>
<h4 id="对话框"><a href="#对话框" class="headerlink" title="对话框"></a>对话框</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">reply = QMessageBox.question(self,</span><br><span class="line">                                     <span class="string">&#x27;quit&#x27;</span>,</span><br><span class="line">                                     <span class="string">&quot;是否要保存&quot;</span>,</span><br><span class="line">                                     QMessageBox.Yes | QMessageBox.No,</span><br><span class="line">                                     QMessageBox.No)</span><br></pre></td></tr></table></figure>
<h4 id="选择文件"><a href="#选择文件" class="headerlink" title="选择文件"></a>选择文件</h4><p>注意分隔两种类型文件需要用 <code>；；</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">self.filelist = QFileDialog.getOpenFileNames(self, <span class="string">&quot;多文件选择&quot;</span>, <span class="string">&quot;/&quot;</span>, <span class="string">&quot;所有文件 (*);;文本文件 (*.txt)&quot;</span>)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<h1 id="ui编写"><a href="#ui编写" class="headerlink" title="ui编写"></a>ui编写</h1><p><code>pyqt</code> 有一个附加软件 <code>qt designer</code> ，可以用拖块方法设计gui，并且可以导出<code>.ui</code> 文件，再通过<code>PYUIC</code>转成 <code>.py</code>文件，可以被引用。</p>
<h2 id="qt-designer"><a href="#qt-designer" class="headerlink" title="qt designer"></a><code>qt designer</code></h2><h2 id="PYUIC"><a href="#PYUIC" class="headerlink" title="PYUIC"></a><code>PYUIC</code></h2><h2 id="引用布局"><a href="#引用布局" class="headerlink" title="引用布局"></a>引用布局</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> first_ui <span class="keyword">import</span> Ui_Dialog	<span class="comment"># 从转化的.py文件导入Ui_Dialog</span></span><br><span class="line">...</span><br><span class="line">self.__ui = Ui_Dialog()  <span class="comment"># 创建 UI 对象</span></span><br><span class="line">self.__ui.setupUi(self)  <span class="comment"># 构建 UI</span></span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>pyqt</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【pybluez】python控制PC蓝牙</title>
    <url>/2022/library/python/%E3%80%90pybluez%E3%80%91python%E6%8E%A7%E5%88%B6PC%E8%93%9D%E7%89%99/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">pybluez库可以像操纵串口一样控制电脑自带蓝牙，可以搜索周围蓝牙、连接并收发数据。</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>对我来说能用电脑蓝牙和 HC05 这样的蓝牙模块连接了，之前一直觉得很奇怪，因为用蓝牙通信都是两个蓝牙模块，一个插电脑并用串口调试助手连接，另一个连接小车或机器人。现在可以做一个蓝牙调试助手了。</p>
<p>安装过程略</p>
<h2 id="搜索蓝牙"><a href="#搜索蓝牙" class="headerlink" title="搜索蓝牙"></a>搜索蓝牙</h2><p>​    保证自己开启蓝牙后，<code>nearby_devices = bluetooth.discover_devices(lookup_names=True)</code>，返回附近可连接蓝牙的<strong>地址</strong>和<strong>名字</strong>（返回数组，里面是元组）</p>
<h2 id="通过RFCOMM方式进行通信（客户端）"><a href="#通过RFCOMM方式进行通信（客户端）" class="headerlink" title="通过RFCOMM方式进行通信（客户端）"></a>通过RFCOMM方式进行通信（客户端）</h2><p>操作方式类似 socket</p>
<h4 id="连接蓝牙"><a href="#连接蓝牙" class="headerlink" title="连接蓝牙"></a>连接蓝牙</h4><ol>
<li><p>实例化一个对象 <code>sock = bluetooth.BluetoothSocket(bluetooth.RFCOMM)</code></p>
</li>
<li><p>提供连接地址并连接 <code>sock.connect((target_address, 1))</code></p>
</li>
</ol>
<h4 id="收发数据"><a href="#收发数据" class="headerlink" title="收发数据"></a>收发数据</h4><ul>
<li>发送数据 <code>sock.send(&quot;xxxxxxx&quot;.encode())</code></li>
<li>接收数据 <code>data = sock.recv(1024)</code></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># win10 安装蓝牙依赖包 https://blog.csdn.net/weixin_38676276/article/details/113027104</span></span><br><span class="line"><span class="keyword">import</span> bluetooth</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BluetoothConnection</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># 是否找到到设备</span></span><br><span class="line">        self.find = <span class="literal">False</span></span><br><span class="line">        <span class="comment"># 附近蓝牙设备</span></span><br><span class="line">        self.nearby_devices = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_nearby_devices</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Detecting nearby Bluetooth devices...&quot;</span>)</span><br><span class="line">        <span class="comment"># 可传参数 duration--持续时间 lookup-name=true 显示设备名</span></span><br><span class="line">        <span class="comment"># 大概查询10s左右</span></span><br><span class="line">        <span class="comment"># 循环查找次数</span></span><br><span class="line">        loop_num = <span class="number">3</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.nearby_devices = bluetooth.discover_devices(lookup_names=<span class="literal">True</span>, duration=<span class="number">5</span>)</span><br><span class="line">            <span class="keyword">while</span> self.nearby_devices.__len__() == <span class="number">0</span> <span class="keyword">and</span> i &lt; loop_num:</span><br><span class="line">                self.nearby_devices = bluetooth.discover_devices(lookup_names=<span class="literal">True</span>, duration=<span class="number">5</span>)</span><br><span class="line">                <span class="keyword">if</span> self.nearby_devices.__len__() &gt; <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                i = i + <span class="number">1</span></span><br><span class="line">                time.sleep(<span class="number">2</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;No Bluetooth device around here! trying again &#123;&#125;...&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(i)))</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.nearby_devices:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;There&#x27;s no Bluetooth device around here. Program stop!&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125; nearby Bluetooth device(s) has(have) been found:&quot;</span>.<span class="built_in">format</span>(self.nearby_devices.__len__()),</span><br><span class="line">                      self.nearby_devices)  <span class="comment"># 附近所有可连的蓝牙设备s</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="comment"># print(traceback.format_exc())</span></span><br><span class="line">            <span class="comment"># 不知是不是Windows的原因，当附近没有蓝牙设备时，bluetooth.discover_devices会报错。</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;There&#x27;s no Bluetooth device around here. Program stop(2)!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_target_device</span>(<span class="params">self, target_name, target_address</span>):</span><br><span class="line">        self.find_nearby_devices()</span><br><span class="line">        <span class="keyword">if</span> self.nearby_devices:</span><br><span class="line">            <span class="keyword">for</span> addr, name <span class="keyword">in</span> self.nearby_devices:</span><br><span class="line">                <span class="keyword">if</span> target_name == name <span class="keyword">and</span> target_address == addr:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;Found target bluetooth device with address:&#123;&#125; name:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(target_address, target_name))</span><br><span class="line">                    self.find = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> self.find:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;could not find target bluetooth device nearby. &quot;</span></span><br><span class="line">                      <span class="string">&quot;Please turn on the Bluetooth of the target device.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">connect_target_device</span>(<span class="params">self, target_name, target_address</span>):</span><br><span class="line">        self.find_target_device(target_name=target_name, target_address=target_address)</span><br><span class="line">        <span class="keyword">if</span> self.find:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Ready to connect&quot;</span>)</span><br><span class="line">            sock = bluetooth.BluetoothSocket(bluetooth.RFCOMM)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                sock.connect((target_address, <span class="number">1</span>))</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Connection successful. Now ready to get the data&quot;</span>)</span><br><span class="line">                data_dtr = <span class="string">&quot;&quot;</span></span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                    <span class="comment"># sock.send(&quot;qwer&quot;.encode())</span></span><br><span class="line">                    <span class="comment"># print(&quot;send qwer&quot;)</span></span><br><span class="line">                    data = sock.recv(<span class="number">1024</span>)</span><br><span class="line">                    data_dtr += data.decode()</span><br><span class="line">                    <span class="keyword">if</span> <span class="string">&#x27;\n&#x27;</span> <span class="keyword">in</span> data.decode():</span><br><span class="line">                        <span class="comment"># data_dtr[:-2] 截断&quot;\t\n&quot;,只输出数据</span></span><br><span class="line">                        <span class="built_in">print</span>(datetime.datetime.now().strftime(<span class="string">&quot;%H:%M:%S&quot;</span>) + <span class="string">&quot;-&gt;&quot;</span> + data_dtr[:-<span class="number">2</span>])</span><br><span class="line">                        data_dtr = <span class="string">&quot;&quot;</span></span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;connection fail\n&quot;</span>, e)</span><br><span class="line">                sock.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    target_name = <span class="string">&quot;=car&quot;</span></span><br><span class="line">    target_address = <span class="string">&#x27;18:A3:25:02:6B:B6&#x27;</span></span><br><span class="line">    BluetoothConnection().connect_target_device(target_name=target_name, target_address=target_address)</span><br></pre></td></tr></table></figure>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>不知怎么弄服务端，也不明白</p>
<p>此外还有通过L2CAP方式进行通信，不太清楚这两种都是啥，后续再补</p>
<p>我已制作了 “蓝牙调试助手” 可以使用，有些缺点：</p>
<ol>
<li>连接未成功时，点击发送会因错闪退</li>
<li>连接失败或成功后都无法重新连接或连接其他蓝牙</li>
<li>程序开启要等好久才能搜索到蓝牙，且没有提示</li>
</ol>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>python</tag>
        <tag>library</tag>
        <tag>pybluez</tag>
        <tag>蓝牙</tag>
      </tags>
  </entry>
  <entry>
    <title>【HAL库】pwm波</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E8%BD%AF%E4%BB%B6/%E3%80%90HAL%E5%BA%93%E3%80%91%E7%AC%94%E8%AE%B0/%E3%80%90HAL%E5%BA%93%E3%80%91pwm%E6%B3%A2/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="cubemx设置"><a href="#cubemx设置" class="headerlink" title="cubemx设置"></a>cubemx设置</h2><p><img src="https://s2.loli.net/2022/12/23/huSMnZDUd6g3Npx.png" alt="image-20221223143505162"></p>
<p>​    左侧<code>Timers</code>里选择<code>TIM</code>设置输出PWM，中间选择<code>channel</code>点开选择<code>PWM Generation CHx</code>，右面对应引脚就会亮起。</p>
<p>​    设置PWM输出频率通过下面的<code>Prescaler</code>（PSC）和<code>Counter Period</code>（ARR）</p>
<script type="math/tex; mode=display">
F_{pwm}=\frac{主频}{(PSC+1)(ARR+1)}</script><p>其中主频就是在<code>Clock Configuration</code>中设置的</p>
<p><img src="https://s2.loli.net/2022/12/23/cX5oi4Fy2kKUCsz.png" alt="image-20221223144411620"></p>
<h2 id="控制舵机或电调"><a href="#控制舵机或电调" class="headerlink" title="控制舵机或电调"></a>控制舵机或电调</h2><h4 id="设置频率"><a href="#设置频率" class="headerlink" title="设置频率"></a>设置频率</h4><p>若pwm波频率不匹配，相差过大，可能不被识别。</p>
<p>一般控制舵机或电调频率为 50Hz，主频为72MHz，用上述公式计算可取 PSC=7200-1，ARR=200-1</p>
<h4 id="设置占空比"><a href="#设置占空比" class="headerlink" title="设置占空比"></a>设置占空比</h4><p><code>__HAL_TIM_SetCompare(&amp;htim4,TIM_CHANNEL_1,[脉宽的绝对时长]);</code></p>
<p>注意最后一项是脉宽的绝对时长，并不是占空比，一般都是用 5~25 对应 0.5~2.5ms 的脉宽来控制舵机的角度 0~180°。</p>
<h4 id="电调行程初始化"><a href="#电调行程初始化" class="headerlink" title="电调行程初始化"></a>电调行程初始化</h4><p>pwm 频率为 50Hz</p>
<p>先不上电，给脉冲时长 2ms，一段时间后上电，然后改变脉冲时长为 1ms，电调会长滴，之后即可用 1.1~2ms的脉冲控制电机</p>
<h2 id="控制蜂鸣器"><a href="#控制蜂鸣器" class="headerlink" title="控制蜂鸣器"></a>控制蜂鸣器</h2><p>有源蜂鸣器只是用来警报的，即上电就叫；无源蜂鸣器才能控制音调</p>
<p>用周期控制音调，音调与占空比无关</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>音符</th>
<th>对应频率（Hz）</th>
<th>半周期时长（us）</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>523</td>
<td>956</td>
</tr>
<tr>
<td>2</td>
<td>587</td>
<td>851.5</td>
</tr>
<tr>
<td>3</td>
<td>659</td>
<td>758.5</td>
</tr>
<tr>
<td>4</td>
<td>698</td>
<td>716</td>
</tr>
<tr>
<td>5</td>
<td>784</td>
<td>637.5</td>
</tr>
<tr>
<td>6</td>
<td>880</td>
<td>568</td>
</tr>
<tr>
<td>7</td>
<td>988</td>
<td>506</td>
</tr>
</tbody>
</table>
</div>
<p>对于这种频率不高的，用pwm改变频率就有另一种方法！——用延时手动控制</p>
<p>延时函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">delay_us</span><span class="params">(<span class="type">uint16_t</span> time)</span></span><br><span class="line">&#123;    </span><br><span class="line">   <span class="type">uint16_t</span> i=<span class="number">0</span>;  </span><br><span class="line">   <span class="keyword">while</span>(time--)</span><br><span class="line">   &#123;</span><br><span class="line">      i=<span class="number">10</span>;</span><br><span class="line">      <span class="keyword">while</span>(i--) ;    </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>怎么用蜂鸣器模仿人声，或者演奏和弦？怎么调pwm频率？皆不知</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>嵌入式</tag>
        <tag>HAL库</tag>
        <tag>软件</tag>
        <tag>stm32cubemx</tag>
      </tags>
  </entry>
  <entry>
    <title>【HAL库】串口通信</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E8%BD%AF%E4%BB%B6/%E3%80%90HAL%E5%BA%93%E3%80%91%E7%AC%94%E8%AE%B0/%E3%80%90HAL%E5%BA%93%E3%80%91%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="cubemx配置"><a href="#cubemx配置" class="headerlink" title="cubemx配置"></a>cubemx配置</h2><p>点开异步通信，对应引脚会亮起，<code>RXD</code>和<code>TXD</code></p>
<p><img src="C:/Users/DELL/AppData/Roaming/Typora/typora-user-images/image-20221223145433743.png" alt="image-20221223145433743"></p>
<h2 id="打印重定义"><a href="#打印重定义" class="headerlink" title="打印重定义"></a>打印重定义</h2><ol>
<li><p>在<code>usart.h</code>对应位置添加<code>#include&lt;stdio.h&gt;</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN Includes */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">/* USER CODE END Includes */</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在<code>usart.c</code>对应位置添加重定义</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* USER CODE BEGIN 0 */</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">fputc</span><span class="params">(<span class="type">int</span> ch, FILE *f)</span></span><br><span class="line">&#123;      </span><br><span class="line">	HAL_UART_Transmit(&amp;huart1, (<span class="type">uint8_t</span> *)&amp;ch, <span class="number">1</span>, <span class="number">0xffff</span>);   </span><br><span class="line">	<span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* USER CODE END 0 */</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>之后<code>printf()</code>就是在串口输出</p>
<blockquote>
<p>千万别忘了开启 <code>use MicroLIB</code></p>
<p><img src="C:/Users/DELL/AppData/Roaming/Typora/typora-user-images/image-20221223145322788.png" alt="image-20221223145322788"></p>
<p>没开启这个，串口无反应</p>
</blockquote>
<h2 id="接收：中断回调"><a href="#接收：中断回调" class="headerlink" title="接收：中断回调"></a>接收：中断回调</h2><ol>
<li><p>点开 NVIC</p>
</li>
<li><p>在``函数</p>
</li>
<li>存在问题，函数中执行命令会导致只能运行一次</li>
<li>DMA重新试一下</li>
</ol>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>嵌入式</tag>
        <tag>HAL库</tag>
        <tag>软件</tag>
        <tag>stm32cubemx</tag>
      </tags>
  </entry>
  <entry>
    <title>【博客】搭建记录</title>
    <url>/2022/library/frontend/%E3%80%90%E5%8D%9A%E5%AE%A2%E3%80%91%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="github的cname"><a href="#github的cname" class="headerlink" title="github的cname"></a>github的cname</h2><p>将你的 <code>用户名.github.io</code> 指向你自己的域名</p>
<p><img src="https://s2.loli.net/2022/12/22/GlYKRWz8U4bZJLT.png" alt="image-20221222130717257"></p>
<p><a href="https://github.com/willin/js.cool">willin/js.cool: 为国人开源项目提供免费的子域名（自 2020 年 8 月起），现在支持 Vercel 啦！ (github.com)</a></p>
<h2 id="将-vue-部署到-github-pages-上"><a href="#将-vue-部署到-github-pages-上" class="headerlink" title="将 vue 部署到 github pages 上"></a>将 vue 部署到 github pages 上</h2><h4 id="设置步骤"><a href="#设置步骤" class="headerlink" title="设置步骤"></a>设置步骤</h4><ol>
<li><p>安装 <code>gh-pages</code> : <code>npm install</code></p>
</li>
<li><p>在本地 vue 项目的 <code>vue.config.js</code> 添加 <code>publicPath: &#39;./&#39;</code></p>
</li>
</ol>
<p><img src="https://s2.loli.net/2022/12/22/zrFDyjumBGJaCxg.png" alt="image-20221222151248046"></p>
<ol>
<li>在 <code>package.json</code> 添加 <code>&quot;deploy&quot;: &quot;npm run build &amp;&amp; gh-pages -d dist&quot;</code> 和 <code>&quot;homepage&quot;: &quot;https://你的账户名.github.io/你的项目名&quot;</code></li>
</ol>
<p><img src="https://s2.loli.net/2022/12/22/5AzHtiX1Ecw4Whg.png" alt="image-20221222152125193"></p>
<h4 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h4><ol>
<li><code>npm run build</code> ，生成<code>dist</code>文件夹</li>
<li><code>npm rum deploy</code></li>
</ol>
<p>​        这样就上传到 github 的对应项目中, 且会新创建一个分支 <code>gh-pages</code> , 在 pages 界面设置分支。</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>前端</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>数据处理</title>
    <url>/2022/library/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="pandas处理excel"><a href="#pandas处理excel" class="headerlink" title="pandas处理excel"></a>pandas处理excel</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#------------------读取------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">file_path = <span class="string">r&#x27;first.xlsx&#x27;</span></span><br><span class="line">data = pd.read_excel(file_path, sheet_name = <span class="string">&quot;Sheet1&quot;</span>) <span class="comment"># sheet_name不指定时默认返回全表数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印表数据，如果数据太多，会略去中间部分</span></span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"><span class="comment"># 打印头部数据，仅查看数据示例时常用</span></span><br><span class="line"><span class="built_in">print</span>(data.head())</span><br><span class="line"><span class="comment"># 打印列标题</span></span><br><span class="line"><span class="built_in">print</span>(data.columns)</span><br><span class="line"><span class="comment"># 打印行</span></span><br><span class="line"><span class="built_in">print</span>(data.index)</span><br><span class="line"><span class="comment"># 打印指定列</span></span><br><span class="line"><span class="built_in">print</span>(data[<span class="string">&quot;name&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#--------------------写入--------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> DataFrame</span><br><span class="line"></span><br><span class="line">data = &#123; <span class="string">&#x27;name&#x27;</span>: [<span class="string">&#x27;zs&#x27;</span>, <span class="string">&#x27;ls&#x27;</span>, <span class="string">&#x27;ww&#x27;</span>], <span class="string">&#x27;age&#x27;</span>: [<span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>], <span class="string">&#x27;gender&#x27;</span>: [<span class="string">&#x27;man&#x27;</span>, <span class="string">&#x27;man&#x27;</span>, <span class="string">&#x27;woman&#x27;</span>]&#125;</span><br><span class="line"></span><br><span class="line">df = DataFrame(data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line">df[<span class="string">&#x27;gender&#x27;</span>][df[<span class="string">&#x27;gender&#x27;</span>] == <span class="string">&#x27;girl&#x27;</span>] = <span class="string">&#x27;female&#x27;</span></span><br><span class="line">df[<span class="string">&#x27;gender&#x27;</span>][df[<span class="string">&#x27;gender&#x27;</span>] == <span class="string">&#x27;boy&#x27;</span>] = <span class="string">&#x27;male&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增一行</span></span><br><span class="line">df.loc[<span class="number">6</span>] = [<span class="number">5</span>, <span class="string">&#x27;Eric&#x27;</span>, <span class="string">&#x27;male&#x27;</span>, <span class="number">20</span>, <span class="string">&#x27;2021-5-18&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增一列</span></span><br><span class="line">df[<span class="string">&#x27;favorite&#x27;</span>] = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">df.to_excel(<span class="string">&#x27;new.xlsx&#x27;</span>, sheet_name=<span class="string">&#x27;Sheet1&#x27;</span>, index=<span class="literal">False</span>, header=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>数学建模</tag>
        <tag>数据处理</tag>
      </tags>
  </entry>
  <entry>
    <title>线性规划和整数规划</title>
    <url>/2022/library/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92%E5%92%8C%E6%95%B4%E6%95%B0%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="线性规划问题"><a href="#线性规划问题" class="headerlink" title="线性规划问题"></a>线性规划问题</h2><p>线性规划问题都可以建立如下方程</p>
<script type="math/tex; mode=display">
min ~ x = 70 x_1 + 50 x_2 + 60 x_3,\\


s.t.\left \{
\begin{aligned}
2 x_1 + 4 x_2 + 3 x_3 \leq 150,\\
3 X_1 + X_2 + 5 x_3 \leq 160,\\
7 x_1 + 3 x_2 + 5 x_3 \leq 200,\\
x_i \geq 0, i=1,2,3.
\end{aligned}
\right.</script><p>其中第一行的 x1、x2、x3 称为<strong>决策变量</strong>。</p>
<p>通过 python 求解，使用 scipy 的 optimize.linprog 函数，代码如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> optimize <span class="keyword">as</span> op</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义决策变量范围</span></span><br><span class="line">x1=(<span class="number">0</span>,<span class="literal">None</span>)                                                </span><br><span class="line">x2=(<span class="number">0</span>,<span class="literal">None</span>)</span><br><span class="line">x3=(<span class="number">0</span>,<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义目标函数系数</span></span><br><span class="line">c = np.array([<span class="number">70</span>, <span class="number">50</span>, <span class="number">60</span>])        </span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义约束条件系数</span></span><br><span class="line">a = np.array([[-<span class="number">2</span>, -<span class="number">4</span>, -<span class="number">3</span>], [-<span class="number">3</span>, -<span class="number">1</span>, -<span class="number">5</span>], [-<span class="number">7</span>, -<span class="number">3</span>, -<span class="number">5</span>]])    </span><br><span class="line">b = np.array([-<span class="number">150</span>, -<span class="number">160</span>, -<span class="number">200</span>])</span><br><span class="line"></span><br><span class="line">res=op.linprog(c,a,b,bounds=(x1,x2,x3))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(res.x[<span class="number">0</span>])</span><br></pre></td></tr></table></figure>
<p>注意 optimize 函数判定约束条件统一是大于号。</p>
<h4 id="投资的收益与风险"><a href="#投资的收益与风险" class="headerlink" title="投资的收益与风险"></a>投资的收益与风险</h4><ul>
<li>问题：每种股票有收益率 r 和风险 q，合理分配资金，使收益尽可能大而风险尽可能小</li>
<li>模型：定义股票购买量 $x_i$</li>
</ul>
<h2 id="整数规划"><a href="#整数规划" class="headerlink" title="整数规划"></a>整数规划</h2><h4 id="背包问题"><a href="#背包问题" class="headerlink" title="背包问题"></a>背包问题</h4><ul>
<li>问题：每件物品有重量 a 和价值 c，限定重量 b 内任取物品，使价值总和最大</li>
<li>模型：定义某物品是否被选取 $x_i \in {0,1}$</li>
</ul>
<h4 id="指派问题"><a href="#指派问题" class="headerlink" title="指派问题"></a>指派问题</h4><ul>
<li>问题：某人完成某项任务的费用为 c，分配人员完成与人数同等的任务，使费用总和最小</li>
<li>模型：定义某人是否分配到某任务 $x_{ij} \in {0,1}$</li>
</ul>
<h4 id="旅行商问题"><a href="#旅行商问题" class="headerlink" title="旅行商问题"></a>旅行商问题</h4><ul>
<li><p>问题：从某城市到零一城市的费用为 c，安排旅行顺序，使费用总和最小</p>
</li>
<li><p>模型</p>
<p>c 变量表示费用，$x_{ij} \in {0,1}$ 变量表示路径是否被选择</p>
<script type="math/tex; mode=display">
min z = \sum_{i=1}^n\sum_{j=1}^n c_{ij} x_{ij}, \\
s.t. \left\{
\begin{aligned}
\sum_{i=1}^n x_{ij} = 1, j=1,2,...,n, \\
\sum_{j=1}^n x_{ij} = 1, i=1,2,...,n, \\
u_i - u_j + n x_{ij} \leq n - 1, i=1,...,n, j=2,...n, \\
u_1 = 0, 1 \leq u_i \leq n-1, i=2,...,n, \\
x_{ij} = 0或1, i,j=1,2,...,n.
\end{aligned}
\right.</script><p>$u_i \in {1,2,…,n}$ 变量保证只有 $i&lt;j$ 的 $x_{ij}$ 才可能为1，防止回路</p>
</li>
</ul>
<h4 id="比赛项目的排序问题"><a href="#比赛项目的排序问题" class="headerlink" title="比赛项目的排序问题"></a>比赛项目的排序问题</h4><ul>
<li><p>问题：每名运动员报名了比赛项目若干，安排比赛顺序，尽可能使运动员不连续参加两场比赛</p>
</li>
<li><p>模型：定义 $w_{ij}$ 同时参加两项目的人数和 $x_{ij} \in {0,1}$ 变量表示路径是否被选择（用类似于旅行商的模型）</p>
</li>
<li></li>
</ul>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>算法</tag>
        <tag>线性规划</tag>
        <tag>整数规划</tag>
      </tags>
  </entry>
  <entry>
    <title>name</title>
    <url>/2022/solved/%E5%8F%B3%E9%94%AE%E6%96%B0%E5%BB%BA%E8%8F%9C%E5%8D%95%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="删除项"><a href="#删除项" class="headerlink" title="删除项"></a>删除项</h2><p>查找路径 <code>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\
Discardable\PostSetup\ShellNew</code> 的 <code>classes</code>，打开如下图</p>
<p>  <img src="https://s2.loli.net/2022/12/17/2uWialn64stVJRr.png" alt="image-20221217165101148"></p>
<h2 id="增加项（以-md-为例）"><a href="#增加项（以-md-为例）" class="headerlink" title="增加项（以 .md 为例）"></a>增加项（以 .md 为例）</h2><p>创建 <code>md.reg</code> 文件，保存一下内容，双击执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_CLASSES_ROOT\.md]</span><br><span class="line">@=&quot;Typora.exe&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\.md\ShellNew]</span><br><span class="line">&quot;NullFile&quot;=&quot;&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\Typora.exe]</span><br><span class="line">@=&quot;Markdown&quot;</span><br></pre></td></tr></table></figure>
<p>无需重启电脑即可生效，之后可以删除该文件</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>nerf</tag>
        <tag>work</tag>
      </tags>
  </entry>
  <entry>
    <title>npm install 报错</title>
    <url>/2022/solved/npm%20install%20%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="未生成-package-json"><a href="#未生成-package-json" class="headerlink" title="未生成 package.json"></a>未生成 <code>package.json</code></h2><p>报错信息</p>
<p><img src="/2022/solved/npm%20install%20%E6%8A%A5%E9%94%99/1671205487909.png" alt="1671205487909"></p>
<p>先 <code>npm init</code></p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>nerf</tag>
        <tag>work</tag>
      </tags>
  </entry>
  <entry>
    <title>网盘挂载Alist+RaiDrive</title>
    <url>/2022/solved/%E7%BD%91%E7%9B%98%E6%8C%82%E8%BD%BDAlist+RaiDrive/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>  <a href="http://t.csdn.cn/MLzXm">http://t.csdn.cn/MLzXm</a></p>
<p><a href="http://127.0.0.1:5244/">http://127.0.0.1:5244/</a></p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>solved</tag>
        <tag>网盘</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派配置python环境</title>
    <url>/2022/solved/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%85%8D%E7%BD%AEpython%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<ul>
<li>配置正确的源，否则pip install报错hash找到自己版本：<code>lsb_release -c</code><a href="https://www.cnblogs.com/lynn-z/p/12874504.html">手摸手教程之ubuntu20.04更改国内镜像源（附其他版本ubuntu换源教程，最新详细教程） - Lynn_z - 博客园 (cnblogs.com)</a> 然后 <a href="https://www.cnblogs.com/liuguanglin/p/debian11_repo.html">Debian 11 (bullseye) 国内软件源 - Guanglin - 博客园 (cnblogs.com)</a> </li>
<li>安装cv2：一开始pip install报错hash，按上面修改后 <a href="https://blog.csdn.net/xiangfengl/article/details/122398829">(96条消息) import cv2 ,提示ImportError: libcblas.so.3: cannot open shared object file: No such file or directory_纬领网络的博客-CSDN博客</a> </li>
</ul>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>solved</tag>
        <tag>树莓派</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派域名解析暂时失败</title>
    <url>/2022/solved/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E6%9A%82%E6%97%B6%E5%A4%B1%E8%B4%A5/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h1 id="树莓派ping-baidu-com-域名解析暂时失败"><a href="#树莓派ping-baidu-com-域名解析暂时失败" class="headerlink" title="树莓派ping: baidu.com: 域名解析暂时失败"></a>树莓派ping: baidu.com: 域名解析暂时失败</h1><p>   <a href="https://blog.csdn.net/frdevolcqzyxynjds/article/details/120123906">(5条消息) 解决 树莓派ping: baidu.com: 域名解析暂时失败_闭关苦炼内功的博客-CSDN博客_树莓派域名解析暂时失败</a> </p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>solved</tag>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>【控制算法】学习</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%AE%97%E6%B3%95/%E3%80%90%E6%8E%A7%E5%88%B6%E7%AE%97%E6%B3%95%E3%80%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="PID"><a href="#PID" class="headerlink" title="PID"></a>PID</h2><blockquote>
<p>应用最广泛</p>
</blockquote>
<p>分为P、I、D环，每环对应一个系数，也对应一个物理含义</p>
<p>P：偏差；D：变化速率；I：累计偏差</p>
<p>控制输出值 = 三环加权求和</p>
<h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><p>二轮平衡小车，陀螺仪测量值：角度 θ；角速度 ω；</p>
<p>为了保持小车平衡在 $\theta_0$ 角度，控制小车电机正反转，求解具体转速 X</p>
<script type="math/tex; mode=display">
X = k_p (\theta_0 - \theta) + k_d \omega + k_i \sum_{i=0}^{\text{当前}} (\theta_0 - \theta)</script><p>其中 $\omega$ 也可以用 $\frac{ \mathrm{d} \theta}{ \mathrm{d} t}$ 表示</p>
<h2 id="MPC"><a href="#MPC" class="headerlink" title="MPC"></a>MPC</h2><blockquote>
<p>善于控制多路，如机器人</p>
</blockquote>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>算法</tag>
        <tag>嵌入式</tag>
        <tag>控制</tag>
      </tags>
  </entry>
  <entry>
    <title>【滤波算法】学习</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%AE%97%E6%B3%95/%E3%80%90%E6%BB%A4%E6%B3%A2%E7%AE%97%E6%B3%95%E3%80%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="卡尔曼滤波"><a href="#卡尔曼滤波" class="headerlink" title="卡尔曼滤波"></a>卡尔曼滤波</h2><p>将（多种方法测量或计算到的）状态值（按照设定的比例系数）加权求和</p>
<h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><p>测量到运动物体物体：运动速度 v；位置 x；上一次测量位置 x0；</p>
<p>由于每个值都是测量得到的，不一定准确，要估计物体真实位置</p>
<script type="math/tex; mode=display">
x_{true} = k_1 x + k_2 (x_0 + v \Delta t)</script><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>算法</tag>
        <tag>嵌入式</tag>
        <tag>滤波</tag>
      </tags>
  </entry>
  <entry>
    <title>【硬件知识】无刷电机和电调</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91%E6%97%A0%E5%88%B7%E7%94%B5%E6%9C%BA%E5%92%8C%E7%94%B5%E8%B0%83/</url>
    <content><![CDATA[<div class="note info">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>  <a href="https://www.bilibili.com/video/BV1LE411p7QB/">https://www.bilibili.com/video/BV1LE411p7QB/</a></p>
<h2 id="无刷电机结构"><a href="#无刷电机结构" class="headerlink" title="无刷电机结构"></a>无刷电机结构</h2><p>给同一组线圈反向的绕线方式（图中错误），保证两端磁性相同</p>
<p>三个线圈电压保持：一组为正；一组为负；一组为0；</p>
<p>则磁性保持：一组为 N；一组为 S；一组无磁性；</p>
<p>电压周期变化，转子旋转</p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91%E6%97%A0%E5%88%B7%E7%94%B5%E6%9C%BA%E5%92%8C%E7%94%B5%E8%B0%83/1670131737857.png" alt="1670131737857"></p>
<p>将电路简化为<strong>三相电</strong></p>
<p><strong>电调</strong>的作用控制<strong>mos管</strong>通断</p>
<p>并通过<strong>霍尔传感器</strong>或<strong>反电动势</strong>，确定转子位置</p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91%E6%97%A0%E5%88%B7%E7%94%B5%E6%9C%BA%E5%92%8C%E7%94%B5%E8%B0%83/1670131686170.png" alt="1670131686170"></p>
<p>增加线圈数，但控制还是三组，用三相电</p>
<p>线圈可以在内或在外</p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91%E6%97%A0%E5%88%B7%E7%94%B5%E6%9C%BA%E5%92%8C%E7%94%B5%E8%B0%83/1670131783587.png" alt="1670131783587"></p>
<p>无刷电机的 KV 参数，可以用用来计算转速</p>
<script type="math/tex; mode=display">
RPM = KV \times volt</script><p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91%E6%97%A0%E5%88%B7%E7%94%B5%E6%9C%BA%E5%92%8C%E7%94%B5%E8%B0%83/1670131825005.png" alt="1670131825005"></p>
<h2 id="型号命名规律"><a href="#型号命名规律" class="headerlink" title="型号命名规律"></a>型号命名规律</h2><p> 如2216、2814、A2212 等， 前两位是定子外径（mm）、后两位的是定子高度（mm）。数越大，电机的功率越大。同时，尺寸越大，重量也越大。 </p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>嵌入式</tag>
        <tag>硬件知识</tag>
      </tags>
  </entry>
  <entry>
    <title>【祖传板子】记录</title>
    <url>/2022/work/%E5%B5%8C%E5%85%A5%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E3%80%90%E7%A5%96%E4%BC%A0%E6%9D%BF%E5%AD%90%E3%80%91%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ol>
<li><h2 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h2></li>
</ol>
<h4 id="2022-12-03"><a href="#2022-12-03" class="headerlink" title="2022.12.03"></a>2022.12.03</h4><p>理解了无刷电机和电调的控制原理，<a href="https://www.bilibili.com/video/BV1LE411p7QB/，才认识到无刷电机和有刷电机的区别。">https://www.bilibili.com/video/BV1LE411p7QB/，才认识到无刷电机和有刷电机的区别。</a></p>
<h4 id="2022-12-04"><a href="#2022-12-04" class="headerlink" title="2022.12.04"></a>2022.12.04</h4><p>走了选型芯片流程 <a href="https://www.st.com/content/st_com/zh.html">STMicroelectronics: Our technology starts with you - STMicroelectronics</a> ，确定了主控选型，学习了基础软件知识：time6是可以做时钟中断；配置PWM波；配置编码器</p>
<p>了解了一些接口：rs232没人用的老电脑串口；SDIO就是SD卡的；I2S就是音频的；</p>
<h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><div class="table-container">
<table>
<thead>
<tr>
<th>外设</th>
<th>内需</th>
</tr>
</thead>
<tbody>
<tr>
<td>4个电机驱动</td>
<td>tb6612</td>
</tr>
<tr>
<td>8个舵机，电调</td>
<td></td>
</tr>
<tr>
<td>无线通信</td>
<td>==还没想好==</td>
</tr>
<tr>
<td>4个串口</td>
<td></td>
</tr>
<tr>
<td>1个显示屏</td>
<td>oled 或者 lcd；串口屏或者spi或者iic</td>
</tr>
<tr>
<td>3个按键</td>
<td></td>
</tr>
<tr>
<td>1个蜂鸣器</td>
<td></td>
</tr>
<tr>
<td>2个led灯</td>
<td>电源指示灯、状态指示灯</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>其他</th>
<th></th>
<th></th>
<th></th>
<th>内需</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>电源接口</strong></td>
<td>xt60</td>
<td>xt30</td>
<td>焊盘（用于调试检测）</td>
<td></td>
</tr>
<tr>
<td><strong>电源支持</strong></td>
<td>2s</td>
<td>3s</td>
<td>4s</td>
<td></td>
</tr>
<tr>
<td><strong>信号电源接口</strong></td>
<td>st-link</td>
<td>安卓口</td>
<td>type-C</td>
<td>stm32f103cBt6等</td>
</tr>
<tr>
<td><strong>供电模块</strong></td>
<td>LDO</td>
<td>DCDC</td>
<td>防反接</td>
<td>防短路过流保护</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>还没想好</th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>ADC</td>
<td>can</td>
<td>output</td>
<td>input</td>
<td>spi</td>
<td>iic</td>
<td>编码器接口</td>
<td>各向电机</td>
<td>SD卡</td>
</tr>
</tbody>
</table>
</div>
<h2 id="主控选型——RCT6"><a href="#主控选型——RCT6" class="headerlink" title="主控选型——RCT6"></a>主控选型——RCT6</h2><p>因为做成祖传板子，多余的引脚均不使用，因此选尽可能便宜的，尽可能小的</p>
<p>主要限制在 <strong>4个电机驱动</strong> ，算上每个有刷电机对应一个AB向编码器，驱动外设就需要 7 个，加上内部时钟，至少 8 个。</p>
<p>简单查了一下，好像f103的虽然性能不是那么优秀（咱也不知道性能要求有多高），但是飞控还是有不少人用的，而且便宜，就选定f103的</p>
<p>c8t6肯定不行，就找再大一点的，直接再cubemx里搜索，看到他是按引脚分类的，发现了rct6，接着对应st型号说明图，发现c对应48引脚，比他多的就是r对应64引脚了，进去细看正好8个电机驱动。</p>
<p>淘宝查了，不到20块一个芯片，普通QFP封装</p>
<p>考虑到我之前也用过，应该是f103r系列比较出名的，就它了</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>work</tag>
        <tag>pcb</tag>
      </tags>
  </entry>
  <entry>
    <title>name</title>
    <url>/2022/library/frontend/%E3%80%90vue%E3%80%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>  <a href="https://developer.mozilla.org/zh-CN/">https://developer.mozilla.org/zh-CN/</a></p>
<h2 id="上手vue"><a href="#上手vue" class="headerlink" title="上手vue"></a>上手vue</h2><ol>
<li>安装包管理器 <code>npm install</code></li>
<li>创建vue项目 <code>vue create name</code></li>
<li>本地运行看效果 <code>npm run serve</code>，打开 <code>localhost:8081</code> </li>
</ol>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>nerf</tag>
        <tag>work</tag>
      </tags>
  </entry>
  <entry>
    <title>name</title>
    <url>/2022/work/%E5%B5%8C%E5%85%A5%E5%BC%8F%E9%A1%B9%E7%9B%AE/bard/%E3%80%90bard%E3%80%91%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>nerf</tag>
        <tag>work</tag>
      </tags>
  </entry>
  <entry>
    <title>【航模】记录</title>
    <url>/2022/work/%E5%B5%8C%E5%85%A5%E5%BC%8F%E9%A1%B9%E7%9B%AE/%E3%80%90%E8%88%AA%E6%A8%A1%E3%80%91%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ol>
<li>搞到：碳棒，kt 泡沫板，小舵机，转向连接杆，空心杯</li>
<li>自己咋切泡沫板</li>
<li>批量祖传板子</li>
<li>超远程控制</li>
<li>超级祖传遥控器（无线遥控原理）</li>
<li>学习飞控原理（四轴和普通）</li>
</ol>
<h2 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h2><h4 id="2022-12-02"><a href="#2022-12-02" class="headerlink" title="2022.12.02"></a>2022.12.02</h4><p>看了 <code>魔界造物</code> 造的飞机，超级喜欢</p>
<h4 id="2022-12-03"><a href="#2022-12-03" class="headerlink" title="2022.12.03"></a>2022.12.03</h4><p>新西达，电机和电调，便宜</p>
<p>电机，2212，2800KV</p>
<p>快速调节器，拉杆，舵角</p>
<p>微风，练习机</p>
<h4 id="2022-12-07"><a href="#2022-12-07" class="headerlink" title="2022.12.07"></a>2022.12.07</h4><p>了解到飞控的无线通信，发现好多人都用 <code>nrf24l01</code> ，虽然还完全没理解。</p>
<p>官网链接：</p>
<p> <a href="https://www.nordicsemi.com/Products/nRF24-series">nRF24 Series - Nordic Semiconductor - nordicsemi.com</a> </p>
<p>国产：</p>
<p> <a href="https://www.ebyte.com/product-class-all.html">LoRa/zigbee/WiFi/蓝牙模块/4G DTU网关/数传电台/串口服务器/遥控开关/无线通信模块-亿佰特电子科技有限公司 (ebyte.com)</a> </p>
<h4 id="2022-12-12"><a href="#2022-12-12" class="headerlink" title="2022.12.12"></a>2022.12.12</h4><p>大购物</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>航模电池</th>
<th>平衡充电器</th>
<th>电调</th>
<th>电机</th>
<th>遥控器</th>
</tr>
</thead>
<tbody>
<tr>
<td>2s 35C 1500mAh</td>
<td>B6 50W</td>
<td>新西达 30A（2S-3S）</td>
<td>无刷电机 A2212 140KV</td>
<td>富斯i6</td>
</tr>
<tr>
<td><a href="https://m.tb.cn/h.Uis5PSO?tk=yfGfd3hL57z">https://m.tb.cn/h.Uis5PSO?tk=yfGfd3hL57z</a></td>
<td><a href="https://m.tb.cn/h.U8Sa5xa?tk=2ZWid3hMtMd">https://m.tb.cn/h.U8Sa5xa?tk=2ZWid3hMtMd</a></td>
<td><a href="https://m.tb.cn/h.U8hBohD?tk=0wBfd3hnV3j">https://m.tb.cn/h.U8hBohD?tk=0wBfd3hnV3j</a></td>
<td><a href="https://m.tb.cn/h.URmEGco?tk=axZvd3hmJ0O">https://m.tb.cn/h.URmEGco?tk=axZvd3hmJ0O</a></td>
<td>闲鱼<a href="https://m.tb.cn/h.URmwbRr?tk=lYgxd3hNzqV">https://m.tb.cn/h.URmwbRr?tk=lYgxd3hNzqV</a></td>
</tr>
</tbody>
</table>
</div>
<p>了解无刷电机参数，遥控器选型</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>work</tag>
        <tag>航模</tag>
      </tags>
  </entry>
  <entry>
    <title>【nerf】记录</title>
    <url>/2022/work/nerf/%E3%80%90nerf%E3%80%91%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ol>
<li>了解 cuda </li>
<li>torch.compile()</li>
<li>读 instant-ngp 代码</li>
</ol>
<h2 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h2><h4 id="好久以前"><a href="#好久以前" class="headerlink" title="好久以前"></a>好久以前</h4><p>改了 <strong>贝叶斯优化</strong> 采样点代码（主要改在库里），但是速度慢200倍，之后出来了自适应采样点，就放弃继续了。</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>nerf</tag>
        <tag>work</tag>
      </tags>
  </entry>
  <entry>
    <title>【前端】记录</title>
    <url>/2022/work/%E5%89%8D%E7%AB%AF/%E3%80%90%E5%89%8D%E7%AB%AF%E3%80%91%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ol>
<li>应用 vue 到自己的博客</li>
<li>正经学会 html css js vue</li>
<li>创建各种样式，方便记录</li>
</ol>
<h2 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h2><h4 id="2022-12-02"><a href="#2022-12-02" class="headerlink" title="2022.12.02"></a>2022.12.02</h4><p>查 Hexo 原理，知道了背后的 GitHub page，自己新建了一个，就可以随意编辑了</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>work</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>【常用公式】总结</title>
    <url>/2022/library/%E8%AF%BE%E5%86%85%E7%9F%A5%E8%AF%86/%E3%80%90%E5%B8%B8%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E3%80%91%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h2><h4 id="和差化积"><a href="#和差化积" class="headerlink" title="和差化积"></a>和差化积</h4><p>sin(a)+sin(b) = 2sin[(a+b)/2]cos[(a-b)/2]</p>
<p>sin(a)-sin(b) = 2cos[(a+b)/2]sin[(a-b)/2]</p>
<p>cos(a)+cos(b) = 2cos[(a+b)/2]cos[(a-b)/2]</p>
<p>cos(a)-cos(b) = -2sin[(a+b)/2]sin[(a-b)/2]</p>
<p>tanA+tanB=sin(A+B)/cosAcosB</p>
<h4 id="积化和差"><a href="#积化和差" class="headerlink" title="积化和差"></a>积化和差</h4><p>sin(a)sin(b) = -1/2*[cos(a+b)-cos(a-b)]</p>
<p>cos(a)cos(b) = 1/2*[cos(a+b)+cos(a-b)]</p>
<p>sin(a)cos(b) = 1/2*[sin(a+b)+sin(a-b)]</p>
<p>cos(a)sin(b) = 1/2*[sin(a+b)-sin(a-b)]</p>
<h2 id="滤波器"><a href="#滤波器" class="headerlink" title="滤波器"></a>滤波器</h2><h4 id="RC低通滤波器"><a href="#RC低通滤波器" class="headerlink" title="RC低通滤波器"></a>RC低通滤波器</h4><p><img src="/2022/library/%E8%AF%BE%E5%86%85%E7%9F%A5%E8%AF%86/%E3%80%90%E5%B8%B8%E7%94%A8%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F%E3%80%91%E6%80%BB%E7%BB%93/1670057171754.png" alt="1670057171754"></p>
<script type="math/tex; mode=display">
H(j \omega)=\frac{U_{o}}{U}_{i}=\frac{X_{C}}{R+X_{C}}=\frac{\frac{1}{j \omega C}}{R+\frac{1}{j \omega C}}=\frac{1}{1 + R C j \omega}</script><p>截止频率</p>
<script type="math/tex; mode=display">
|H(j \omega)|=\sqrt{\frac{1}{1+(\omega RC)^{2}}}=\frac{\sqrt{2}}{2}\\
\omega_0 = \frac1{RC}\\
f_0 = \frac1{2 \pi R C}</script><h4 id="RLC带通滤波器"><a href="#RLC带通滤波器" class="headerlink" title="RLC带通滤波器"></a>RLC带通滤波器</h4><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>课内知识</tag>
        <tag>公式</tag>
      </tags>
  </entry>
  <entry>
    <title>从regedit改变键盘映射关系</title>
    <url>/2022/solved/%E4%BB%8Eregedit%E6%94%B9%E5%8F%98%E9%94%AE%E7%9B%98%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB/</url>
    <content><![CDATA[<div class="note primary">
            <div align="center">`caps lock`不怎么用，一般用`shift+字母`代替；用鼠标操控时，经常左手够删除键`del`，就想直接调换过来</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<blockquote>
<p>​    因为鼠标滚轮也坏了，想做一点更自由的改动，因此直接研究了，修改注册表设置按键映射。</p>
</blockquote>
<h2 id="两步设置按键映射"><a href="#两步设置按键映射" class="headerlink" title="两步设置按键映射"></a>两步设置按键映射</h2><ol>
<li><p>注册表定位到<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout</code>，新建一个<code>二进制数值</code>，命名为<code>Scancode Map</code></p>
<p><img src="/2022/solved/%E4%BB%8Eregedit%E6%94%B9%E5%8F%98%E9%94%AE%E7%9B%98%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB/1669721677084.png" alt="1669721677084"></p>
</li>
<li><p>输入按键映射代码，保存，重启电脑</p>
<p><img src="/2022/solved/%E4%BB%8Eregedit%E6%94%B9%E5%8F%98%E9%94%AE%E7%9B%98%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB/1669721822415.png" alt="1669721822415"></p>
<p><strong>除了图中画框的以外都是固定样式</strong></p>
<h2 id="按键映射代码规则"><a href="#按键映射代码规则" class="headerlink" title="按键映射代码规则"></a>按键映射代码规则</h2><ul>
<li>框一<code>02</code>：表示<strong>映射个数</strong>，如一组映射为<code>02</code>，两组映射为<code>03</code>，以此类推。</li>
<li>框二<code>0E 00 3A 00</code>：表示映射按键的<strong>扫描码</strong>（与其对应的还有ASCII码），<strong>将前者映射到后者</strong>，如<code>0E 00</code>表示<code>backspace</code>，<code>3A 00</code>表示<code>caps lock</code>。（具体映射表见后）</li>
</ul>
<h2 id="映射表"><a href="#映射表" class="headerlink" title="映射表"></a>映射表</h2><p> <a href="https://blog.csdn.net/liuyukuan/article/details/120575746">键盘按键的各种编码对照表_liuyukuan的博客-CSDN博客_键盘编码</a> </p>
<p> <a href="https://blog.csdn.net/qq_37232329/article/details/79926440">键盘扫描码_Kiopler的博客-CSDN博客_键盘扫描码</a> </p>
<p>（注意提供的多位的扫描码都是反的，如<code>0e 53</code>，其实应为<code>53 0e</code>）</p>
</li>
</ol>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>solved</tag>
        <tag>regedit</tag>
        <tag>键盘</tag>
      </tags>
  </entry>
  <entry>
    <title>【k210】开发板上手</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E8%BD%AF%E4%BB%B6/%E5%BC%80%E5%8F%91%E6%9D%BF%E4%B8%8A%E6%89%8B/%E3%80%90k210%E3%80%91%E5%BC%80%E5%8F%91%E6%9D%BF%E4%B8%8A%E6%89%8B/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>kflash烧录固件</p>
<p>maixpy直接连接编程</p>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h4 id="保存图片到SD卡"><a href="#保存图片到SD卡" class="headerlink" title="保存图片到SD卡"></a>保存图片到SD卡</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">img.save(&quot;/sd/test.jpg&quot;, quality=95)</span><br></pre></td></tr></table></figure>
<h4 id="串口"><a href="#串口" class="headerlink" title="串口"></a>串口</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from machine import UART</span><br><span class="line"></span><br><span class="line"># 选择引脚用于串口通信</span><br><span class="line">fm.register(board_info.PIN10,fm.fpioa.UART2_TX)</span><br><span class="line">fm.register(board_info.PIN11,fm.fpioa.UART2_RX)</span><br><span class="line"># 开启串口</span><br><span class="line">uart = UART(UART.UART1, 115200, 8, 0, 0, timeout=1000, read_buf_len=4096)</span><br><span class="line"></span><br><span class="line">uart.write(data)</span><br></pre></td></tr></table></figure>
<h4 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import KPU as kpu</span><br><span class="line"></span><br><span class="line">task = kpu.load(&quot;/sd/facedetect.kmodel&quot;) # 模型SD卡上</span><br><span class="line"></span><br><span class="line">fmap = kpu.forward(task, img)		# 返回一个列表，列表值对应概率</span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>嵌入式</tag>
        <tag>软件</tag>
        <tag>开发板</tag>
        <tag>k210</tag>
      </tags>
  </entry>
  <entry>
    <title>未整理</title>
    <url>/2022/solved/%E6%9C%AA%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">help me a lot, heartfully thanks!!!</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p> <a href="https://blog.csdn.net/qq_39466755/article/details/78434547">(109条消息) 交叉编译错误make: arm-none-linux-gnueabi-gcc：命令未找到 /bin/sh: 1: arm-none-linux-gnueabi-gcc: not found问题解决_yhlvhl8487的博客-CSDN博客_arm-none-linux-gnueabi-gcc:命令未找到</a> </p>
<p> <a href="https://blog.csdn.net/qq_36393978/article/details/117695708">(109条消息) 新版本gcc(gcc10.x)编译Linux内核，错误:multiple definition of `yylloc‘_Imagine Miracle的博客-CSDN博客</a> </p>
<p> <a href="https://blog.csdn.net/xiandang8023/article/details/124750391">(109条消息) usr/bin/ld: scripts/dtc/dtc-parser.tab.o:(.bss+0x10): multiple definition of ‘yylloc‘； scripts/dtc/d_梅尔文.古的博客-CSDN博客</a> </p>
<p> <a href="https://blog.csdn.net/p1279030826/article/details/112912011">(109条消息) 【问题解决】报错：unable to execute ‘swig‘: No such file or directory_丨匿名用户丨的博客-CSDN博客_unable to execute ‘swig’: no such file or director</a> </p>
<p> <a href="https://blog.csdn.net/q936889811/article/details/80783427">(109条消息) pycharm ModuleNotFoundError: No module named ‘distutils.core‘_柔于似水的博客-CSDN博客</a> </p>
<p> <a href="https://linux.cn/article-14878-1.html">技术|修复 Ubuntu Linux 中 “Command ‘python’ not found” 的错误</a> </p>
<p> <a href="https://blog.csdn.net/wanpengpenga/article/details/122313358">(109条消息) 编译U-Boot DTB 时报错 syntax error； FATAL ERROR: Unable to parse input tree_非攻墨门的博客-CSDN博客</a> </p>
<p> <a href="https://blog.csdn.net/weixin_42912498/article/details/108443386">(109条消息) linux安装库时报错error: command ‘x86_64-linux-gnu-gcc‘ failed with exit status 1_凤舞无夜的博客-CSDN博客</a> </p>
<p> <a href="https://blog.csdn.net/p1279030826/article/details/112699149">(109条消息) Linux下切换python版本（python2和python3版本切换）_丨匿名用户丨的博客-CSDN博客</a> </p>
<p> <a href="https://blog.csdn.net/p1279030826/article/details/112888891">(109条消息) 【问题解决】报错：scripts/dtc/pylibfdt/libfdt_wrap.c:149:11: fatal error: Python.h: 没有那个文件或目录_丨匿名用户丨的博客-CSDN博客</a> </p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>solved</tag>
      </tags>
  </entry>
  <entry>
    <title>报错binsh 1 bc not found</title>
    <url>/2022/solved/%E6%8A%A5%E9%94%99binsh%201%20bc%20not%20found/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">kernel编译报错</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p><code>sudo apt-get install bc</code></p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>solved</tag>
        <tag>linux</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>报错binsh python not found</title>
    <url>/2022/solved/%E6%8A%A5%E9%94%99binsh%20python%20not%20found/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>   <a href="https://www.its301.com/article/qq_35067322/104917602">/bin/sh: python: not found 问题的解决_码农小胖哥的博客-程序员ITS301 - 程序员ITS301</a> </p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>solved</tag>
        <tag>linux</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>报错binsh 1 cc not found</title>
    <url>/2022/solved/%E6%8A%A5%E9%94%99binsh%201%20cc%20not%20found/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">`sudo apt-get install gcc`</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p> 表示缺gcc。</p>
<p><code>/bin/sh:1:***:not found</code>类型的都是需要安装解决</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>solved</tag>
        <tag>linux</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>执行make menuconfig时报错</title>
    <url>/2022/solved/%E6%89%A7%E8%A1%8Cmake%20menuconfig%E6%97%B6%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<div class="note success">
            <div align="center"> 在执行make menuconfig时出现报错 </div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>表示缺libncurses5-dev库</p>
<p><code>sudo apt-get install libncurses5-dev</code></p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>solved</tag>
        <tag>linux</tag>
        <tag>make</tag>
      </tags>
  </entry>
  <entry>
    <title>【linux】常用指令</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E3%80%90linux%E3%80%91%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><h4 id="tar压缩或解压"><a href="#tar压缩或解压" class="headerlink" title="tar压缩或解压"></a>tar压缩或解压</h4><p>压缩或解压<code>***.tar</code>，语句为<code>tar [指令名]+f [文件名]</code></p>
<h5 id="独立命令"><a href="#独立命令" class="headerlink" title="独立命令"></a>独立命令</h5><div class="table-container">
<table>
<thead>
<tr>
<th>c</th>
<th>x</th>
<th>t</th>
<th>r</th>
<th>u</th>
</tr>
</thead>
<tbody>
<tr>
<td>压缩</td>
<td>解压</td>
<td>查看内容，列出所有文件</td>
<td>向压缩文件末尾追加指定文件</td>
<td>更新原压缩包指定文件</td>
</tr>
<tr>
<td><code>tar -cf all.tar *.jpg</code></td>
<td><code>tar -xf all.tar</code></td>
<td><code>tar -tf all.tar</code></td>
<td><code>tar -rf all.tar *.gif</code></td>
<td><code>tar -uf all.tar logo.gif</code></td>
</tr>
</tbody>
</table>
</div>
<h5 id="可选命令"><a href="#可选命令" class="headerlink" title="可选命令"></a>可选命令</h5><div class="table-container">
<table>
<thead>
<tr>
<th>z</th>
<th>j</th>
<th>Z</th>
<th>v</th>
<th>O</th>
</tr>
</thead>
<tbody>
<tr>
<td>压缩或解压<code>***.gz</code></td>
<td>压缩或解压<code>***.bz2</code></td>
<td>压缩或解压<code>.Z</code></td>
<td>显示所有过程</td>
<td>将所有文件解压到标准输出</td>
</tr>
</tbody>
</table>
</div>
<p>使用示例（以<code>***.gz</code>为例）：压缩：<code>tar –czf jpg.tar.gz *.jpg</code>，解压：<code>tar -xzvf file.tar.gz</code></p>
<h5 id="必须要加f"><a href="#必须要加f" class="headerlink" title="必须要加f"></a>必须要加f</h5><h4 id="其他压缩或解压"><a href="#其他压缩或解压" class="headerlink" title="其他压缩或解压"></a>其他压缩或解压</h4><div class="table-container">
<table>
<thead>
<tr>
<th><code>***.rar</code></th>
<th><code>***.zip</code></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>rar a jpg.rar *.jpg</code></td>
<td><code>zip jpg.zip *.jpg</code></td>
</tr>
<tr>
<td><code>unrar e file.rar</code></td>
<td><code>unzip file.zip</code></td>
</tr>
</tbody>
</table>
</div>
<p><a href="https://blog.csdn.net/imyang2007/article/details/7634470">感谢链接</a></p>
<h4 id="文件操作-1"><a href="#文件操作-1" class="headerlink" title="文件操作"></a>文件操作</h4><div class="table-container">
<table>
<thead>
<tr>
<th>新建文件夹</th>
<th>复制文件</th>
</tr>
</thead>
<tbody>
<tr>
<td>mkdir</td>
<td>cp</td>
</tr>
</tbody>
</table>
</div>
<h4 id="编辑文件"><a href="#编辑文件" class="headerlink" title="编辑文件"></a>编辑文件</h4><p>nano，vi</p>
<p>撤销：M-U —&gt; alt+U</p>
<h2 id="源"><a href="#源" class="headerlink" title="源"></a>源</h2><p>报错<code>Could not connect to archive.ubuntu.com:80</code></p>
<p> <a href="https://blog.csdn.net/weixin_40520161/article/details/90290083">(109条消息) Ubuntu sudo apt update报错：无法连接上 cn.archive.ubuntu.com:80 (123.129.214.98)。 - connect (111: 拒绝连接)_weixin_40520161的博客-CSDN博客</a> </p>
<p> <a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/">ubuntu | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror</a> </p>
<p> <a href="https://www.cnblogs.com/lizebiao/p/12875410.html">无法发起与 cn.archive.ubuntu.com:80 (2001:67c:1562::18) 的连接 - connect (101: 网络不可达) - 嫖老板 - 博客园 (cnblogs.com)</a> </p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p> <a href="https://blog.csdn.net/liudsl/article/details/79200134">(109条消息) apt 和 apt-get的区别_御龙冀人的博客-CSDN博客_apt apt-get</a> </p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>Linux</tag>
        <tag>理工方向</tag>
      </tags>
  </entry>
  <entry>
    <title>【numpy】语法基础</title>
    <url>/2022/library/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81/%E3%80%90numpy%E3%80%91%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>  ravel()把数组拉成一维数组</p>
<p>asarray节省内存的复制数组</p>
<p>concatenate拼接数组</p>
<p>searchsorted搜索排序</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>深度学习</tag>
        <tag>numpy</tag>
        <tag>代码</tag>
      </tags>
  </entry>
  <entry>
    <title>【torch】语法基础</title>
    <url>/2022/library/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E4%BB%A3%E7%A0%81/%E3%80%90torch%E3%80%91%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="tensor处理"><a href="#tensor处理" class="headerlink" title="tensor处理"></a>tensor处理</h2><h4 id="生成tensor"><a href="#生成tensor" class="headerlink" title="生成tensor"></a>生成tensor</h4><p>torch.rand，</p>
<h4 id="torch-cat合并数组"><a href="#torch-cat合并数组" class="headerlink" title="torch.cat合并数组"></a><code>torch.cat</code>合并数组</h4><h4 id="tolist数组转list类型"><a href="#tolist数组转list类型" class="headerlink" title=".tolist数组转list类型"></a><code>.tolist</code>数组转list类型</h4><h4 id="torch-cumsum累加"><a href="#torch-cumsum累加" class="headerlink" title="torch.cumsum累加"></a>torch.cumsum累加</h4><h3 id="形状改变"><a href="#形状改变" class="headerlink" title="形状改变"></a>形状改变</h3><p>sequeeze，[…,:,None]</p>
<p>detach分离出来，不带梯度</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>深度学习</tag>
        <tag>代码</tag>
        <tag>torch</tag>
      </tags>
  </entry>
  <entry>
    <title>【python】进阶总结</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E8%AF%AD%E8%A8%80/%E3%80%90python%E3%80%91%E8%BF%9B%E9%98%B6%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><h4 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">b </span><br></pre></td></tr></table></figure>
<h4 id="map"><a href="#map" class="headerlink" title="map"></a>map</h4><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>python</tag>
        <tag>library</tag>
        <tag>理工方向</tag>
        <tag>语言</tag>
      </tags>
  </entry>
  <entry>
    <title>【V831】开发板上手</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E8%BD%AF%E4%BB%B6/%E5%BC%80%E5%8F%91%E6%9D%BF%E4%B8%8A%E6%89%8B/%E3%80%90V831%E3%80%91%E5%BC%80%E5%8F%91%E6%9D%BF%E4%B8%8A%E6%89%8B/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">V831是</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="烧录系统"><a href="#烧录系统" class="headerlink" title="烧录系统"></a>烧录系统</h2><p> <a href="https://wiki.sipeed.com/hardware/zh/maixII/M2/flash.html">MaixII-Dock 烧录系统 - Sipeed Wiki</a> </p>
<p>烧录过系统之后，把SD卡插上，type-C上电之后，屏幕就会显示图标了。</p>
<h2 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h2><p>​    上电后，自动运行<code>main.py</code>，修改<code>main.py</code>即可。运行代码与<code>k210</code>一致，传承自<code>openmv</code>。</p>
<p>​    文件构成：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TD</span><br><span class="line">. --&gt; b[root]</span><br><span class="line">. --&gt; c[home]</span><br><span class="line">b--&gt;d[模型等文件]</span><br><span class="line">b--&gt;e[wpa_supplicant.conf]</span><br><span class="line">b--&gt;f[app]</span><br><span class="line"></span><br><span class="line">c--&gt;g[main.py]</span><br><span class="line">c--&gt;h[run.py]</span><br><span class="line">c--&gt;i[smart]</span><br></pre></td></tr></table></figure>
<h3 id="控制方式一：命令行"><a href="#控制方式一：命令行" class="headerlink" title="控制方式一：命令行"></a>控制方式一：命令行</h3><p>​    可以用串口调试工具<code>putty</code>，把他当作<code>Linux</code>系统即可。</p>
<h4 id="修改文本文件"><a href="#修改文本文件" class="headerlink" title="修改文本文件"></a>修改文本文件</h4><p><code>vim [文件名]</code>打开编辑界面</p>
<h4 id="重启或关机"><a href="#重启或关机" class="headerlink" title="重启或关机"></a>重启或关机</h4><p>重启：<code>reboot</code>，关机：<code>poweroff</code></p>
<h4 id="导入文件"><a href="#导入文件" class="headerlink" title="导入文件"></a>导入文件</h4><p>​    重新用读卡器插电脑上后，报错无法打开。</p>
<p>​    但是可以用<code>V831</code>的<code>OTG</code>口，连接电脑会显示U盘。可以直接复制文件进去。</p>
<h3 id="控制方式二：maixpy3-jupyter"><a href="#控制方式二：maixpy3-jupyter" class="headerlink" title="控制方式二：maixpy3+jupyter"></a>控制方式二：maixpy3+jupyter</h3><p> <a href="https://wiki.sipeed.com/soft/maixpy3/zh/tools/0.MaixII-Dock.html">通过 IDE 连接 MaixII-Dock - Sipeed Wiki</a> </p>
<p> <a href="https://wiki.sipeed.com/soft/maixpy3/zh/tools/maixsense.html">使用 MaixPy3 IDE 连接 MaixSense - Sipeed Wiki</a> </p>
<h2 id="指令集"><a href="#指令集" class="headerlink" title="指令集"></a>指令集</h2><p>见附件<code>first.ipynb</code></p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>嵌入式</tag>
        <tag>软件</tag>
        <tag>V831</tag>
        <tag>开发板</tag>
      </tags>
  </entry>
  <entry>
    <title>pycharm修改快捷键</title>
    <url>/2022/solved/pycharm%E4%BF%AE%E6%94%B9%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">在file --> settings -- keymap中![1668304724550](pycharm修改快捷键/1668304724550.png)</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>可以在里面关键词搜索，也可以找对应分类。</p>
<p>点击搜索栏同行的笔，可以进行修改。</p>
<p>我修改的包括</p>
<ul>
<li>运行代码 —&gt; <code>ctrl+shift+caps lock</code></li>
<li>debug代码 —&gt; <code>ctrl+shift+Q</code></li>
</ul>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>solved</tag>
        <tag>pycharm</tag>
      </tags>
  </entry>
  <entry>
    <title>【nerf】Point-NeRF笔记</title>
    <url>/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">用点云表示nerf</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>  point-nerf</p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/Users\DELL\AppData\Roaming\Typora\typora-user-images\1658151343476.png" alt="1658151343476" style="zoom: 33%;"></p>
<ul>
<li><p>继承Nerf和深度多视图立体方法的优点</p>
</li>
<li><p>比Nerf快30倍</p>
</li>
<li>可以与其他3D重建方法结合</li>
</ul>
<hr>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/Users\DELL\AppData\Roaming\Typora\typora-user-images\1658153159758.png" alt="1658153159758" style="zoom:33%;"></p>
<ul>
<li>用0.2秒从三个输入视图生成点云</li>
</ul>
<hr>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/Users\DELL\AppData\Roaming\Typora\typora-user-images\1658153560472.png" alt="1658153560472" style="zoom:33%;"></p>
<ul>
<li>用20-40min训练得到的效果与Nerf训练20+hour 的效果相当甚至更好</li>
</ul>
<h2 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h2><ul>
<li>基于点云    P点：p位置，f神经特征向量（ 局部3D场景信息 ），γ位于表面的可能性0-1</li>
<li>修剪和生长</li>
<li>可以对接各种获得稠密点云的方法，而不仅仅是MVSNet。 </li>
</ul>
<h2 id="主要流程"><a href="#主要流程" class="headerlink" title="主要流程"></a>主要流程</h2><ul>
<li>输入照片 —&gt; MVS生成深度图 —&gt; 获得点云p、γ —&gt; 渲染新视角（point-nerf） —&gt; 更新点云</li>
</ul>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/1658128325205.png" alt="1658128325205"> </p>
<h2 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h2><h3 id="MVS"><a href="#MVS" class="headerlink" title="MVS"></a>MVS</h3><p> MVSnet:从非结构化多视角立体中推断深度<br>网络输入：1张参考图像+N张原图像（从其他视角观察同一物体的图像），每张图像对应的相机内参和外参<br>网络输出：概率图+优化深度图，在后处理中使用概率图对优化深度图进行过滤 </p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/1658194855269.png" alt="1658194855269"></p>
<h3 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h3><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p> <a href="https://blog.csdn.net/qq_28053189/article/details/74898110">(96条消息) 从照片的三维重建（3D Reconstruction）——MVS系列（１）_yuboona的博客-CSDN博客_mvs算法</a> </p>
<p> <a href="https://blog.csdn.net/weeeeeida/article/details/101726093">(96条消息) SFM 与MVS的区别_weeeeeida的博客-CSDN博客_sfm和mvs</a> </p>
<p> <a href="https://blog.csdn.net/weixin_43013761/article/details/102852209?spm=1001.2014.3001.5502">(96条消息) 3D点云重建0-00：MVSNet(R-MVSNet)-目录-史上最新无死角讲解_江南才尽，年少无知！的博客-CSDN博客</a> </p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li>第一步获取稠密点云的方法不只MVS（6.4实验：用colmap点云转化到point-nerf，200k；提供极端示例，用非常稀疏的初始点云）</li>
<li>大规模3D场景的评估（ScanNet）</li>
<li>高效的临近神经点查询</li>
<li>高效的渲染方法</li>
</ol>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/Users\DELL\AppData\Roaming\Typora\typora-user-images\1658154067831.png" alt="1658154067831" style="zoom:33%;"></p>
<ol>
<li>点云可能适合3D建模实体</li>
</ol>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ul>
<li>[x] 啥是MVS<ul>
<li>[ ] 咋生成初始点云的</li>
<li>[x] 为啥不能直接用，或者改进，或者用其他的（因为只有深度信息）</li>
</ul>
</li>
<li>[x] 篇尾总结</li>
<li>[ ] point-nerf渲染：自己对自己没有影响吗？</li>
<li>[ ] f到底是啥</li>
<li>[ ] colmap咋就有点云了呢</li>
</ul>
<h2 id="PointNerf"><a href="#PointNerf" class="headerlink" title="PointNerf"></a>PointNerf</h2><p><strong>体素渲染</strong></p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/41f23bb937554eef9bc59be5e35edece.png" alt="在这里插入图片描述"> </p>
<p>c:像素点颜色，M:采样点个数，σ:体密度， τ:遮挡后剩余光， Δ:相邻样本距离，r:角度</p>
<hr>
<p><strong>输入输出</strong></p>
<p>​    传统的NeRF模型直接利用MLP对光线上的采样点查询其辐射值r和体密度σ，而Point-NeRF对每个采样点，查询其在给定半径R（论文中没说取啥值）中的K个点，以采样点位置x，光线方向d以及K个点云作为输入，输出其辐射值和体密度。</p>
<p> <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/3dcafd31179c4dd8a339eb27f08c2848.png" alt="在这里插入图片描述"> </p>
<hr>
<h3 id="1-计算"><a href="#1-计算" class="headerlink" title="1. 计算 "></a>1. 计算 <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/gif-1667309947220.gif" alt="f_{i,x}"></h3><p> <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/gif-1667310098644.gif" alt="f_{i,x}"> :点云 <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/gif.gif" alt="p_{i}"> 对于采样点位置 x 的特征向量，<img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/gif.gif" alt="p_{i}"> : 点云特征向量，x: 采样点位置， <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/gif.gif" alt="p_{i}">代表点云 <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/gif.gif" alt="p_{i}"> 到采样点 x 的相对位置 </p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/b62693bf6f524fdb945fc84cfdfd8003.png" alt="在这里插入图片描述"> </p>
<h3 id="2-计算"><a href="#2-计算" class="headerlink" title="2. 计算 "></a>2. 计算 <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/gif-1667309947223.gif" alt="f_{x}"></h3><p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/gif-1667310098652.gif" alt="f_{x}">：采样点的渲染后的特征向量，包括周围点的影响</p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/46ccd8a5c7fb4d90b4fea699c8abad94.png" alt="在这里插入图片描述"> </p>
<h3 id="3-计算辐射值r"><a href="#3-计算辐射值r" class="headerlink" title="3. 计算辐射值r"></a>3. 计算辐射值r</h3><p> <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/226855a91dd34416a673c90889d9125c.png" alt="在这里插入图片描述"> </p>
<p>​    d是视角，R是多层感知器</p>
<h3 id="4-计算体密度σ"><a href="#4-计算体密度σ" class="headerlink" title="4. 计算体密度σ"></a>4. 计算体密度σ</h3><p> <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/4c08bf3e7c3e4e7cb892f82bf872bb4b.png" alt="在这里插入图片描述"> </p>
<p>T是mlp</p>
<hr>
<p> <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/c6e8f9d76fae4b99958d395917458a66.png" alt="在这里插入图片描述"> </p>
<h2 id="初始点云"><a href="#初始点云" class="headerlink" title="初始点云"></a>初始点云</h2><h3 id="获取图像深度"><a href="#获取图像深度" class="headerlink" title="获取图像深度"></a>获取图像深度</h3><p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/beb43ab7eedb4ce9b744cc7ca46b9448.png" alt="img"> </p>
<p>G是MVSnet，可以理解成 3D CNN模块 </p>
<p> I是原图像，Φ是摄像机参数； additional neighboring views ( we use two additional views in most cases. )</p>
<h3 id="获取特征f"><a href="#获取特征f" class="headerlink" title="获取特征f"></a>获取特征f</h3><p> 将点云投影到reference image的特征图上，将投影点对应的特征向量（不同尺度下特征的聚合）作为点云的特征向量 </p>
<p><img src="https://img-blog.csdnimg.cn/68593312927546f7820fda1c571d83c9.png" alt="img" style="zoom:33%;"> </p>
<p>G是二维CNN（  带有3个下采样层的VGG网络 ）</p>
<p>向量是56 （ 8 + 16 + 32 ）通道， 最终的每个点的神经特征是59 通道的向量。  </p>
<h2 id="剪枝和生长"><a href="#剪枝和生长" class="headerlink" title="剪枝和生长"></a>剪枝和生长</h2><p> 初始的点云往往有空洞或离群点，这会影响到渲染质量， 文章发现直接优化现存点的位置会让训练不稳定并且并不能填补大空洞 。</p>
<h3 id="剪枝"><a href="#剪枝" class="headerlink" title="剪枝"></a>剪枝</h3><p>γ：用sparsity loss优化，趋近于0或1</p>
<p> <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/47ec1ea670d34d728fa6d1920fa98b75.png" alt="在这里插入图片描述"> </p>
<p>每10000次迭代就删去γ &lt;0.1的点</p>
<h3 id="生长"><a href="#生长" class="headerlink" title="生长"></a>生长</h3><p>计算每条光线遮挡值最大的点</p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/d39620fc168844918a7c2942bcaede4a.png" alt="在这里插入图片描述"> </p>
<p>如果<img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/0b4e1994da04413a8866105b4989f8b8.png" alt="img"> </p>
<p> <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/f4e73e69a8714652a345e08ece53b59b.png" alt="img">作为该点到它最近的神经点的距离</p>
<p>保证离表面近，离其他点远。</p>
<h2 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h2><p>Lrender：</p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/Users\DELL\AppData\Roaming\Typora\typora-user-images\1658150505789.png" alt="1658150505789" style="zoom: 50%;"></p>
<p>Lsparse：</p>
<p><img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/新建文件夹/暂时/nerf/point-nerf汇报/讲解pointnerf/47ec1ea670d34d728fa6d1920fa98b75.png" alt="在这里插入图片描述"></p>
<p> <img src="/2022/work/nerf/%E3%80%90nerf%E3%80%91Point-NeRF%E7%AC%94%E8%AE%B0/5c3babb1708240a88a300e628a460368.png" alt="在这里插入图片描述"> </p>
<p>论文中采取 a = 2e-3</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>nerf</tag>
        <tag>work</tag>
        <tag>Point-NeRF</tag>
      </tags>
  </entry>
  <entry>
    <title>github的github.io项目打不开，显示404</title>
    <url>/2022/solved/github%E7%9A%84github.io%E9%A1%B9%E7%9B%AE%E6%89%93%E4%B8%8D%E5%BC%80/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h2><p>先连接不到github，然后用steam++连接上了，然后出现这种情况。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>通常直接把你的加速器关闭就行了</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>github</tag>
        <tag>solved</tag>
      </tags>
  </entry>
  <entry>
    <title>【钢琴】织体类型</title>
    <url>/2022/library/inte/%E3%80%90%E9%92%A2%E7%90%B4%E3%80%91%E7%BB%87%E4%BD%93%E7%B1%BB%E5%9E%8B/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p><img src="/2022/library/inte/%E3%80%90%E9%92%A2%E7%90%B4%E3%80%91%E7%BB%87%E4%BD%93%E7%B1%BB%E5%9E%8B/1666968516628.png" alt="1666968516628"></p>
<p><img src="/2022/library/inte/%E3%80%90%E9%92%A2%E7%90%B4%E3%80%91%E7%BB%87%E4%BD%93%E7%B1%BB%E5%9E%8B/1667918446434.png" alt="1667918446434"></p>
<p>2536嗨</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>inte</tag>
        <tag>library</tag>
        <tag>钢琴</tag>
      </tags>
  </entry>
  <entry>
    <title>【latex】学习</title>
    <url>/2022/library/inte/%E3%80%90latex%E3%80%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">汇总整理</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>使用单<code>$</code>围住表达式，可以插入公式。</p>
<p>使用双$$$$围住表达式，可以居中显示。（typora快捷键 <code>ctrl+shift+M</code>）</p>
<p> <a href="https://www.latexlive.com/">在线LaTeX公式编辑器-编辑器 (latexlive.com)</a> </p>
<h2 id="常用符号"><a href="#常用符号" class="headerlink" title="常用符号"></a>常用符号</h2><h4 id="二元运算符"><a href="#二元运算符" class="headerlink" title="二元运算符"></a>二元运算符</h4><div class="table-container">
<table>
<thead>
<tr>
<th>公式</th>
<th>代码</th>
</tr>
</thead>
<tbody>
<tr>
<td>$\times$</td>
<td>\times</td>
</tr>
<tr>
<td>$\cdot$</td>
<td>\cd</td>
</tr>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4 id="二元关系符"><a href="#二元关系符" class="headerlink" title="二元关系符"></a>二元关系符</h4><div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4 id="箭头符号"><a href="#箭头符号" class="headerlink" title="箭头符号"></a>箭头符号</h4><div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<h4 id="其他符号"><a href="#其他符号" class="headerlink" title="其他符号"></a>其他符号</h4><div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td></td>
</tr>
</tbody>
</table>
</div>
<h2 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h2><h2 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h2><p>需要使用 <code>\qquad</code>,<code>\quad</code>,<code>a\b</code>,应该是占位符和变量之间需要有{}相隔。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ C_&#123;1&#125; \qquad &#123;C_2&#125; $$</span><br><span class="line"></span><br><span class="line">$$ C_&#123;1&#125; \quad &#123;C_2&#125; $$</span><br><span class="line"></span><br><span class="line">$$ C_&#123;1&#125; \ &#123;C_2&#125; $$</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h2><h4 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h4><p>下标符号<code>_</code>，上标符号<code>^</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>结果</th>
<th>公式</th>
</tr>
</thead>
<tbody>
<tr>
<td>$C_{m,n}$</td>
<td><script type="math/tex">C_{m,n}</script></td>
</tr>
<tr>
<td>$c_{1}^{2}=a^{2}+b^{2}$</td>
<td><script type="math/tex">c_{1}^{2}=a^{2}+b^{2}</script></td>
</tr>
</tbody>
</table>
</div>
<h4 id="上下标注"><a href="#上下标注" class="headerlink" title="上下标注"></a>上下标注</h4><p>上划线<code>\overline</code>，下划线<code>\underline</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>上划线<code>\overline&#123;&#125;</code>，下划线<code>\underline&#123;&#125;</code></th>
<th><code>\widetilde</code>和<code>\widehat</code></th>
</tr>
</thead>
<tbody>
<tr>
<td>$\overline{m}$</td>
<td><script type="math/tex">y'=3\widetilde a</script></td>
</tr>
</tbody>
</table>
</div>
<h2 id="计算符号"><a href="#计算符号" class="headerlink" title="计算符号"></a>计算符号</h2><h4 id="平方根"><a href="#平方根" class="headerlink" title="平方根"></a>平方根</h4><p>符号<code>\sqrt</code></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>结果</th>
<th>公式</th>
</tr>
</thead>
<tbody>
<tr>
<td>$\sqrt{x+y}$</td>
<td><code>$\sqrt&#123;x+y&#125;$</code></td>
</tr>
<tr>
<td>$\sqrt[3]{x^{2}+y}$</td>
<td><script type="math/tex">\sqrt[3]{x^{2}+y}</script></td>
</tr>
</tbody>
</table>
</div>
<h4 id="值比较符"><a href="#值比较符" class="headerlink" title="值比较符"></a>值比较符</h4><div class="table-container">
<table>
<thead>
<tr>
<th>$\le$</th>
<th>$\ge$</th>
<th>$\ne$</th>
</tr>
</thead>
<tbody>
<tr>
<td><script type="math/tex">\le</script></td>
<td><script type="math/tex">\ge</script></td>
<td><script type="math/tex">\ne</script></td>
</tr>
</tbody>
</table>
</div>
<h2 id="水平括号"><a href="#水平括号" class="headerlink" title="水平括号"></a>水平括号</h2><p><code>\overbrace</code> 和 <code>\underbrace</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ \underbrace&#123;a+b+\cdots+z&#125;_&#123;26&#125;$$</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="重音号"><a href="#重音号" class="headerlink" title="重音号"></a>重音号</h2><p><code>\widetilde</code> 和 <code>\widehat</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$y&#x27;=3\widetilde a$$</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h2><p><code>\overrightarrow</code> 和 <code>\overleftarrow</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$\overrightarrow &#123;AC&#125; = \overrightarrow &#123;AB&#125; +\overrightarrow &#123;BC&#125; $$ </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="圆点"><a href="#圆点" class="headerlink" title="圆点"></a>圆点</h2><p><code>\cdot</code>, <code>\cdots</code>,<code>\vdot</code>,<code>\ddot</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ a=b \cdot c $$</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="函数名"><a href="#函数名" class="headerlink" title="函数名"></a>函数名</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\arccos \cos \csc \arcsin \cosh \deg \arctan \cot \det \arg \coth \dim \sinh \sup \tan</span><br><span class="line"></span><br><span class="line">\[\lim_&#123;&lt;!-- --&gt;x \rightarrow 0&#125; \frac&#123;&lt;!-- --&gt;\sin x&#125;&#123;&lt;!-- --&gt;x&#125;=1\]</span><br><span class="line"></span><br><span class="line">\exp \ker \limsup \min \gcd \lg \ln \Pr \hom \lim \log \sec \inf \liminf \max \sin </span><br><span class="line"></span><br><span class="line">\tanh </span><br></pre></td></tr></table></figure>
<p>例如：  </p>
<h2 id="数学符"><a href="#数学符" class="headerlink" title="数学符"></a>数学符</h2><p><code>\mathbf</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ x^&#123;2&#125; \geq 0\qquad \textrm&#123;for all &#125;x\in\mathbf&#123;R&#125; $$</span><br><span class="line">$$x^&#123;2&#125; \geq 0\qquad \textrm&#123;for all &#125;x\in\mathbb&#123;R&#125; $$</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="分数"><a href="#分数" class="headerlink" title="分数"></a>分数</h2><p><code>\frac&#123;&#125;&#123;&#125;</code> 或者硬写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$\sin \alpha = \frac&#123;a&#125;&#123;c&#125; $$</span><br><span class="line">$$x^&#123;1/2&#125; $$</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="二项系数"><a href="#二项系数" class="headerlink" title="二项系数"></a>二项系数</h2><p><code>&#123;... \choose ...&#125;</code> 或 <code>&#123;... \atop ...&#125;</code>。第二个命令与第一个命令的输出相同,只是没有括号。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$&#123;n\choose m&#125; \qquad &#123;x\atop y+2&#125;$$</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="前缀符号"><a href="#前缀符号" class="headerlink" title="前缀符号"></a>前缀符号</h2><p><code>\int</code>,<code>\sum</code>,<code>\prod</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ &#123;\int_&#123;0&#125;^&#123;\frac&#123;\pi&#125;&#123;2&#125;&#125;&#125; $$</span><br><span class="line">$$ \sum_&#123;i=1&#125;^&#123;n&#125;$$</span><br><span class="line">$$\prod_\epsilon$$</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="转义符号"><a href="#转义符号" class="headerlink" title="转义符号"></a>转义符号</h2><p>有时保留字需要加入<code>\</code>来进行转义</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$&#123;a,b,c&#125;\neq\&#123;a,b,c\&#125;$$</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="括号层次"><a href="#括号层次" class="headerlink" title="括号层次"></a>括号层次</h2><p>正确的括号大小<code>\left</code>和<code>\right</code>。如果将命令 \left 放在开分隔符前,TEX会自动决定分隔符的正确大 小。注意必须用对应的右分隔符 \right 来关闭每一个左分隔符 \left,并 且只有当这两个分隔符排在同一行时大小才会被正确确定。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ 1+\left(\frac &#123;1&#125;&#123;1-x^2&#125;\right) ^3 \qquad 1+(\frac &#123;1&#125;&#123;1-x^2&#125;) ^3$$</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ \Big( (x+y) (x-y) \Big)^&#123;2&#125; $$</span><br><span class="line"></span><br><span class="line">$$\big(\Big(\bigg(\Bigg($$ </span><br><span class="line">$$\big\&#125;\Big\&#125;\bigg\&#125;\Bigg\&#125; $$</span><br><span class="line">$$\big\|\Big\|\bigg\|\Bigg\| $$</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="垂直对齐"><a href="#垂直对齐" class="headerlink" title="垂直对齐"></a>垂直对齐</h2><p>使用<code>array</code>命令，并<code>\\</code>命令来分行。注意转义</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$\mathbf&#123;X&#125; =</span><br><span class="line">	\left( \begin&#123;array&#125;&#123;ccc&#125;</span><br><span class="line">	x\_&#123;11&#125; &amp;amp; x\_&#123;12&#125; &amp;amp; \ldots \\\</span><br><span class="line">	x\_&#123;21&#125; &amp;amp; x\_&#123;22&#125; &amp;amp; \ldots \\\</span><br><span class="line">	\vdots &amp;amp; \vdots &amp;amp; \ddots</span><br><span class="line">	\end&#123;array&#125; \right) $$</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="层次大括号"><a href="#层次大括号" class="headerlink" title="层次大括号"></a>层次大括号</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\begin&#123;cases&#125;</span><br><span class="line">	&amp;1234</span><br><span class="line">	&amp;qwer</span><br><span class="line">\end&#123;cases&#125;</span><br></pre></td></tr></table></figure>
<script type="math/tex; mode=display">
f(x)=
\begin{cases}
  f_1(x) = a + b -3c EQ_1 \\
  f_2(x) = 2a + 5b +c \notag \\
  f_3(x) = 4a + 2b -c \label{EQ_3}
\end{cases}</script><p> <img src="/2022/library/inte/%E3%80%90latex%E3%80%91%E5%AD%A6%E4%B9%A0/2018041621294865.png" alt="这里写图片描述"> </p>
<p> <img src="/2022/library/inte/%E3%80%90latex%E3%80%91%E5%AD%A6%E4%B9%A0/20180416213036844.png" alt="这里写图片描述"> </p>
<p> <img src="/2022/library/inte/%E3%80%90latex%E3%80%91%E5%AD%A6%E4%B9%A0/20180416213119987.png" alt="这里写图片描述"> </p>
<p> <img src="/2022/library/inte/%E3%80%90latex%E3%80%91%E5%AD%A6%E4%B9%A0/20180416213126857.png" alt="这里写图片描述"> </p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>inte</tag>
        <tag>library</tag>
        <tag>latex</tag>
      </tags>
  </entry>
  <entry>
    <title>【算法】贝叶斯优化</title>
    <url>/2022/library/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%AE%97%E6%B3%95/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<div class="note success">
            <div align="center"> 这篇blog参考github上一个基于高斯过程回归的贝叶斯优化开源项目(python)：https://github.com/fmfn/BayesianOptimization </div><p> <strong>AutoML</strong> ⊃ <strong>BO</strong> ⊃ <strong>SMBO</strong> ⊃ <strong>{GPR, TPE}</strong> </p>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="贝叶斯优化器的介绍"><a href="#贝叶斯优化器的介绍" class="headerlink" title="贝叶斯优化器的介绍"></a>贝叶斯优化器的介绍</h2><p>  贝叶斯优化在不知道目标函数（黑箱函数）长什么样子的情况下，通过猜测黑箱函数长什么样，来求一个可接受的最大值。和网格搜索相比，优点是迭代次数少(节省时间)，粒度可以到很小，缺点是不容易找到全局最优解。<br>  贝叶斯优化流程图如下：</p>
<p> <img src="/2022/library/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%AE%97%E6%B3%95/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%BC%98%E5%8C%96/20190123102311588.png" alt="在这里插入图片描述"> </p>
<p>贝叶斯优化有两个核心过程，先验函数(Prior Function,PF)与采集函数(Acquisition Function,AC)，采集函数也可以叫效能函数(Utility Funtcion)，但一般还是称呼为采集函数，见下面引用论文A Tutorial on Bayesian Optimization of Expensive Cost Functions, with Application to Active User Modeling and Hierarchical Reinforcement Learning的话。PF主要利用高斯过程回归(GPR（高斯分布） vs. TPE（好成绩比坏成绩）)；AC主要包括EI，PI，UCB这几种方法，同时exploration与exploitation的平衡，也是通过AC来完成的。</p>
<h2 id="采集函数-Acquisition-Function-AC"><a href="#采集函数-Acquisition-Function-AC" class="headerlink" title="采集函数(Acquisition Function,AC)"></a>采集函数(Acquisition Function,AC)</h2><p>  常见的采集函数有下面三种，UCB，PI，EI，先介绍最好理解的UCB。</p>
<h3 id="UCB-Upper-confidence-bound"><a href="#UCB-Upper-confidence-bound" class="headerlink" title="UCB(Upper confidence bound)"></a>UCB(Upper confidence bound)</h3><p>  $UCB=\mu (x)+k\sigma (x)$，k为调节参数，直观地理解为上置信边界。</p>
<h3 id="PI-probability-of-improvement"><a href="#PI-probability-of-improvement" class="headerlink" title="PI(probability of improvement)"></a>PI(probability of improvement)</h3><p>​    $P I(x)=P(f(x) \geq f(x^{+})+U)=\Phi(\frac{\mu(x)-f(x^{+})-v}{\sigma(x)})$<br>​    超参数 $v$ 用于调节exploitation与exploitation，$v=0$  更倾向于收敛到$f(x^{+})$附近，$\Phi(\cdot)$表示正态累计分布函数 ，$f(x^{+})$表示现有的最大值 。<br> 其原理就是找到未知点的函数值比$f(x^{+})$大的概率，取这些点中概率最大的点，具体比$f(x^{+})$ 大多少不考虑，这里通过Z-scores标准化法，让每个未知点函数值大于$f(x^{+})$ 的概率可以进行比较。  </p>
<p>​    Z-scores标准化法，$ \frac{x \mu} \sigma$，x为观察点，$\mu$为所有观察点的均值，$\sigma$为所有观察点标准差，$ \frac{x \mu} \sigma$ 的概率密度函数符合标准正态分布。 </p>
<h3 id="EI-Expected-improvement"><a href="#EI-Expected-improvement" class="headerlink" title="EI(Expected improvement)"></a>EI(Expected improvement)</h3><p>​    后续再补上</p>
<h2 id="贝叶斯优化的一个模拟实验"><a href="#贝叶斯优化的一个模拟实验" class="headerlink" title="贝叶斯优化的一个模拟实验"></a>贝叶斯优化的一个模拟实验</h2><pre><code> 假设我们想知道下面这个黑箱函数在(-2,10)的最大值，$f(x)=e^&#123;-(x-2)^&#123;2&#125;&#125;+e^&#123;\frac&#123;-(x-6)^&#123;2&#125;&#125;&#123;10&#125;&#125;+\frac&#123;1&#125;&#123;x^&#123;2&#125;+1&#125;$，最大值大概是14，我们假定找到一个点其函数值大于13，就已经可以接受了，返回该函数值。
</code></pre><p> <img src="/2022/library/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%AE%97%E6%B3%95/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%BC%98%E5%8C%96/20190123102425330.png" alt="img"> </p>
<h3 id="探索-exploration-与利用-exploitation"><a href="#探索-exploration-与利用-exploitation" class="headerlink" title="探索(exploration)与利用(exploitation)"></a>探索(exploration)与利用(exploitation)</h3><p>  探索(exploration)：简单来说就是尽量选择远离已知点的点为下一次用于迭代的参考点，即尽量探索未知的区域，点的分布会尽可能的平均。<br>  利用(exploitation)：简单来说就是尽量选择靠近已知点的点为下一次用于迭代的参考点，即尽量挖掘已知点周围的点，点的分布会出现一个密集区域，容易进入局部最大。</p>
<p>​    在上文提到的github项目中，通过kappa这个参数平衡探索和利用，如上，上面的图kappa=0.1，下面的图kappa=10，我们下面的代码取kappa等于1.96，即U C B = μ ( x ) + 1.96 σ ( x ) UCB=\mu (x)+1.96\sigma (x)UCB=μ(x)+1.96σ(x)，github示例中kappa取的是中间值5，这里取1.96是为了让下面演示贝叶斯优化过程中，UCB就是95%置信区间的上界，更好理解UCB是什么，详细请看下面的贝叶斯优化过程。</p>
<p> <img src="/2022/library/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E7%AE%97%E6%B3%95/%E3%80%90%E7%AE%97%E6%B3%95%E3%80%91%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%BC%98%E5%8C%96/tt0.top-284371.gif" alt="tt0.top-284371"></p>
<p>虚线表示高斯回归过程求得的未知点的均值$\mu$ ，蓝色区域表示标准差$ \sigma$</p>
<h2 id="贝叶斯优化的应用"><a href="#贝叶斯优化的应用" class="headerlink" title="贝叶斯优化的应用"></a>贝叶斯优化的应用</h2><p>  贝叶斯优化器用于调参，可以很快找到一个可以接受的超参数值，和网格搜索相比，优点是迭代次数少(节省时间)，粒度可以到很小，缺点是不容易找到全局最优解。例如我们想调logistic回归的正则化超参数，就把黑箱函数设置成logistic回归，自变量为超参数，因变量为logistic回归在训练集准确度，设置一个可以接受的黑箱函数因变量取值，例如0.95，得到的超参数结果就是可以让logistic回归分类准确度超过0.95的一个超参数。</p>
<p><a href="https://blog.csdn.net/Leon_winter/article/details/86604553">原文链接</a></p>
<p> <a href="https://zhuanlan.zhihu.com/p/459110020">通俗科普文：贝叶斯优化与SMBO、高斯过程回归、TPE - 知乎 (zhihu.com)</a> </p>
<h2 id="Acquisition-function-Expected-Improvement-EI"><a href="#Acquisition-function-Expected-Improvement-EI" class="headerlink" title="Acquisition function / Expected Improvement (EI)"></a>Acquisition function / Expected Improvement (EI)</h2><h2 id="python实现方法"><a href="#python实现方法" class="headerlink" title="python实现方法"></a>python实现方法</h2><p>python有3个库支持，bayes_opt、hyperopt、optuna，以下详细介绍<strong>bayes_opt</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> bayes_opt <span class="keyword">import</span> BayesianOptimization</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">a, b, c</span>):  <span class="comment"># 定义函数，可以输入多个数，输出保证一个</span></span><br><span class="line">	<span class="keyword">return</span> a+b+c</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义输入值范围（名称要与函数用的相同）</span></span><br><span class="line">inputs = &#123;<span class="string">&#x27;a&#x27;</span>: (<span class="number">0</span>,<span class="number">1</span>), <span class="string">&#x27;b&#x27;</span>: (<span class="number">2</span>,<span class="number">3</span>), <span class="string">&#x27;c&#x27;</span>: (<span class="number">1</span>,<span class="number">2</span>)&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实例化贝叶斯对象</span></span><br><span class="line">opt = BayesianOptimization(run, inputs)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 优化器求解，返回</span></span><br><span class="line"><span class="comment"># 只支持求最大值</span></span><br><span class="line">opt.maximize(init_points=<span class="number">5</span>,</span><br><span class="line">             	n_iter=<span class="number">30</span>, 														acq=init_bayes.get(<span class="string">&#x27;acq&#x27;</span>))	<span class="comment"># AC方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#优化完成，取出最佳参数与最佳分数</span></span><br><span class="line">params_best = opt.<span class="built_in">max</span>[<span class="string">&quot;params&quot;</span>]</span><br><span class="line">score_best = opt.<span class="built_in">max</span>[<span class="string">&quot;target&quot;</span>]</span><br></pre></td></tr></table></figure>
<p><a href="https://blog.csdn.net/weixin_43819931/article/details/125172266">详细参考这篇</a> </p>
<h2 id="用sklearn高斯过程回归"><a href="#用sklearn高斯过程回归" class="headerlink" title="用sklearn高斯过程回归"></a>用sklearn高斯过程回归</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.gaussian_process <span class="keyword">import</span> GaussianProcessRegressor</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">a=np.random.random(<span class="number">50</span>).reshape(<span class="number">50</span>,<span class="number">1</span>)</span><br><span class="line">b=a*<span class="number">2</span>+np.random.random(<span class="number">50</span>).reshape(<span class="number">50</span>,<span class="number">1</span>)</span><br><span class="line"><span class="comment"># 实例化高斯过程对象</span></span><br><span class="line">gaussian=GaussianProcessRegressor()</span><br><span class="line"><span class="comment"># 高斯过程回归</span></span><br><span class="line">gaussian.fit(a,b)</span><br><span class="line"></span><br><span class="line">c=np.linspace(<span class="number">0.1</span>,<span class="number">1</span>,<span class="number">100</span>)</span><br><span class="line">d=gaussian.predict(c.reshape(<span class="number">100</span>,<span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>深度学习</tag>
        <tag>算法</tag>
        <tag>贝叶斯</tag>
      </tags>
  </entry>
  <entry>
    <title>【忆阻器】记录</title>
    <url>/2022/work/%E5%BF%86%E9%98%BB%E5%99%A8/%E3%80%90%E5%BF%86%E9%98%BB%E5%99%A8%E3%80%91%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ol>
<li>看看 <code>mpc</code> 具体算法</li>
</ol>
<h2 id="历程"><a href="#历程" class="headerlink" title="历程"></a>历程</h2><h4 id="2022-12-03"><a href="#2022-12-03" class="headerlink" title="2022.12.03"></a>2022.12.03</h4><p>看到稚晖君的机器人，才知道 <code>zmp</code> 和 <code>mpc</code>，觉得 <code>mpc</code> 可能有忆阻器的用武之地。后来又简单了解了一下 ，<a href="https://zhuanlan.zhihu.com/p/141871796">一个模型预测控制（MPC）的简单实现 - 知乎 (zhihu.com)</a> 没看完，<code>mpc</code> 和 <code>pid</code> 是同类东西，优势在于控制多条，简单思路了解，还不清楚具体。</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>work</tag>
        <tag>忆阻器</tag>
      </tags>
  </entry>
  <entry>
    <title>【css】学习</title>
    <url>/2022/library/inte/%E3%80%90css%E3%80%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h3 id="插入点击跳转链接"><a href="#插入点击跳转链接" class="headerlink" title="插入点击跳转链接"></a>插入点击跳转链接</h3><h3 id="将同一类型元件的不同css区分开"><a href="#将同一类型元件的不同css区分开" class="headerlink" title="将同一类型元件的不同css区分开"></a>将同一类型元件的不同css区分开</h3><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>css</tag>
        <tag>inte</tag>
        <tag>library</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo部署报错spawn failed</title>
    <url>/2022/solved/hexo%E9%83%A8%E7%BD%B2%E6%8A%A5%E9%94%99spawn%20failed/</url>
    <content><![CDATA[<h2 id="报错内容"><a href="#报错内容" class="headerlink" title="报错内容"></a>报错内容</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">err: Error: Spawn failed</span><br><span class="line">      at ChildProcess.&lt;anonymous&gt; (D:\Program Files\blog\node_modules\hexo-util\lib\spawn.js:51:21)</span><br><span class="line">      at ChildProcess.emit (node:events:526:28)</span><br><span class="line">      at ChildProcess.cp.emit (D:\Program Files\blog\node_modules\cross-spawn\lib\enoent.js:34:29)</span><br><span class="line">      at Process.ChildProcess._handle.onexit (node:internal/child_process:291:12) </span><br></pre></td></tr></table></figure>
<h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p> 问题大多是因为git进行push或者hexo d的时候改变了一些.deploy_git文件下的内容。 </p>
<blockquote>
<p>我觉得多数情况是github网络问题，但我没有证据</p>
</blockquote>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p> 把<code>.deploy_git</code>和<code>public</code>直接删除 </p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>solved</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>【深度学习工具】tensorboard学习</title>
    <url>/2022/library/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%B7%A5%E5%85%B7/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%B7%A5%E5%85%B7%E3%80%91tensorboard%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="Tensorboard的工作流程："><a href="#Tensorboard的工作流程：" class="headerlink" title="Tensorboard的工作流程："></a>Tensorboard的工作流程：</h2><ol>
<li>代码运行中，保存数据在文件夹下</li>
<li>浏览器显示</li>
</ol>
<h2 id="自动保存数据"><a href="#自动保存数据" class="headerlink" title="自动保存数据"></a>自动保存数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> torch.utils.tensorboard <span class="keyword">import</span> SummaryWriter</span><br><span class="line"><span class="comment"># 实例化</span></span><br><span class="line">writer = SummaryWriter(<span class="string">&#x27;./path/to/log&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>之后写入各类数据都是在这个文件夹中<code>./path/to/log</code></p>
<ul>
<li>针对数值<code>writer.add_scalar(key, value, global_step=None, walltime=None)</code></li>
</ul>
<p>global_step可以理解为x轴坐标。实例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>)</span><br><span class="line">    mAP = <span class="built_in">eval</span>(model)</span><br><span class="line">    writer.add_scalar(<span class="string">&#x27;mAP&#x27;</span>, mAP, epoch)</span><br></pre></td></tr></table></figure>
<ul>
<li>存储图像<code>writer.add_image(tag, img_tensor, global_step=None, walltime=None, dataformats=&#39;CHW&#39;)</code>，<code>writer.add_images(tag, img_tensor, global_step=None, walltime=None, dataformats=&#39;NCHW&#39;)</code></li>
</ul>
<h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><p><code>tensorboard --logdir=./path/to/the/folder --port 8123</code></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li><p>同时显示多组数据</p>
<p>将日志放到同一目录下，同样的语法执行就行。</p>
</li>
</ol>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>深度学习</tag>
        <tag>深度学习工具</tag>
        <tag>tensorboard</tag>
      </tags>
  </entry>
  <entry>
    <title>【verilog】学习</title>
    <url>/2022/library/%E8%AF%BE%E5%86%85%E7%9F%A5%E8%AF%86/%E3%80%90verilog%E3%80%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>verilog HDL（Hardware Description Language）</p>
<p>用代码写数字器件的连接 </p>
<p> <img src="/2022/library/%E8%AF%BE%E5%86%85%E7%9F%A5%E8%AF%86/%E3%80%90verilog%E3%80%91%E5%AD%A6%E4%B9%A0/20160608230301043" alt="这里写图片描述"> </p>
<p>有两种实现方式</p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> mux2_1(a, b, s, y); <span class="comment">//模块名、模块接口名</span></span><br><span class="line">    <span class="keyword">input</span> a, b, s;        <span class="comment">// 定义输入端口</span></span><br><span class="line">    <span class="keyword">output</span> y;              <span class="comment">// 定义输出端口</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* s为0时，选择a输出；</span></span><br><span class="line"><span class="comment">        s为1时，选择b输出。*/</span>  </span><br><span class="line">    <span class="keyword">assign</span> y = (s == <span class="number">0</span>) ? a : b;  <span class="comment">//输出信号</span></span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> mux2_1(a, b, s, y);</span><br><span class="line">    <span class="keyword">input</span> a, b, s; </span><br><span class="line">    <span class="keyword">output</span> y; </span><br><span class="line">    <span class="keyword">reg</span>  y; <span class="comment">//reg 表示寄存器</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">always</span> @(a, b, s)	<span class="comment">//当有a，b，s中任一值变化，将触发</span></span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">if</span>(!s) y = a;</span><br><span class="line">        <span class="keyword">else</span> y = b;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">always</span> @(*)	<span class="comment">//当有a，b，s中任一值变化，将触发</span></span><br><span class="line">    switch</span><br><span class="line">    </span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure>
<h2 id="实例代码解读"><a href="#实例代码解读" class="headerlink" title="实例代码解读"></a>实例代码解读</h2><figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line"><span class="keyword">module</span> pwm_buzzer(</span><br><span class="line">	<span class="keyword">input</span>				clk		,		<span class="comment">//时钟输入</span></span><br><span class="line">	<span class="keyword">input</span>				rst_n	,		<span class="comment">//复位按键输入</span></span><br><span class="line">	<span class="keyword">input</span>				key_in	,		<span class="comment">//按键输入</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">output</span>	<span class="keyword">reg</span>			buzzer			<span class="comment">//驱动蜂鸣器</span></span><br><span class="line">	);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">wire</span>				press	;		<span class="comment">//线，连接按键标志信号</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//引用按键模块</span></span><br><span class="line">	key_debounce u_key_debounce(</span><br><span class="line">		<span class="variable">.clk</span>			(clk	),</span><br><span class="line">		<span class="variable">.rst_n</span>			(rst_n	),</span><br><span class="line">		<span class="variable">.key</span>			(key_in	),</span><br><span class="line">		<span class="variable">.press</span>			(press	)</span><br><span class="line">	);</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//定义音符时序周期数</span></span><br><span class="line">	<span class="keyword">localparam</span>			M0 	= <span class="number">98800</span>,</span><br><span class="line">						M1	= <span class="number">95600</span>,</span><br><span class="line">						M2	= <span class="number">85150</span>,</span><br><span class="line">						M3	= <span class="number">75850</span>,</span><br><span class="line">						M4	= <span class="number">71600</span>,</span><br><span class="line">						M5  = <span class="number">63750</span>,</span><br><span class="line">						M6	= <span class="number">56800</span>,</span><br><span class="line">						M7	= <span class="number">50600</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//信号定义</span></span><br><span class="line">	<span class="keyword">reg</span>		[<span class="number">16</span>:<span class="number">0</span>]		cnt0		;	<span class="comment">//计数每个音符对应的时序周期</span></span><br><span class="line">	<span class="keyword">reg</span>		[<span class="number">10</span>:<span class="number">0</span>]		cnt1		;	<span class="comment">//计数每个音符重复次数</span></span><br><span class="line">	<span class="keyword">reg</span>		[<span class="number">5</span> :<span class="number">0</span>]		cnt2		;	<span class="comment">//计数曲谱中音符个数</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">reg</span>		[<span class="number">16</span>:<span class="number">0</span>]		pre_set		;	<span class="comment">//预装载值</span></span><br><span class="line">	<span class="keyword">wire</span>	[<span class="number">16</span>:<span class="number">0</span>]		pre_div		;	<span class="comment">//占空比</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">reg</span>		[<span class="number">10</span>:<span class="number">0</span>]		cishu		;	<span class="comment">//定义不同音符重复不同次数</span></span><br><span class="line">	<span class="keyword">wire</span>	[<span class="number">10</span>:<span class="number">0</span>]		cishu_div	;	<span class="comment">//音符重复次数占空比</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">reg</span> 				flag		;	<span class="comment">//歌曲种类标志：0小星星，1两只老虎</span></span><br><span class="line">	<span class="keyword">reg</span>		[<span class="number">5</span> :<span class="number">0</span>]		YINFU		;	<span class="comment">//定义曲谱中音符个数</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//歌曲种类标志位</span></span><br><span class="line">    <span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span>	<span class="comment">//每个时钟信号触发</span></span><br><span class="line">		<span class="keyword">if</span>(!rst_n) <span class="keyword">begin</span></span><br><span class="line">			flag &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(press) <span class="keyword">begin</span></span><br><span class="line">			flag &lt;= ~flag;</span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//重设音符的个数</span></span><br><span class="line">	<span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">		<span class="keyword">if</span>(!rst_n)</span><br><span class="line">			YINFU &lt;= <span class="number">48</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">1&#x27;b1</span>)</span><br><span class="line">			YINFU &lt;= <span class="number">36</span>;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			YINFU &lt;= <span class="number">48</span>;</span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//计数每个音符的周期，也就是表示音符的一个周期</span></span><br><span class="line">	<span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">		<span class="keyword">if</span>(!rst_n) <span class="keyword">begin</span></span><br><span class="line">			cnt0 &lt;= <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(press)</span><br><span class="line">			cnt0 &lt;= <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">			<span class="keyword">if</span>(cnt0 == pre_set - <span class="number">1</span>)</span><br><span class="line">				cnt0 &lt;= <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				cnt0 &lt;= cnt0 + <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//计数每个音符重复次数，也就是表示一个音符的响鸣持续时长</span></span><br><span class="line">	<span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">		<span class="keyword">if</span>(!rst_n) <span class="keyword">begin</span></span><br><span class="line">			cnt1 &lt;= <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(press)</span><br><span class="line">			cnt1 &lt;= <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">			<span class="keyword">if</span>(cnt0 == pre_set - <span class="number">1</span>)<span class="keyword">begin</span></span><br><span class="line">				<span class="keyword">if</span>(cnt1 == cishu)</span><br><span class="line">					cnt1 &lt;= <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					cnt1 &lt;= cnt1 + <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">end</span></span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//计数有多少个音符，也就是曲谱中有共多少个音符</span></span><br><span class="line">	<span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">		<span class="keyword">if</span>(!rst_n) <span class="keyword">begin</span></span><br><span class="line">			cnt2 &lt;= <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(press)</span><br><span class="line">			cnt2 &lt;= <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">			<span class="keyword">if</span>(cnt1 == cishu &amp;&amp; cnt0 == pre_set - <span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">				<span class="keyword">if</span>(cnt2 == YINFU - <span class="number">1</span>) <span class="keyword">begin</span></span><br><span class="line">					cnt2 &lt;= <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">end</span></span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					cnt2 &lt;= cnt2 + <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">end</span></span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//定义音符重复次数</span></span><br><span class="line">    <span class="keyword">always</span> @(*) <span class="keyword">begin</span>		<span class="comment">//当pre_set值变化时触发</span></span><br><span class="line">		<span class="keyword">case</span>(pre_set)</span><br><span class="line">			M0:cishu = <span class="number">242</span>;</span><br><span class="line">			M1:cishu = <span class="number">250</span>;</span><br><span class="line">			M2:cishu = <span class="number">281</span>;</span><br><span class="line">			M3:cishu = <span class="number">315</span>;</span><br><span class="line">			M4:cishu = <span class="number">334</span>;</span><br><span class="line">			M5:cishu = <span class="number">375</span>;</span><br><span class="line">			M6:cishu = <span class="number">421</span>;</span><br><span class="line">			M7:cishu = <span class="number">472</span>;</span><br><span class="line">		<span class="keyword">endcase</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//曲谱定义</span></span><br><span class="line">	<span class="keyword">always</span> @(*) <span class="keyword">begin</span></span><br><span class="line">		<span class="keyword">if</span>(flag == <span class="number">1&#x27;b0</span>) <span class="keyword">begin</span></span><br><span class="line">			<span class="keyword">case</span>(cnt2)	<span class="comment">//小星星歌谱</span></span><br><span class="line">				<span class="number">0</span> : pre_set = M1;</span><br><span class="line">				<span class="number">1</span> : pre_set = M1;</span><br><span class="line">				<span class="number">2</span> : pre_set = M5;</span><br><span class="line">				<span class="number">3</span> : pre_set = M5;</span><br><span class="line">				<span class="number">4</span> : pre_set = M6;</span><br><span class="line">				<span class="number">5</span> : pre_set = M6;</span><br><span class="line">				<span class="number">6</span> : pre_set = M5;</span><br><span class="line">				<span class="number">7</span> : pre_set = M0;</span><br><span class="line">				</span><br><span class="line">				<span class="number">8</span> : pre_set = M4;</span><br><span class="line">				<span class="number">9</span> : pre_set = M4;</span><br><span class="line">				<span class="number">10</span>: pre_set = M3;</span><br><span class="line">				<span class="number">11</span>: pre_set = M3;</span><br><span class="line">				<span class="number">12</span>: pre_set = M2;</span><br><span class="line">				<span class="number">13</span>: pre_set = M2;</span><br><span class="line">				<span class="number">14</span>: pre_set = M1;</span><br><span class="line">				<span class="number">15</span>: pre_set = M0;</span><br><span class="line">				</span><br><span class="line">				<span class="number">16</span>: pre_set = M5;</span><br><span class="line">				<span class="number">17</span>: pre_set = M5;</span><br><span class="line">				<span class="number">18</span>: pre_set = M4;</span><br><span class="line">				<span class="number">19</span>: pre_set = M4;</span><br><span class="line">				<span class="number">20</span>: pre_set = M3;</span><br><span class="line">				<span class="number">21</span>: pre_set = M3;</span><br><span class="line">				<span class="number">22</span>: pre_set = M2;</span><br><span class="line">				<span class="number">23</span>: pre_set = M0;</span><br><span class="line">				</span><br><span class="line">				<span class="number">24</span>: pre_set = M5;</span><br><span class="line">				<span class="number">25</span>: pre_set = M5;</span><br><span class="line">				<span class="number">26</span>: pre_set = M4;</span><br><span class="line">				<span class="number">27</span>: pre_set = M4;</span><br><span class="line">				<span class="number">28</span>: pre_set = M3;</span><br><span class="line">				<span class="number">29</span>: pre_set = M3;</span><br><span class="line">				<span class="number">30</span>: pre_set = M2;</span><br><span class="line">				<span class="number">31</span>: pre_set = M0;</span><br><span class="line">				</span><br><span class="line">				<span class="number">32</span>: pre_set = M1;</span><br><span class="line">				<span class="number">33</span>: pre_set = M1;</span><br><span class="line">				<span class="number">34</span>: pre_set = M5;</span><br><span class="line">				<span class="number">35</span>: pre_set = M5;</span><br><span class="line">				<span class="number">36</span>: pre_set = M6;</span><br><span class="line">				<span class="number">37</span>: pre_set = M6;</span><br><span class="line">				<span class="number">38</span>: pre_set = M5;</span><br><span class="line">				<span class="number">39</span>: pre_set = M0;</span><br><span class="line">				</span><br><span class="line">				<span class="number">40</span>: pre_set = M4;</span><br><span class="line">				<span class="number">41</span>: pre_set = M4;</span><br><span class="line">				<span class="number">42</span>: pre_set = M3;</span><br><span class="line">				<span class="number">43</span>: pre_set = M3;</span><br><span class="line">				<span class="number">44</span>: pre_set = M2;</span><br><span class="line">				<span class="number">45</span>: pre_set = M2;</span><br><span class="line">				<span class="number">46</span>: pre_set = M1;</span><br><span class="line">				<span class="number">47</span>: pre_set = M0;</span><br><span class="line">			<span class="keyword">endcase</span></span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">			<span class="keyword">case</span>(cnt2)	<span class="comment">//两只老虎歌谱</span></span><br><span class="line">				<span class="number">0</span> : pre_set = M1;</span><br><span class="line">				<span class="number">1</span> : pre_set = M2;</span><br><span class="line">				<span class="number">2</span> : pre_set = M3;</span><br><span class="line">				<span class="number">3</span> : pre_set = M1;</span><br><span class="line">				<span class="number">4</span> : pre_set = M1;</span><br><span class="line">				<span class="number">5</span> : pre_set = M2;</span><br><span class="line">				<span class="number">6</span> : pre_set = M3;</span><br><span class="line">				<span class="number">7</span> : pre_set = M1;</span><br><span class="line">				<span class="number">8</span> : pre_set = M3;</span><br><span class="line">				<span class="number">9</span> : pre_set = M4;</span><br><span class="line">				<span class="number">10</span>: pre_set = M5;</span><br><span class="line">				<span class="number">11</span>: pre_set = M0;</span><br><span class="line">				</span><br><span class="line">				<span class="number">12</span>: pre_set = M3;</span><br><span class="line">				<span class="number">13</span>: pre_set = M4;</span><br><span class="line">				<span class="number">14</span>: pre_set = M5;</span><br><span class="line">				<span class="number">15</span>: pre_set = M0;</span><br><span class="line">				</span><br><span class="line">				<span class="number">16</span>: pre_set = M5;</span><br><span class="line">				<span class="number">17</span>: pre_set = M6;</span><br><span class="line">				<span class="number">18</span>: pre_set = M5;</span><br><span class="line">				<span class="number">19</span>: pre_set = M4;</span><br><span class="line">				<span class="number">20</span>: pre_set = M3;</span><br><span class="line">				<span class="number">21</span>: pre_set = M1;</span><br><span class="line">				<span class="number">22</span>: pre_set = M5;</span><br><span class="line">				<span class="number">23</span>: pre_set = M6;</span><br><span class="line">				<span class="number">24</span>: pre_set = M5;</span><br><span class="line">				<span class="number">25</span>: pre_set = M4;</span><br><span class="line">				<span class="number">26</span>: pre_set = M3;</span><br><span class="line">				<span class="number">27</span>: pre_set = M1;</span><br><span class="line">				<span class="number">28</span>: pre_set = M2;</span><br><span class="line">				<span class="number">29</span>: pre_set = M5;</span><br><span class="line">				<span class="number">30</span>: pre_set = M1;</span><br><span class="line">				<span class="number">31</span>: pre_set = M0;</span><br><span class="line">				</span><br><span class="line">				<span class="number">32</span>: pre_set = M2;</span><br><span class="line">				<span class="number">33</span>: pre_set = M5;</span><br><span class="line">				<span class="number">34</span>: pre_set = M1;</span><br><span class="line">				<span class="number">35</span>: pre_set = M0;</span><br><span class="line">			<span class="keyword">endcase</span></span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">assign</span> pre_div = pre_set &gt;&gt; <span class="number">1</span>;	<span class="comment">//除以2</span></span><br><span class="line">	<span class="keyword">assign</span> cishu_div = cishu * <span class="number">4</span> / <span class="number">5</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//向蜂鸣器输出脉冲</span></span><br><span class="line">	<span class="keyword">always</span> @(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line">		<span class="keyword">if</span>(!rst_n) <span class="keyword">begin</span></span><br><span class="line">			buzzer &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(pre_set != M0) <span class="keyword">begin</span></span><br><span class="line">			<span class="keyword">if</span>(cnt1 &lt; cishu_div) <span class="keyword">begin</span></span><br><span class="line">				<span class="keyword">if</span>(cnt0 &lt; pre_div) <span class="keyword">begin</span></span><br><span class="line">						buzzer &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">				<span class="keyword">end</span></span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">						buzzer &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">				<span class="keyword">end</span></span><br><span class="line">			<span class="keyword">end</span></span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">				buzzer &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">			<span class="keyword">end</span></span><br><span class="line">		<span class="keyword">end</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			buzzer &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">	</span><br><span class="line"><span class="keyword">endmodule</span></span><br><span class="line">	</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>课内知识</tag>
        <tag>verilog</tag>
      </tags>
  </entry>
  <entry>
    <title>【硬件知识】选型</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91%E9%80%89%E5%9E%8B/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="稳压电源"><a href="#稳压电源" class="headerlink" title="稳压电源"></a>稳压电源</h2><h3 id="LDO"><a href="#LDO" class="headerlink" title="LDO"></a>LDO</h3><script type="math/tex; mode=display">
\operatorname{PSRR}=20 \times \log \left(\frac{\text { VOUT_Noise }_{-}}{\text {VIN_Noise }_{-}}\right)</script><ul>
<li>确定输出电压VOUT，建议选择固定输出电压的，不要选有ADJ功能的，这样节省器件，降低干扰。</li>
<li>确定输出电流IOUT，至少留25%余量。</li>
<li>确定压差是否合适，一定要查看规格书上，对应最大电流的最小压差要求。</li>
<li>确认封装，手机上一般用1x1 CSP的LDO</li>
<li>确认PSRR，如果用在低噪声场合，一定要选择高PSRR（80dB以上）的LDO，建议在80dB以上。</li>
<li>如果是电池供电，对续航要求很高，一定要选择IQ低的LDO。</li>
<li>注意LDO的CIN和COUT要求，千万不要错。</li>
<li><p>如果要快速响应，可以选择带偏置电压的LDO。</p>
<p>常见的LDO品牌：TOSHIBA，NXP，ON，ADI，RICON，SGMICRO，ST，TI，WILLSEMI。 </p>
</li>
</ul>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91%E9%80%89%E5%9E%8B/1665935986042.png" alt="1665935986042"></p>
<h3 id="DCDC"><a href="#DCDC" class="headerlink" title="DCDC"></a>DCDC</h3><p>…</p>
<h2 id="mos"><a href="#mos" class="headerlink" title="mos"></a>mos</h2><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>嵌入式</tag>
        <tag>硬件</tag>
        <tag>选型</tag>
      </tags>
  </entry>
  <entry>
    <title>【硬件知识】H桥驱动</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91H%E6%A1%A5%E9%A9%B1%E5%8A%A8/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>​           <img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91H%E6%A1%A5%E9%A9%B1%E5%8A%A8/clip_image002.jpg" alt="img">  </p>
<p>​         要使电机运转，必须使对角线上的一对三极管导通。当Q1管和Q4管导通时，电流就从电源正极经Q1从左至右穿过电机，然后再经Q4回到电源负极。该流向的电流将驱动电机顺时针转动。 当Q2管和Q3管导通时，电流就从电源正极经Q3从左至右穿过电机，然后再经Q2回到电源负极。该流向的电流将驱动电机顺时针转动。  </p>
<h3 id="栅极驱动驱动芯片——ir2104"><a href="#栅极驱动驱动芯片——ir2104" class="headerlink" title="栅极驱动驱动芯片——ir2104"></a>栅极驱动驱动芯片——ir2104</h3><p>​         <img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91H%E6%A1%A5%E9%A9%B1%E5%8A%A8/clip_image002.png" alt="img">  </p>
<p>自举二极管D使用与功率开关管相同耐压等级的肖特基二极管 </p>
<p>自举电容的计算</p>
<p>​         <img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91H%E6%A1%A5%E9%A9%B1%E5%8A%A8/clip_image002-1665804664642.png" alt="img">  </p>
<p>其中<img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91H%E6%A1%A5%E9%A9%B1%E5%8A%A8/clip_image002-1665804668891.png" alt="img">为MOSFET的门极电荷</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>嵌入式</tag>
        <tag>H桥</tag>
        <tag>硬件</tag>
      </tags>
  </entry>
  <entry>
    <title>【硬件知识】vco压控振荡器</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">vco：用电压控制输出正弦波频率</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="反馈振荡器的分类"><a href="#反馈振荡器的分类" class="headerlink" title="反馈振荡器的分类"></a>反馈振荡器的分类</h2><ol>
<li><p>电容三端式</p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/1665803600516.png" alt="1665803600516"></p>
</li>
<li><p>电感三端式</p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/1665803617793.png" alt="1665803617793"></p>
</li>
<li><p>改进型电容三点式振荡器—-克拉泼Clapp振荡器</p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/1665803634716.png" alt="1665803634716"></p>
<p>优点：提高了稳定度</p>
<p>缺点：高端不易起振在波段内输出幅度不均匀</p>
</li>
<li><p>改进型电容三点式振荡器——-西勒Seiler振荡器</p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/1665803667431.png" alt="1665803667431"></p>
<p>从频率稳定的角度来看，西勒振荡器稳定性更好</p>
<p>从控制频率的范围来看，西勒振荡器的振荡频率更高</p>
</li>
</ol>
<h2 id="设计原理"><a href="#设计原理" class="headerlink" title="设计原理"></a>设计原理</h2><h3 id="反馈振荡器设计原理"><a href="#反馈振荡器设计原理" class="headerlink" title="反馈振荡器设计原理"></a>反馈振荡器设计原理</h3><ol>
<li><p>在谐振频率上，必有<img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image002.gif" alt="img">+<img src="file:///C:/Users/DELL/AppData/Local/Temp/msohtmlclip1/01/clip_image004.gif" alt="img">+<img src="file:///C:/Users/DELL/AppData/Local/Temp/msohtmlclip1/01/clip_image006.gif" alt="img">=0</p>
</li>
<li><p>发射极上连接的两个电抗<img src="file:///C:/Users/DELL/AppData/Local/Temp/msohtmlclip1/01/clip_image008.gif" alt="img">为同性质电抗，另一个<img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image006.gif" alt="img">为异性质电抗。</p>
</li>
</ol>
<h3 id="西勒振荡器"><a href="#西勒振荡器" class="headerlink" title="西勒振荡器"></a>西勒振荡器</h3><p>C3改变成固定的小电容，L上并联可变电容</p>
<p>使得<img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image002-1665803844893.gif" alt="img"></p>
<p>振荡频率：   <img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image004-1665803844893.gif" alt="img"></p>
<p>起振条件：   <img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image006-1665803844893.gif" alt="img"></p>
<p>1、参数确定</p>
<p>从稳定度的角度来看，<img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image002-1665803856973.gif" alt="img">越小越好。即<img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image002-1665803856973.gif" alt="img">越小，由<img src="file:///C:/Users/DELL/AppData/Local/Temp/msohtmlclip1/01/clip_image004.gif" alt="img">决定的频率调节范围就越宽。</p>
<p>但是为了保证起振，<img src="file:///C:/Users/DELL/AppData/Local/Temp/msohtmlclip1/01/clip_image002.gif" alt="img">也不能过小。</p>
<p>确定了基本原则之后就可以依次确定原件的参数了。</p>
<p>1）振荡器中的电感选择常用的390nH型</p>
<p>2）据此计算<img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image006-1665803856973.gif" alt="img">     <img src="file:///C:/Users/DELL/AppData/Local/Temp/msohtmlclip1/01/clip_image008.gif" alt="img">可得<img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image006-1665803856973.gif" alt="img">  在158~720p之间</p>
<p>3）根据<img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image010.gif" alt="img">计算<img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image002-1665803856973.gif" alt="img">，最终选取<img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image002-1665803856973.gif" alt="img">=100p</p>
<p>4）因此可变电容应取值应包含58~620p。</p>
<p>2、元件选择</p>
<p>1）变容二极管选择1SV149二极管</p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/1665803862765.png" alt="1665803862765"></p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/1665803865723.png" alt="1665803865723"></p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/1665803883747.png" alt="1665803883747"></p>
<p>可以满足在1~8V电压下，电容30~435p，可以满足需求。</p>
<p>​        三极管选用9018  </p>
<h2 id="电路设计"><a href="#电路设计" class="headerlink" title="电路设计"></a>电路设计</h2><h2 id="一、电路设计"><a href="#一、电路设计" class="headerlink" title="一、电路设计"></a>一、电路设计</h2><p>1、电源部分</p>
<p><img src="file:///C:/Users/DELL/AppData/Local/Temp/msohtmlclip1/01/clip_image001.gif" alt="文本框: 电源部分采用9V供电，并用采用4.7kΩ电阻和50kΩ电位器和4.7kΩ电阻串联，可以使得输入电压控制在接近1~9V的范围内。"><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image003.gif" alt="文本框:  "><img src="file:///C:/Users/DELL/AppData/Local/Temp/msohtmlclip1/01/clip_image005.jpg" alt="img">  </p>
<p>2、振荡部分</p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image006-1665803982819.gif" alt="文本框: 通过输入电压，控制变容二极管的电容，进而改变振荡器的振荡频率。"><img src="file:///C:/Users/DELL/AppData/Local/Temp/msohtmlclip1/01/clip_image008.jpg" alt="img"></p>
<p>3、射极跟随器</p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image009.gif" alt="文本框: 由三极管放大电路构成的设计跟随器，减小了负载振荡器的影响。"><img src="file:///C:/Users/DELL/AppData/Local/Temp/msohtmlclip1/01/clip_image011.jpg" alt="img"></p>
<p>4、高频放大器</p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image013.jpg" alt="img"></p>
<h2 id="二、完整电路图及PCB设计"><a href="#二、完整电路图及PCB设计" class="headerlink" title="二、完整电路图及PCB设计"></a>二、完整电路图及PCB设计</h2><p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image015.jpg" alt="img"></p>
<p><img src="/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91vco%E5%8E%8B%E6%8E%A7%E6%8C%AF%E8%8D%A1%E5%99%A8/clip_image017.jpg" alt="img"></p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>嵌入式</tag>
        <tag>硬件</tag>
        <tag>vco</tag>
        <tag>压控振荡器</tag>
      </tags>
  </entry>
  <entry>
    <title>【硬件知识】芯片熟悉</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E7%A1%AC%E4%BB%B6/%E3%80%90%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86%E3%80%91%E8%8A%AF%E7%89%87%E7%86%9F%E6%82%89/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>  IRFB3207：IRF开头的多数都是mos，如 IRFZ44NPbF 、 IRFB4321PbF 、 IRF3205PbF ，当然像irf2104是栅极驱动芯片</p>
<p> MBR20100CT ：mos管形状的肖特基二极管</p>
<p>l7805、6、9，l79xx：79输出负电压</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>嵌入式</tag>
        <tag>硬件</tag>
        <tag>芯片</tag>
      </tags>
  </entry>
  <entry>
    <title>【经验积累】网址整理</title>
    <url>/2022/library/%E7%BB%8F%E9%AA%8C%E7%A7%AF%E7%B4%AF/%E3%80%90%E7%BB%8F%E9%AA%8C%E7%A7%AF%E7%B4%AF%E3%80%91%E7%BD%91%E5%9D%80%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="论文"><a href="#论文" class="headerlink" title="论文"></a>论文</h2><ol>
<li><a href="https://sci-hub.se/">Sci-Hub: 将知识带给每个人</a> 直接下载，搜得很全</li>
</ol>
<h2 id="电影美剧下载"><a href="#电影美剧下载" class="headerlink" title="电影美剧下载"></a>电影美剧下载</h2><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>经验积累</tag>
        <tag>网址整理</tag>
      </tags>
  </entry>
  <entry>
    <title>【经验积累】论文搜集</title>
    <url>/2022/library/%E7%BB%8F%E9%AA%8C%E7%A7%AF%E7%B4%AF/%E3%80%90%E7%BB%8F%E9%AA%8C%E7%A7%AF%E7%B4%AF%E3%80%91%E8%AE%BA%E6%96%87%E6%90%9C%E9%9B%86/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="已整理"><a href="#已整理" class="headerlink" title="已整理"></a>已整理</h2><ol>
<li><a href="https://sci-hub.se/">Sci-Hub: 将知识带给每个人</a> 真滴好，免费能下载</li>
<li></li>
</ol>
<h2 id="待整理"><a href="#待整理" class="headerlink" title="待整理"></a>待整理</h2><p><strong>如何收集论文</strong></p>
<ol>
<li>学会翻墙，善用搜索引擎</li>
</ol>
<ul>
<li>google scholar: 全部论文都可以看到，但不一定能下载</li>
<li>Arxiv+高级搜索</li>
<li>Github</li>
</ul>
<ol>
<li>以老师及其团队为目标搜索</li>
</ol>
<ul>
<li>通过google scholar或者通过百度上找到他的主页</li>
</ul>
<ol>
<li>知乎和微信的各大公众号</li>
</ol>
<p>如我爱计算机视觉等等，可以看以前发群里的链接都是来自于哪个平台或者学术机构发的</p>
<ol>
<li>会议图书馆</li>
</ol>
<p>IJCAI: <a href="https://ijcai-22.org/main-track-accepted-papers">https://ijcai-22.org/main-track-accepted-papers</a></p>
<p>AAAI:<a href="https://www.aaai.org/Library/library.php">https://www.aaai.org/Library/library.php</a></p>
<p>CVPR/ICCV/ECCV: <a href="https://openaccess.thecvf.com/menu">https://openaccess.thecvf.com/menu</a></p>
<p>IEEE: <a href="https://ieeexplore.ieee.org/Xplore/home.jsp">https://ieeexplore.ieee.org/Xplore/home.jsp</a></p>
<p>ACM: <a href="https://dl.acm.org/">https://dl.acm.org/</a></p>
<p>SIAM: <a href="https://epubs.siam.org/">https://epubs.siam.org/</a></p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>论文搜集</tag>
        <tag>经验积累</tag>
      </tags>
  </entry>
  <entry>
    <title>【深度学习基础知识】×NN都有些啥</title>
    <url>/2022/library/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E3%80%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%9A%C3%97NN%E9%83%BD%E6%9C%89%E4%BA%9B%E5%95%A5/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<div class="table-container">
<table>
<thead>
<tr>
<th>名称</th>
<th>结构</th>
<th>应用</th>
<th>我的理解</th>
</tr>
</thead>
<tbody>
<tr>
<td>DNN</td>
<td>多层MLP全连接层，输入层，隐藏层和输出层</td>
<td>所有</td>
<td>最基础的那个</td>
</tr>
<tr>
<td>CNN</td>
<td>卷积核卷积</td>
<td>图像处理</td>
<td>匹配特征，突出重点</td>
</tr>
<tr>
<td>RNN</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>SNN</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>GNN</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>pycharm内无法打开cmd</title>
    <url>/2022/solved/pycharm%E5%86%85%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80cmd/</url>
    <content><![CDATA[<p>setting -&gt; tools -&gt; terminal -&gt; shellpath从powershell改成cmd</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>pycharm</tag>
      </tags>
  </entry>
  <entry>
    <title>能力年表</title>
    <url>/2022/others/%E8%83%BD%E5%8A%9B%E5%B9%B4%E8%A1%A8/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">用纪年法总结记录大学期间学会了什么，干了什么</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="大一上"><a href="#大一上" class="headerlink" title="大一上"></a>大一上</h2><p>年夜饭游戏设计</p>
<p>机械加工制图</p>
<h2 id="大一下"><a href="#大一下" class="headerlink" title="大一下"></a>大一下</h2><ol>
<li>typora</li>
<li>git</li>
<li>pil、cv2</li>
<li>dqn嵌入式AI</li>
<li>虚拟机</li>
<li>烟雾识别的——yolo模型训练、tf和torch的模型转换</li>
<li>pytq</li>
<li>serial读取串口</li>
<li>TextureNet</li>
<li>一些创意</li>
<li>人体姿态识别</li>
<li>树莓派的图传等入门</li>
<li>最小系统板</li>
<li>PCB拼图</li>
<li>hexo博客</li>
</ol>
<h2 id="大二上"><a href="#大二上" class="headerlink" title="大二上"></a>大二上</h2><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>like</tag>
      </tags>
  </entry>
  <entry>
    <title>name</title>
    <url>/2022/others/%E5%8F%A4%E8%AF%97/%E5%8F%A4%E8%AF%97/</url>
    <content><![CDATA[<p>总有些古诗触动我，又总会被遗忘， 这里留作纪念。</p>
<h2 id="小松"><a href="#小松" class="headerlink" title="小松"></a>小松</h2><p>杜荀鹤</p>
<blockquote>
<p>自小刺头深草里，而今渐觉出蓬蒿。<br>时人不识凌云木，直待凌云始道高。</p>
</blockquote>
<h2 id="绝句"><a href="#绝句" class="headerlink" title="绝句"></a>绝句</h2><p>志南</p>
<blockquote>
<p>古木阴中系短篷，杖藜扶我过桥东。</p>
<p>沾衣欲湿杏花雨，吹面不寒杨柳风。</p>
</blockquote>
<h2 id="滕王阁序"><a href="#滕王阁序" class="headerlink" title="滕王阁序"></a>滕王阁序</h2><p>王勃</p>
<blockquote>
<p>豫章故郡，洪都新府。星分翼轸，地接衡庐。襟三江而带五湖，控蛮荆而引瓯越。物华天宝，龙光射牛斗之墟；人杰地灵，徐孺下陈蕃之榻。雄州雾列，俊采星驰。台隍枕夷夏之交，宾主尽东南之美。都督阎公之雅望，棨戟遥临；宇文新州之懿范，襜帷暂驻。十旬休假，胜友如云；千里逢迎，高朋满座。腾蛟起凤，孟学士之词宗；紫电青霜，王将军之武库。家君作宰，路出名区；童子何知，躬逢胜饯。(豫章故郡 一作：南昌故郡；青霜 一作：清霜)</p>
<p>　　时维九月，序属三秋。潦水尽而寒潭清，烟光凝而暮山紫。俨骖騑于上路，访风景于崇阿。临帝子之长洲，得天人之旧馆。层峦耸翠，上出重霄；飞阁流丹，下临无地。鹤汀凫渚，穷岛屿之萦回；桂殿兰宫，即冈峦之体势。（天人 一作：仙人；层峦 一作：层台；即冈 一作：列冈；飞阁流丹 一作：飞阁翔丹）</p>
<p>　　披绣闼，俯雕甍，山原旷其盈视，川泽纡其骇瞩。闾阎扑地，钟鸣鼎食之家；舸舰弥津，青雀黄龙之舳。云销雨霁，彩彻区明。落霞与孤鹜齐飞，秋水共长天一色。渔舟唱晚，响穷彭蠡之滨，雁阵惊寒，声断衡阳之浦。(轴 通：舳；迷津 一作：弥津；云销雨霁，彩彻区明 一作：虹销雨霁，彩彻云衢)</p>
<p>　　遥襟甫畅，逸兴遄飞。爽籁发而清风生，纤歌凝而白云遏。睢园绿竹，气凌彭泽之樽；邺水朱华，光照临川之笔。四美具，二难并。穷睇眄于中天，极娱游于暇日。天高地迥，觉宇宙之无穷；兴尽悲来，识盈虚之有数。望长安于日下，目吴会于云间。地势极而南溟深，天柱高而北辰远。关山难越，谁悲失路之人；萍水相逢，尽是他乡之客。怀帝阍而不见，奉宣室以何年？(遥襟甫畅 一作：遥吟俯畅)</p>
<p>　　嗟乎！时运不齐，命途多舛。冯唐易老，李广难封。屈贾谊于长沙，非无圣主；窜梁鸿于海曲，岂乏明时？所赖君子见机，达人知命。老当益壮，宁移白首之心？穷且益坚，不坠青云之志。酌贪泉而觉爽，处涸辙以犹欢。北海虽赊，扶摇可接；东隅已逝，桑榆非晚。孟尝高洁，空余报国之情；阮籍猖狂，岂效穷途之哭！(见机 一作：安贫；以犹欢 一作：而相欢)</p>
<p>　　勃，三尺微命，一介书生。无路请缨，等终军之弱冠；有怀投笔，慕宗悫之长风。舍簪笏于百龄，奉晨昏于万里。非谢家之宝树，接孟氏之芳邻。他日趋庭，叨陪鲤对；今兹捧袂，喜托龙门。杨意不逢，抚凌云而自惜；钟期既遇，奏流水以何惭？</p>
<p>　　呜呼！胜地不常，盛筵难再；兰亭已矣，梓泽丘墟。临别赠言，幸承恩于伟饯；登高作赋，是所望于群公。敢竭鄙怀，恭疏短引；一言均赋，四韵俱成。请洒潘江，各倾陆海云尔。<br>　　滕王高阁临江渚，佩玉鸣鸾罢歌舞。<br>　　画栋朝飞南浦云，珠帘暮卷西山雨。<br>　　闲云潭影日悠悠，物换星移几度秋。<br>　　阁中帝子今何在？槛外长江空自流。</p>
</blockquote>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>nerf</tag>
        <tag>work</tag>
      </tags>
  </entry>
  <entry>
    <title>【nerf】nerf-pytorch</title>
    <url>/2022/work/nerf/%E3%80%90nerf%E3%80%91nerf-pytorch/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">最初的nerf，论文以及代码解读</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="假设前提"><a href="#假设前提" class="headerlink" title="假设前提"></a>假设前提</h2><ul>
<li><p>体素在不同方向的自发光颜色是不一样的</p>
<p><a href="https://blog.csdn.net/qq_41071191/article/details/126659233?spm=1001.2014.3001.5502">NeRF 源码分析解读（五）_面里多加汤的博客-CSDN博客_nerf代码</a> </p>
</li>
</ul>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>nerf</tag>
        <tag>work</tag>
      </tags>
  </entry>
  <entry>
    <title>【pip】【conda】常用指令</title>
    <url>/2022/library/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/%E3%80%90pip%E3%80%91%E3%80%90conda%E3%80%91%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p>  pip</p>
<ol>
<li>咱这个不知道为啥新建虚拟环境后pip版本都过低，需要先python -m pip install —upgrade pip</li>
<li>安装指定版本：pip install xxx==1.15</li>
<li>源<a href="https://pypi.doubanio.com/simple/，https://pypi.mirrors.ustc.edu.cn/simple/，https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.doubanio.com/simple/，https://pypi.mirrors.ustc.edu.cn/simple/，https://pypi.tuna.tsinghua.edu.cn/simple</a></li>
<li>安装torch<code>pip install torch==1.9.0+cu111 torchvision==0.10.0+cu111 torchaudio===0.9.0 -f https://download.pytorch.org/whl/torch_stable.html</code></li>
<li>pip install -r requirements.txt</li>
<li><a href="https://www.csdn.net/tags/MtjaYg4sMTEwNTItYmxvZwO0O0OO0O0O.html#:~:text=pytorch和cuda 并不是一一对应的 关系 ，一个 pytorch 版本可以有多个 cuda 版本与之对应。,，既可以使用9.2版本的 cuda ，也可以使用10.2版本的 cuda 。 事实上，你在安装 pytorch 时无需考虑自己需要安装">(103条消息) cuda和pytorch的关系 - CSDN</a> </li>
<li><a href="https://blog.csdn.net/dream__1/article/details/122433061">(103条消息) torch_scatter安装_dream__1的博客-CSDN博客_torch_scatter</a> </li>
</ol>
<h2 id="conda"><a href="#conda" class="headerlink" title="conda"></a>conda</h2><p><a href="https://blog.csdn.net/chenxy_bwave/article/details/119996001">(92条消息) Anaconda conda常用命令：从入门到精通_笨牛慢耕的博客-CSDN博客_anaconda conda命令怎么用</a> </p>
<ul>
<li><p>删除虚拟环境</p>
<p>conda remove —name env_name —all </p>
</li>
<li><p>查看虚拟环境列表</p>
<p>conda info —envs</p>
</li>
</ul>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>快捷键和常用指令</tag>
        <tag>pip</tag>
        <tag>conda</tag>
      </tags>
  </entry>
  <entry>
    <title>【win】快捷键</title>
    <url>/2022/library/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/%E3%80%90win%E3%80%91%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<div class="note danger">
            <div align="center">多用多记</div>
          </div>
<h2 id="打字"><a href="#打字" class="headerlink" title="打字"></a>打字</h2><ul>
<li>切换中英文标点：<code>ctrl + .</code></li>
</ul>
<h2 id="桌面管理"><a href="#桌面管理" class="headerlink" title="桌面管理"></a>桌面管理</h2><ul>
<li>新建窗口：<code>ctrl+win+D</code></li>
<li>切换窗口：<code>ctrl+win+方向键</code></li>
<li>关闭窗口：<code>ctrl+win+f4</code></li>
<li><strong>可视化管理</strong>：<code>win+tab</code></li>
</ul>
<h2 id="窗口管理"><a href="#窗口管理" class="headerlink" title="窗口管理"></a>窗口管理</h2><ul>
<li>控制窗口：<code>win + 方向键</code></li>
<li>浏览器内切换：<code>ctrl + alt</code></li>
<li>关闭当前应用：<code>alt + f4</code></li>
</ul>
<h2 id="录屏"><a href="#录屏" class="headerlink" title="录屏"></a>录屏</h2><ul>
<li>xbox功能贼多：<code>win + G</code></li>
</ul>
<h2 id="系统辅助"><a href="#系统辅助" class="headerlink" title="系统辅助"></a>系统辅助</h2><ul>
<li>打开设置：<code>win + I</code></li>
<li>打开任务栏应用：<code>win + 数字</code></li>
<li>放大镜：<code>win + (+ =)</code></li>
</ul>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h4 id="everything"><a href="#everything" class="headerlink" title="everything"></a>everything</h4><p>我自己设置的</p>
<ul>
<li>打开（若没有就新建）一个搜索窗口：<code>alt + s</code></li>
<li>关闭：<code>alt + a</code></li>
</ul>
<p>语法和技巧</p>
<p> <a href="https://link.zhihu.com/?target=https%3A//www.voidtools.com/zh-cn/support/everything/searching/">官方中文帮助文档</a> </p>
<ol>
<li>限制关键词出现顺序：<code>*stm*data*</code>（无空格）</li>
<li>左下角有找到的文件数</li>
<li>或：<code>|</code>（无空格）；非：<code>!</code></li>
<li><code>?</code> 占位，表示一个字符；<code>*</code> 占位，表示一个字符串</li>
</ol>
<h2 id="不常用"><a href="#不常用" class="headerlink" title="不常用"></a>不常用</h2><p>同时按fn和esc可以打开键盘音量、亮度等功能</p>
<h2 id="熟知的"><a href="#熟知的" class="headerlink" title="熟知的"></a>熟知的</h2><ul>
<li>切换窗口：<code>alt + tab</code></li>
<li>返回桌面：<code>win + D</code></li>
<li>锁屏：<code>win + L</code></li>
</ul>
<h4 id="2022-12-6"><a href="#2022-12-6" class="headerlink" title="2022.12.6"></a>2022.12.6</h4><ul>
<li><code>win + v</code>打开剪切板</li>
<li><code>win + shift + s</code>截屏</li>
</ul>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>快捷键和常用指令</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>【cmd】常用指令</title>
    <url>/2022/library/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/%E3%80%90cmd%E3%80%91%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p>   <code>nvidia-smi</code> 查看显卡使用情况</p>
<ul>
<li><h2 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h2></li>
<li><p>cd到别的盘用cd /d D…..</p>
</li>
<li>cd .. 返回上一级</li>
<li>cd \ 返回到根目录</li>
<li>linux cd到windows的盘用<code>cd /mnt/d ...</code>（指windows的linuxi子系统中）<ol>
<li>cd之后接一个空格，其余没有</li>
<li>路径用右斜杠，与windows不同！</li>
</ol>
</li>
</ul>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>
]]></content>
      <tags>
        <tag>library</tag>
        <tag>cmd</tag>
        <tag>快捷键和常用指令</tag>
      </tags>
  </entry>
  <entry>
    <title>【pycharm】快捷键</title>
    <url>/2022/library/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%92%8C%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/%E3%80%90pycharm%E3%80%91%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">多用多记</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<ul>
<li><code>ctrl Q</code> 查看提示</li>
<li><code>ctrl shift A</code> 全project查找</li>
<li><code>alt+⬆</code>向上切换函数</li>
<li>收放代码块</li>
<li>展开ctrl + shift + +<ul>
<li>收起ctrl + shift + -</li>
<li>折叠某一点：ctrl + -</li>
<li>展开某一层：ctrl + +</li>
</ul>
</li>
</ul>
<h2 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h2><p>我自己设置的</p>
<ul>
<li>run：<code>alt + shift + Q</code></li>
<li>debug：<code>ctrl + shift + Q</code></li>
</ul>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>pycharm</tag>
        <tag>library</tag>
        <tag>快捷键和常用指令</tag>
      </tags>
  </entry>
  <entry>
    <title>【typora】学习</title>
    <url>/2022/library/frontend/%E3%80%90typora%E3%80%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note warning">
            <div align="center">typora做笔记</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><h2 id="进阶表达"><a href="#进阶表达" class="headerlink" title="进阶表达"></a>进阶表达</h2><h3 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h3><p> $\alpha$  <code>$\alpha$</code></p>
<p> <img src="/2022/library/frontend/%E3%80%90typora%E3%80%91%E5%AD%A6%E4%B9%A0/v2-e006224a3066540d792b5ecb950aab50_1440w.jpg" alt="img" style="zoom:33%;"> </p>
<h3 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h3><p> 输入 <code>```mermaid</code> 然后敲击回车 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TD </span><br><span class="line">%% RL LR</span><br><span class="line">a[qwer] --&gt; b</span><br><span class="line">b&#123;asdf&#125;</span><br><span class="line">a --说明--&gt; c(zxcv)</span><br><span class="line">a .-&gt; b</span><br><span class="line">a --&gt; d</span><br><span class="line">b ==&gt; d((asdf))</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gantt</span><br><span class="line">        dateFormat  YYYY-MM-DD</span><br><span class="line">        title Adding GANTT diagram functionality to mermaid</span><br><span class="line"></span><br><span class="line">        section A section</span><br><span class="line">        Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">        Active task               :active,  des2, 2014-01-09, 3d</span><br><span class="line">        Future task               :         des3, after des2, 5d</span><br><span class="line">        Future task2               :         des4, after des3, 5d</span><br><span class="line"></span><br><span class="line">        section Critical tasks</span><br><span class="line">        Completed task in the critical line :crit, done, 2014-01-06,24h</span><br><span class="line">        Implement parser and jison          :crit, done, after des1, 2d</span><br><span class="line">        Create tests for parser             :crit, active, 3d</span><br><span class="line">        Future task in critical line        :crit, 5d</span><br><span class="line">        Create tests for renderer           :2d</span><br><span class="line">        Add to mermaid                      :1d</span><br><span class="line"></span><br><span class="line">        section Documentation</span><br><span class="line">        Describe gantt syntax               :active, a1, after des1, 3d</span><br><span class="line">        Add gantt diagram to demo page      :after a1  , 20h</span><br><span class="line">        Add another diagram to demo page    :doc1, after a1  , 48h</span><br><span class="line"></span><br><span class="line">        section Last section</span><br><span class="line">        Describe gantt syntax               :after doc1, 3d</span><br><span class="line">        Add gantt diagram to demo page      : 20h</span><br><span class="line">        Add another diagram to demo page    : 48h</span><br></pre></td></tr></table></figure>
<p>参考链接：</p>
<p><a href="https://zhuanlan.zhihu.com/p/355997933">Mermaid从入门到入土——Markdown进阶语法 - 知乎 (zhihu.com)</a> </p>
<h2 id="收起菜单"><a href="#收起菜单" class="headerlink" title="收起菜单"></a>收起菜单</h2><details>     <summary style="font-family:arial;color:#880000;font-size:20px;text-align:center;">每日时间安排</summary>  
    <ul style="font-family:arial;color:#CC99FF;font-size:20px;">
    <li>8：30 - 规划今天任务 - 9：00</li>
    <li>9：00 - 做瑜伽 - 9：30</li>
    <li>9：30 - 任务一 - 12：00</li>
    <li>2：30 - 任务二 - 17：00</li>
    <li>18：00 - 任务三 - 20：00</li>   
    <li>20：00 - 整理总结md - </li>
    </ul>
</details> 

<h3 id="快捷方式"><a href="#快捷方式" class="headerlink" title="快捷方式"></a>快捷方式</h3><ul>
<li><code>ctrl + shift + m</code>打开公式编辑</li>
<li><code>ctrl + t</code>插入表格</li>
<li><code>ctrl + b</code>将当前句子用双*包围 | <code>ctrl + i</code>单包围</li>
<li><code>ctrl + n</code>新建md文件</li>
<li><code>ctrl + p</code>查询最近的md文件并打开</li>
</ul>
<h3 id="上下标高亮"><a href="#上下标高亮" class="headerlink" title="上下标高亮"></a>上下标高亮</h3><p><em>在偏好设置中有</em></p>
<ul>
<li><p>下标：H~2~O：<code>H~2~O</code></p>
</li>
<li><p>上标：x^2^：<code>x^2^</code></p>
</li>
<li><p>高亮：==key==：<code>==key==</code></p>
</li>
</ul>
<h2 id="博客专用"><a href="#博客专用" class="headerlink" title="博客专用"></a>博客专用</h2><ul>
<li><p><code>&lt;!-- more --&gt;</code> 阅读全文按钮</p>
</li>
<li><p>编辑<code>tags:</code>和<code>top:</code>，保证文章便于查询</p>
</li>
<li><p><code>&lt;div align = center&gt;文本居中&lt;/div&gt;</code></p>
</li>
<li><blockquote>
<p>植物</p>
<blockquote>
<p>陆生植物</p>
</blockquote>
</blockquote>
</li>
<li><!-- 注释 -->
</li>
<li><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>标签引用</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>
</li>
<li><span class="label primary">标签</span>
</li>
</ul>
<p>  更多详见 <a href="https://eisenhao.cn/2018/08/31/write-a-md-file/">基于 Hexo 的 Markdown 博文语法简介 | EisenHao’s Note</a> </p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>inte</tag>
        <tag>library</tag>
        <tag>typora</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<hr>
<hr>
<div class="note success">
            <div align="center">文章概览</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<ul>
<li>电感：不降低效率的限流，储能元件</li>
<li>串联电阻：防止功率过大</li>
</ul>
<h2 id="分析步骤"><a href="#分析步骤" class="headerlink" title="分析步骤"></a>分析步骤</h2><ol>
<li>先把非线性元件拆分</li>
<li>假设和条件</li>
</ol>
<h2 id="稳定性分析"><a href="#稳定性分析" class="headerlink" title="稳定性分析"></a>稳定性分析</h2><ol>
<li>幅值？？</li>
<li>看输出电压——准不准，稳不稳</li>
<li>输入动态特性分析——输入电压突变</li>
<li>负载动态性分析——负载电阻突变（2V就算小了）</li>
<li>起动特性分析——1ms左右算很快了</li>
</ol>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ol>
<li>发热情况</li>
<li>效率</li>
</ol>
<h2 id="未整理"><a href="#未整理" class="headerlink" title="未整理"></a>未整理</h2><p> 在开关电源中，供电端的电源，经过一个开关管，在开关管导通期，把矩形波加在一次绕组上，使变压器的一次绕组流过锯齿波，变压器磁芯的磁通量也是按锯齿波增长，此时，在变压器的二次绕组将有矩形波输出，把此矩形波输出经整流二极管和滤波电路输出，这就是单端正激。<br>如果不是在开关管导通期输出能量，而是在开关管的导通期积存磁能，在开关管的截止期磁通量下降，在磁通量下降的过程中，变压器二次绕组感生的电压，经整流二管和滤波电路输出，就是单端反激。 </p>
<ul>
<li>加强读图能力，发现相同相似</li>
<li>1mm ~ 1A</li>
<li><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E7%90%86%E8%A7%A3/1663634083260.png" alt="1663634083260"></li>
</ul>
<p>纹波——开关电源噪声大！！</p>
<p>负载变化的影响？</p>
<p>开关产生毛刺？</p>
<p>lm298n和mp1584不能工作在2A以上？分别是什么？</p>
<p>有过热保护和短路保护？</p>
<h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">封装名称</th>
<th style="text-align:center">封装说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">DIP</td>
<td style="text-align:center"><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E7%90%86%E8%A7%A3/v2-25eaf4d61846a44e664b2cb37719b25d_1440w-1664938381110.webp" alt="v2-25eaf4d61846a44e664b2cb37719b25d_1440w" style="zoom: 50%;"></td>
</tr>
<tr>
<td style="text-align:center">PQFP</td>
<td style="text-align:center"><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E7%90%86%E8%A7%A3/v2-110d82014901eaf93c4b52ad83102b63_1440w-1664938417770.webp" alt="v2-110d82014901eaf93c4b52ad83102b63_1440w" style="zoom:33%;"></td>
</tr>
<tr>
<td style="text-align:center">QFN</td>
<td style="text-align:center"><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E7%90%86%E8%A7%A3/v2-7cbb0975e8c363942d48ce63e1a2065c_1440w-1664938438858.webp" alt="v2-7cbb0975e8c363942d48ce63e1a2065c_1440w" style="zoom:33%;"></td>
</tr>
<tr>
<td style="text-align:center">BGA</td>
<td style="text-align:center"><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E7%90%86%E8%A7%A3/v2-1f17136b669538ad7acdbafefa802cb4_1440w-1664938458935.webp" alt="v2-1f17136b669538ad7acdbafefa802cb4_1440w" style="zoom:33%;"></td>
</tr>
<tr>
<td style="text-align:center">PGA</td>
<td style="text-align:center"><img src="/2022/learning/%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/%E3%80%90%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90%E3%80%91%E7%90%86%E8%A7%A3/v2-58e2fbb38342042b7cd5641f94146c33_1440w.webp" alt="v2-58e2fbb38342042b7cd5641f94146c33_1440w" style="zoom:33%;"></td>
</tr>
</tbody>
</table>
</div>
<h2 id="mos管选型"><a href="#mos管选型" class="headerlink" title="mos管选型"></a>mos管选型</h2><ol>
<li>开启电压</li>
<li>开启电阻</li>
<li>寄生电容：有一段</li>
</ol>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
  </entry>
  <entry>
    <title>【深度学习工具】onnx学习</title>
    <url>/2022/library/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/%E5%B7%A5%E5%85%B7/%E3%80%90%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E5%B7%A5%E5%85%B7%E3%80%91onnx%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">onnx的pytorch模型部署方法</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="torch模型转onnx"><a href="#torch模型转onnx" class="headerlink" title="torch模型转onnx"></a>torch模型转onnx</h2><p>在<code>model.eval()</code>和<code>output = modle(input)</code>后面添加一句话：</p>
<p><code>torch.onnx.export(model, input, &#39;modelname.onnx&#39;)</code>即可导出</p>
<ul>
<li>onnx支持的算子，可以在 <a href="https://github.com/onnx/onnx/blob/main/docs/Operators.md">算子文档</a> 中查看</li>
<li>如果不支持报错，怎么查看具体是哪个算子不支持呢？我也不知道。</li>
<li><a href="https://zhuanlan.zhihu.com/p/513387413">在 PyTorch 中支持更多 ONNX 算子</a> </li>
</ul>
<h2 id="onnx模型的使用"><a href="#onnx模型的使用" class="headerlink" title="onnx模型的使用"></a>onnx模型的使用</h2><p>​    不知。。</p>
<p>​    有空看看部署在安卓设备的方法。（我们新生项目小组已经做好了，用的是maui+onnx ）</p>
<p> <a href="https://blog.csdn.net/qq_40507857/article/details/118755061">(105条消息) 在Android设备部署PyTorch模型_紫芝的博客-CSDN博客_android pytorch</a> </p>
<p> <a href="https://blog.csdn.net/y_dd6011/article/details/104751029">(105条消息) 将Pytorch模型部署到Android端_YDDUONG的博客-CSDN博客_pytorch模型部署到安卓</a> </p>
<h4 id="maui"><a href="#maui" class="headerlink" title="maui"></a>maui</h4><h4 id="electron"><a href="#electron" class="headerlink" title="electron"></a>electron</h4><h2 id="onnx模型的优点"><a href="#onnx模型的优点" class="headerlink" title="onnx模型的优点"></a>onnx模型的优点</h2><p>不知。。</p>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>深度学习</tag>
        <tag>onnx</tag>
        <tag>深度学习工具</tag>
      </tags>
  </entry>
  <entry>
    <title>【matlab】学习</title>
    <url>/2022/library/%E8%AF%BE%E5%86%85%E7%9F%A5%E8%AF%86/%E3%80%90matlab%E3%80%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note warning">
            <div align="center">matlab语句，随用随记</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<p> <a href="https://ww2.mathworks.cn/?s_tid=gn_logo">matlab官网</a> </p>
<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h4 id="cell"><a href="#cell" class="headerlink" title="cell"></a>cell</h4><ol>
<li><p>创建</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">% 有两种方式</span><br><span class="line">a=&#123;&#x27;winter&#x27;,123,&#x27;coming&#x27;,&#x27;哈哈&#x27;&#125;; </span><br><span class="line">a=cell(1,4);	a=&#123;&#x27;winter&#x27;,123,&#x27;coming&#x27;,&#x27;哈哈&#x27;&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>访问</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a&#123;1&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>相关函数</p>
<ol>
<li><code>cell2mat</code>：转化为数组，要求 cell 内变量数据类型相同</li>
<li><code>cellplot</code>：用彩图显示内容</li>
<li><code>cellfun</code>：<code>A = cellfun(func,C)</code> 将函数 <code>func</code> 应用于元胞数组 <code>C</code> 的每个元胞的内容</li>
</ol>
</li>
</ol>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h4 id="tf函数：创建传递函数"><a href="#tf函数：创建传递函数" class="headerlink" title="tf函数：创建传递函数"></a>tf函数：创建传递函数</h4><p>tf创建实值或复值传递函数模型，或转换动态系统模型传递函数形式。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>语法</th>
<th>用法</th>
</tr>
</thead>
<tbody>
<tr>
<td>sys = tf(numerator,denominator)</td>
<td>创建连续时间传递函数模型</td>
</tr>
<tr>
<td>sys = tf(numerator,denominator,ts)</td>
<td>创建离散时间传递函数模型</td>
</tr>
</tbody>
</table>
</div>
<p>例如$sys(s)=\frac1{2s^2+3s+4}$可以由下面的sys表示</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">numerator = <span class="number">1</span>;</span><br><span class="line">denominator = [<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line">sys = tf(numerator,denominator)</span><br></pre></td></tr></table></figure>
<p>绘制传递函数的波特图用<code>margin(sys);</code>一句话搞定</p>
<p>若想用该传递函数处理信号，可以用这个方法 <code>z变换 --&gt; 提取分子分母系数 --&gt; 数据类型转换 --&gt; 进行滤波</code></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">rc = tf(<span class="number">1</span>, [R*C,<span class="number">1</span>]);        <span class="comment">% 生成传递函数</span></span><br><span class="line"><span class="comment">% margin(rc);               % 显示传递函数波特图</span></span><br><span class="line">drc = c2d(rc, <span class="number">1</span>/Fs);        <span class="comment">% 进行z变换</span></span><br><span class="line">[a ,b] = tfdata(drc);       <span class="comment">% 得到分子分母系数</span></span><br><span class="line">a=cell2mat(a(<span class="number">1</span>,<span class="number">1</span>));         <span class="comment">% 数据类型转换</span></span><br><span class="line">b=cell2mat(b(<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line">x = filter(a, b, x);        <span class="comment">% 进行滤波</span></span><br></pre></td></tr></table></figure>
<h4 id="拟合"><a href="#拟合" class="headerlink" title="拟合"></a>拟合</h4><ol>
<li><code>p = polyfit(x, y, 2)</code>：输入两组数 x，y 拟合；2 表示用二次函数拟合；返回 p 是对应系数，如 p(1) 对应 x^2 的系数，p(2) 对应 x 的系数</li>
<li><code>yi = polyval(p,xi)</code>：输入拟合次方系数和输入数组，得到输出值</li>
</ol>
<h4 id="方程求解：solve-函数"><a href="#方程求解：solve-函数" class="headerlink" title="方程求解：solve 函数"></a>方程求解：solve 函数</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">syms i</span><br><span class="line">pi = 0.5*i^2 + 3*i + 1;</span><br><span class="line"></span><br><span class="line">s = solve(pi == 0.8602,i);</span><br></pre></td></tr></table></figure>
<p>得到方程的解</p>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><h4 id="stem绘制离散信号"><a href="#stem绘制离散信号" class="headerlink" title="stem绘制离散信号"></a>stem绘制离散信号</h4><p><code>stem(y)</code>or<code>stem(x,y)</code></p>
<h4 id="square绘制方波信号"><a href="#square绘制方波信号" class="headerlink" title="square绘制方波信号"></a>square绘制方波信号</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">T=0:0.01:8*pi;</span><br><span class="line">y=square(T);</span><br></pre></td></tr></table></figure>
<h4 id="调整画面"><a href="#调整画面" class="headerlink" title="调整画面"></a>调整画面</h4><ul>
<li>title(‘文字’,’position’,[5,1], ‘Fontsize’,16 ) </li>
</ul>
<h2 id="3D动画"><a href="#3D动画" class="headerlink" title="3D动画"></a>3D动画</h2><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">w = <span class="built_in">pi</span>;</span><br><span class="line">z=<span class="number">0</span>:<span class="number">0.01</span>:<span class="number">3</span>;</span><br><span class="line">pic_num=<span class="number">1</span>;                 </span><br><span class="line"><span class="keyword">for</span> t=<span class="number">0</span>:<span class="number">0.05</span>:<span class="number">5</span></span><br><span class="line">    Ex=<span class="built_in">sin</span>(<span class="number">2</span>*<span class="built_in">pi</span>*t-k*z)+<span class="number">2</span>;       <span class="comment">%螺旋线</span></span><br><span class="line">    Ey=<span class="built_in">cos</span>(<span class="number">2</span>*<span class="built_in">pi</span>*t-k*z)+<span class="number">2</span>; </span><br><span class="line">    Lx=Ex(<span class="number">1</span>):<span class="number">0.01</span>:<span class="number">4</span>;            <span class="comment">%直线辅助线</span></span><br><span class="line">    Ly=<span class="number">0</span>:<span class="number">0.01</span>:Ey(<span class="number">1</span>);</span><br><span class="line">  </span><br><span class="line">    <span class="built_in">plot3</span>(z,Ex,Ey, z,Ex,Ey*<span class="number">0</span>, z,Ex*<span class="number">0</span>+<span class="number">4</span>,Ey, Lx*<span class="number">0</span>,Lx,Lx*<span class="number">0</span>+Ey(<span class="number">1</span>), Ly*<span class="number">0</span>,Ly*<span class="number">0</span>+Ex(<span class="number">1</span>),Ly);         <span class="comment">%画3维图</span></span><br><span class="line">    <span class="built_in">hold</span> on</span><br><span class="line">    </span><br><span class="line">    quiver3(<span class="number">0</span>,<span class="number">2</span>,<span class="number">2</span>,z(<span class="number">1</span>),Ex(<span class="number">1</span>)<span class="number">-2</span>,Ey(<span class="number">1</span>)<span class="number">-2</span>);    <span class="comment">%矢量箭头</span></span><br><span class="line">    axis([<span class="number">-1</span> <span class="number">4</span> <span class="number">0</span> <span class="number">4</span> <span class="number">0</span> <span class="number">4</span>]);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">hold</span> off</span><br><span class="line">    F=getframe;            <span class="comment">%抓取当前图像</span></span><br><span class="line">    I=frame2im(F); </span><br><span class="line">    [I,map]=rgb2ind(I,<span class="number">256</span>);<span class="comment">%因gif不支持三维数据，所以应调用 rgb2ind，将rgb图像转为关联256种色彩的索引图像</span></span><br><span class="line">    <span class="keyword">if</span> t==<span class="number">0</span></span><br><span class="line">        imwrite(I,map,<span class="string">&#x27;复指数信号.gif&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>); <span class="comment">%创建一个.gif文件，将索引图像数组和其关联的颜色图写入</span></span><br><span class="line">    <span class="keyword">else</span>     </span><br><span class="line">        imwrite(I,map,<span class="string">&#x27;复指数信号.gif&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>,<span class="string">&#x27;WriteMode&#x27;</span>,<span class="string">&#x27;append&#x27;</span>,<span class="string">&#x27;DelayTime&#x27;</span>,<span class="number">0.01</span>);<span class="comment">%将多个图像并入第一个，帧间加入0.01s的延时</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    pic_num=pic_num+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<ul>
<li>绘制3D曲线：plot3函数<ul>
<li>可以依次写多组xyz，绘制多条曲线</li>
</ul>
</li>
<li><p>曲线的取0的维度，用正常维度的数组*0得到</p>
</li>
<li><p>保存gif语句</p>
</li>
</ul>
<p>完全参考： <a href="https://blog.csdn.net/qq_43208092/article/details/104080364">(105条消息) MATLAB：绘制三维偏振光动画_qq_43208092的博客-CSDN博客</a> </p>
<h2 id="音频处理"><a href="#音频处理" class="headerlink" title="音频处理"></a>音频处理</h2><ol>
<li><p>读取音频<strong>audioread</strong>，<strong>getaudiodata</strong></p>
<p><code>[y,Fs] = audioread(filename)</code></p>
<p><code>y = getaudiodata(recObj)</code></p>
</li>
<li><p>播放音频<strong>sound</strong>，<strong>getaudiodata</strong></p>
<p><code>sound(y,Fs)</code></p>
<p><code>play(recObj)</code></p>
</li>
<li><p>生成音频文件<strong>audiowrite</strong></p>
<p><code>audiowrite(filename,y,Fs)</code></p>
</li>
<li><p>录制音频<strong>audiorecorder</strong>，<strong>recordblocking</strong></p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">recObj = audiorecorder;		<span class="comment">% audiorecorder(Fs,16,1);</span></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;Start speaking.&#x27;</span>)		</span><br><span class="line">recordblocking(recObj, <span class="number">3</span>);	<span class="comment">%录制 3s 的数据</span></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;End of Recording.&#x27;</span>);</span><br></pre></td></tr></table></figure>
</li>
</ol>
<blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>多想多做，发篇一作</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>]]></content>
      <tags>
        <tag>library</tag>
        <tag>课内知识</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>【git】学习</title>
    <url>/2022/library/%E5%B5%8C%E5%85%A5%E5%BC%8F/%E3%80%90git%E3%80%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note success">
            <div align="center">git常用语法</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a>常用语句</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 原封不动复制下来</span><br><span class="line">git clone https://github.com/zennnnnnnnnnnn/dqn.git</span><br><span class="line"></span><br><span class="line"># 新建</span><br><span class="line">git init</span><br><span class="line">git add .					# 有新文件需要add</span><br><span class="line">git commit -m &quot;上传说明&quot;	# 只有内容改动可以直接git commit -a</span><br><span class="line">git remote add origin https://github.com/zennnnnnnnnnnn/dqn.git</span><br><span class="line">git push -u origin main	# 首次上传需要-u origin [branch]，以后直接push</span><br><span class="line"></span><br><span class="line"># 中途参与: init -&gt; remote -&gt; git pull origin main</span><br><span class="line"># 强制覆盖：git push -f origin master</span><br><span class="line"></span><br><span class="line"># 其他</span><br><span class="line">git status	# 查看提交状态</span><br><span class="line">git rm	# 删除文件</span><br></pre></td></tr></table></figure>
<h2 id="高级语句"><a href="#高级语句" class="headerlink" title="高级语句"></a>高级语句</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 1. 查看历史版本 </span><br><span class="line"></span><br><span class="line">git log --oneline	# 简洁版本</span><br><span class="line">git reflog		# 查看包括撤回、删除在内的操作以及版本</span><br><span class="line">git reset --hard [HEAD]		# 回滚到指定版本</span><br></pre></td></tr></table></figure>
<ol>
<li>gitignore</li>
</ol>
<p>创建一个.gitignore文件，按照<a href="https://blog.csdn.net/ThinkWon/article/details/101447866写入不需要上传的文件。">https://blog.csdn.net/ThinkWon/article/details/101447866写入不需要上传的文件。</a></p>
<ol>
<li>分支</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git branch [name]	# 创建分支</span><br><span class="line">git checkout [name]	# 切换分支</span><br><span class="line"></span><br><span class="line">git branch			# 查看所有分支</span><br><span class="line"></span><br><span class="line">git checkout -b [name]	# 创建并切换到分支</span><br><span class="line">git branch -d [name]	# 删除分支</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 把目录添加到信任列表</span><br><span class="line">git config --global --add safe.directory /media/data/users/jhu3szh/serialize</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>library</tag>
        <tag>理工方向</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>【hexo】学习</title>
    <url>/2022/library/frontend/%E3%80%90hexo%E3%80%91%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<div class="note primary">
            <div align="center">hexo补给站，内涵大量链接，萌新还是大佬统统进来看！</div>
          </div>
<!-- ,default,primary,success,info,warning,danger -->
<span id="more"></span>
<h2 id="hexo日常使用"><a href="#hexo日常使用" class="headerlink" title="hexo日常使用"></a>hexo日常使用</h2><ul>
<li><p>新建文章<code>hexo new articlename</code></p>
</li>
<li><p>编辑文章</p>
<ul>
<li><p><code>&lt;!-- more --&gt;</code> 阅读全文按钮</p>
</li>
<li><p>编辑<code>tags:</code>和<code>top:</code>，保证文章便于查询</p>
</li>
<li><p><code>&lt;div align = center&gt;文本居中&lt;/div&gt;</code></p>
</li>
<li><blockquote>
<p>植物</p>
<blockquote>
<p>陆生植物</p>
</blockquote>
</blockquote>
</li>
<li><!-- 注释 -->
</li>
<li><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>标签引用</p>

            <i class="fa fa-quote-right"></i>
          </blockquote>
</li>
<li><span class="label primary">标签</span>
</li>
</ul>
</li>
</ul>
<p>  更多详见 <a href="https://eisenhao.cn/2018/08/31/write-a-md-file/">基于 Hexo 的 Markdown 博文语法简介 | EisenHao’s Note</a> </p>
<ul>
<li>上传文章</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo d	# 地址为https://zennnnnnnnnnnn.github.io。</span><br><span class="line"># 本地测试可以用hexo s，并在http://localhost:4000/上看到结果</span><br></pre></td></tr></table></figure>
<ul>
<li><p>统计评论</p>
<p>评论由 <a href="https://console.leancloud.cn/apps">LeanCloud</a> 管理，在 <a href="https://console.leancloud.cn/apps">LeanCloud</a> 查看。</p>
</li>
</ul>
<h2 id="从零开始hexo"><a href="#从零开始hexo" class="headerlink" title="从零开始hexo"></a>从零开始hexo</h2><h3 id="搭建hexo环境"><a href="#搭建hexo环境" class="headerlink" title="搭建hexo环境"></a>搭建hexo环境</h3><p> <a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">(105条消息) hexo史上最全搭建教程_zjufangzh的博客-CSDN博客_hexo</a> </p>
<p> <a href="https://zhuanlan.zhihu.com/p/85037427">Hexo系列 | Hexo的基本使用 - 知乎 (zhihu.com)</a> </p>
<h4 id="文件夹说明"><a href="#文件夹说明" class="headerlink" title="文件夹说明"></a>文件夹说明</h4><ul>
<li><code>source</code><ul>
<li>hexo的<strong>文章</strong>位于<code>source/_posts</code>文件夹中，可以自己新建文件夹存放，没区别。</li>
<li>可通过<code>hexo new page name</code>新建<strong>tags、categories、about</strong>等文件，存放于此。</li>
</ul>
</li>
<li><code>_config.yml</code><strong>编辑</strong>文章标题等<strong>基础元素</strong>。</li>
<li><code>scaffolds</code>文件夹存放新建文章的<strong>模板</strong>。</li>
<li><code>themes</code>存放<strong>主题</strong>，一般留一个就行了。</li>
<li><code>public</code>：存放生成的<strong>页面</strong></li>
</ul>
<p>其余的都在<strong>主题文件夹</strong>中。</p>
<h3 id="更换hexo主题"><a href="#更换hexo主题" class="headerlink" title="更换hexo主题"></a>更换hexo主题</h3><p>一开始就找了一个好看的主题，结果发现功能不能自己开发，最后还是选择了比较常用的<strong>next</strong>主题。开发新主题——新的支线任务。</p>
<h3 id="next主题使用说明"><a href="#next主题使用说明" class="headerlink" title="next主题使用说明"></a>next主题使用说明</h3><p> <a href="https://blog.csdn.net/qq_34003239/article/details/100883213">(105条消息) Next主题美化_蜗牛非牛的博客-CSDN博客_next主题美化</a> </p>
<p>现在的主题包括：</p>
<p>​    菜单栏、搜索功能、网页图标、联系方式、文章结束标志、文章版权信息、访问统计（ <a href="https://blog.csdn.net/Awt_FuDongLai/article/details/107458310">(105条消息) hexo笔记十二：next主题统计网站与文章的浏览人数及次数_小镇攻城狮的博客-CSDN博客</a> ）、github绑带、修改块间距 （<a href="https://blog.csdn.net/mqdxiaoxiao/article/details/93797964">(105条消息) Hexo博客NexT主题下添加文章边框阴影效果_野猿新一的博客-CSDN博客</a> ）、添加圆角（ <a href="https://blog.csdn.net/Growing_potato/article/details/113926856?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-113926856-blog-93797964.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~CTRLIST~Rate-1-113926856-blog-93797964.pc_relevant_default&amp;utm_relevant_index=1">(105条消息) next主题美化——背景图片、页面透明化、阴影、圆角、动画_Oath丶forever的博客-CSDN博客_next主题美化</a> ）、文章排序（ <a href="https://blog.csdn.net/nineya_com/article/details/103394315">(105条消息) hexo博客文章置顶功能实现的两种方法_玖涯的博客-CSDN博客_hexo置顶</a> ）</p>
<p>此外还有：</p>
<p>​    代码复制、修改背景颜色、修改字体</p>
<h4 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h4><p>修改typora的<strong>偏好设置</strong>，之后从网页复制图片会自动下载图片到对应文件夹。</p>
<p>我用的配置：</p>
<p><img src="/2022/library/frontend/%E3%80%90hexo%E3%80%91%E5%AD%A6%E4%B9%A0/1663507479006.png" alt="1663507479006"></p>
<p> <a href="https://blog.csdn.net/xjm850552586/article/details/84101345">hexo引用本地图片无法显示</a> </p>
<p><strong>！！！⬆帮大忙了！感谢⬆！！！</strong></p>
<p><em>注意</em>还是要存放<strong>图片的文件夹名</strong>与 <strong>md文件名</strong> 一致才行</p>
<blockquote>
<p>最后的解决办法：</p>
<p>删除node_modules的hexo-asset-image文件夹，<code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code>，设置配置文件<code>post_asset_folder: true</code>(最后一步很重要，我是看了public文件夹发现没有他，<code>hexo g</code>之后不会打包图片文件)</p>
<p>此外github不太稳定，有时很奇怪的只是打不开<code>.github.io</code>的项目</p>
<p>2022.12.17</p>
<p>改成用图床了，picgo + smms，图床设置如下</p>
</blockquote>
<p>（老版本 typora 没有这个选项）</p>
<p>选择 smms 一部分原因是，配置方便，只需要在官网注册账号，下面链接获取 token，填到 picgo 中就行了</p>
<p>smms 存储空间只有 5GB</p>
<p><a href="https://github.com/Molunerfinn/picgo/releases">Releases · Molunerfinn/PicGo (github.com)</a></p>
<p><a href="https://sm.ms/home/apitoken">API Access - SM.MS | Dashboard</a> 获取token</p>
<p><img src="https://s2.loli.net/2022/12/17/dmTB32HXcNbfGgY.png" alt="image-20221217163306575"></p>
<ul>
<li><p>遇到的问题</p>
<ol>
<li><p>picgo本地导不进去</p>
<p><strong>参考新版本方法</strong><img src="https://s2.loli.net/2022/12/17/qedk7jbSt4iKYU1.png" alt="image-20221217163453870"></p>
</li>
<li><p>图片上传和显示速度都比较慢（偶尔有快了）</p>
<p>考虑不用smms</p>
</li>
</ol>
</li>
</ul>
<h4 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h4><ol>
<li><p>在<code>_post</code>文件夹中自己新建文件夹，每组文件夹添加<strong>模板文档</strong></p>
</li>
<li><p>网页端管理：</p>
<p>在线尝试：<a href="https://link.zhihu.com/?target=https%3A//link.yujianghao.cn/hexondemo">Hexon</a></p>
<p>网站和安装：<a href="https://link.zhihu.com/?target=https%3A//link.yujianghao.cn/hexongitee">gitee</a> | <a href="https://link.zhihu.com/?target=https%3A//link.yujianghao.cn/hexongithub">github</a></p>
<p> 进一步<strong>electron</strong>封装 </p>
</li>
</ol>
<h4 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h4> <span class="label primary">bat相关知识</span> 创建`.bat`文件，里面写入正常cmd命令，即可双击运行。

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd D:\MyData\hexoData\first\first</span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>
<p>我还创建了一键上传和新建博客，放在存放 md 文件的文件夹中。</p>
<h4 id="隐藏部分文章"><a href="#隐藏部分文章" class="headerlink" title="隐藏部分文章"></a>隐藏部分文章</h4><p><code>npm install hexo-hide-posts --save</code>安装，并在站点<code>_config.yml</code>下添加如下配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># hexo-hide-posts</span><br><span class="line">hide_posts:</span><br><span class="line"># 可以改成其他你喜欢的名字</span><br><span class="line">  filter: hidden</span><br><span class="line"># 指定你想要传递隐藏文章的位置，比如让所有隐藏文章在存档页面可见</span><br><span class="line"># 常见的位置有：index, tag, category, archive, sitemap, feed, etc.</span><br><span class="line"># 留空则默认全部隐藏</span><br><span class="line">  public_generators: []</span><br><span class="line"># 为隐藏的文章添加 noindex meta 标签，阻止搜索引擎收录</span><br><span class="line">  noindex: true</span><br></pre></td></tr></table></figure>
<h4 id="添加版本更新通知"><a href="#添加版本更新通知" class="headerlink" title="添加版本更新通知"></a>添加版本更新通知</h4><p><img src="/2022/library/frontend/%E3%80%90hexo%E3%80%91%E5%AD%A6%E4%B9%A0/1663655817135.png" alt="1663655817135" style="zoom:25%;"></p>
<p>真没想到成功了，以为寄了，有生之年！</p>
<p>​    <code>npm i hexo-offline-popup --save</code>安装后就有了。</p>
<p>​    他主要是一个提升访问速度的插件，只不过配置后好像不增反降，就索性关掉了配置。</p>
<h4 id="百度、谷歌收录"><a href="#百度、谷歌收录" class="headerlink" title="百度、谷歌收录"></a>百度、谷歌收录</h4><p>​    <strong>完全参考</strong> <a href="https://cjh0613.com/20200603HexoSubmitUrlsToSearchEngine#必应">hexo-submit-urls-to-search-engine 中文文档 | 峡州仙士之页 (cjh0613.com)</a> ，以后更新也得靠他！</p>
<p>​    谷歌的上传和搜索都需要翻墙，暂时没弄。</p>
<p>​     可以配合 <a href="https://blog.csdn.net/weixin_41800884/article/details/103750683">hexo搭建博客系列(六)百度，必应，谷歌收录</a> 食用，里面有些具体操作。</p>
<h4 id="github表"><a href="#github表" class="headerlink" title="github表"></a>github表</h4><p> <a href="https://blog.csdn.net/weixin_44580076/article/details/118737615">手把手教你在Hexo中使用Github贡献日历（以Next主题为例）</a> </p>
<h4 id="提升访问速度"><a href="#提升访问速度" class="headerlink" title="提升访问速度"></a>提升访问速度</h4><p>静态资源压缩常规做法用gulp，不过我尝试失败了，同时每次压缩还要输入额外的命令，个人不喜欢</p>
<ul>
<li><p>图片压缩：<code>hexo-neat</code></p>
<p>安装 <code>npm install hexo-neat --save</code></p>
<p>在配置文件中添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># hexo-neat</span><br><span class="line"># 博文压缩</span><br><span class="line">neat_enable: true</span><br><span class="line"># 压缩html</span><br><span class="line">neat_html:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line"># 压缩css  </span><br><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - &#x27;**/*.min.css&#x27;</span><br><span class="line"># 压缩js</span><br><span class="line">neat_js:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - &#x27;**/*.min.js&#x27;</span><br><span class="line">    - &#x27;**/jquery.fancybox.pack.js&#x27;</span><br><span class="line">    - &#x27;**/index.js&#x27;  </span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/rozbo/hexo-neat">GitHub项目地址</a></p>
<p> <a href="https://blog.csdn.net/weixin_41287260/article/details/99687257">Hexo文件压缩：使用hexo-neat插件压缩页面静态资源</a> </p>
</li>
</ul>
<h4 id="完全新建界面"><a href="#完全新建界面" class="headerlink" title="完全新建界面"></a>完全新建界面</h4><ul>
<li><code>hexo n page mypage</code>创建界面</li>
<li>在新界面中新建<code>index.html</code>文件</li>
<li>在主题配置文档中添加<code>mypage: /mypage/ || fa fa-th</code></li>
</ul>
<h4 id="插入数学公式"><a href="#插入数学公式" class="headerlink" title="插入数学公式"></a>插入数学公式</h4><p> <a href="https://blog.csdn.net/weixin_45511189/article/details/115798563">(106条消息) hexo博客next主题添加对数学公式的支持_阳光洒在杨树上的博客-CSDN博客_hexo公式</a> </p>
<h2 id="缺点："><a href="#缺点：" class="headerlink" title="缺点："></a>缺点：</h2><ul>
<li><p>标题级别间差别不大</p>
<p><img src="/2022/library/frontend/%E3%80%90hexo%E3%80%91%E5%AD%A6%E4%B9%A0/1663226540949.png" alt="img" style="zoom:33%;"></p>
<ul>
<li>hexo + github 速度太慢！</li>
</ul>
</li>
</ul>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul>
<li>开<code>steam++加速器</code>会导致不能deploy</li>
</ul>
]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>inte</tag>
        <tag>library</tag>
      </tags>
  </entry>
  <entry>
    <title>Write blog using markdown</title>
    <url>/2022/others/Write-blog-using-markdown/</url>
    <content><![CDATA[<p> this is my first try！</p>
<span id="more"></span> 
<p>qwerqwer</p>
]]></content>
      <tags>
        <tag>like</tag>
      </tags>
  </entry>
</search>
